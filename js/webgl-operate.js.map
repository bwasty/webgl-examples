{"version":3,"sources":["webpack://gloperate/webpack/universalModuleDefinition","webpack://gloperate/webpack/bootstrap","webpack://gloperate/./auxiliaries.ts","webpack://gloperate/./initializable.ts","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/common.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/quat.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/quat2.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix.js","webpack://gloperate/./gl-matrix-extensions.ts","webpack://gloperate/./object.ts","webpack://gloperate/external {\"root\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"commonjs2\":\"rxjs\",\"amd\":\"rxjs\"}","webpack://gloperate/../node_modules/jsonschema/lib/helpers.js","webpack://gloperate/./cameramodifier.ts","webpack://gloperate/./framebuffer.ts","webpack://gloperate/./texture2.ts","webpack://gloperate/./program.ts","webpack://gloperate/./shader.ts","webpack://gloperate/./ndcfillingtriangle.ts","webpack://gloperate/./tuples.ts","webpack://gloperate/./wizard.ts","webpack://gloperate/./context.ts","webpack://gloperate/./extensionshash.ts","webpack://gloperate/./color.ts","webpack://gloperate/./mouseeventprovider.ts","webpack://gloperate/./pointerlock.ts","webpack://gloperate/./toucheventprovider.ts","webpack://gloperate/./changelookup.ts","webpack://gloperate/./buffer.ts","webpack://gloperate/../node_modules/url/url.js","webpack://gloperate/../node_modules/jsonschema/lib/scan.js","webpack://gloperate/./formatbytesizes.ts","webpack://gloperate/./geometry.ts","webpack://gloperate/./kernel.ts","webpack://gloperate/./shaders/ndcvertices.vert","webpack://gloperate/./eventhandler.ts","webpack://gloperate/./renderbuffer.ts","webpack://gloperate/./renderer.ts","webpack://gloperate/./contextmasquerade.ts","webpack://gloperate/./extensions.ts","webpack://gloperate/./canvas.ts","webpack://gloperate/./controller.ts","webpack://gloperate/./vertexarray.ts","webpack://gloperate/./camera.ts","webpack://gloperate/./firstpersonmodifier.ts","webpack://gloperate/./trackballmodifier.ts","webpack://gloperate/./turntablemodifier.ts","webpack://gloperate/./randomsquarekernel.ts","webpack://gloperate/./framedata.ts","webpack://gloperate/./renderview.ts","webpack://gloperate/./xrrenderer.ts","webpack://gloperate/./fetch.ts","webpack://gloperate/./properties.ts","webpack://gloperate/./defaultframebuffer.ts","webpack://gloperate/./antialiasingkernel.ts","webpack://gloperate/./accumulatepass.ts","webpack://gloperate/./blitpass.ts","webpack://gloperate/./polyfill.ts","webpack://gloperate/./webgl-operate.slim.ts","webpack://gloperate/./version.ts","webpack://gloperate/./allocationregister.ts","webpack://gloperate/./gl2facade.ts","webpack://gloperate/./resizable.ts","webpack://gloperate/./colorscale.ts","webpack://gloperate/../node_modules/jsonschema/lib/index.js","webpack://gloperate/../node_modules/jsonschema/lib/validator.js","webpack://gloperate/../node_modules/punycode/punycode.js","webpack://gloperate/../node_modules/webpack/buildin/module.js","webpack://gloperate/../node_modules/webpack/buildin/global.js","webpack://gloperate/../node_modules/url/util.js","webpack://gloperate/../node_modules/querystring-es3/index.js","webpack://gloperate/../node_modules/querystring-es3/decode.js","webpack://gloperate/../node_modules/querystring-es3/encode.js","webpack://gloperate/../node_modules/jsonschema/lib/attribute.js","webpack://gloperate/./texturecube.ts","webpack://gloperate/./navigation.ts","webpack://gloperate/./panmodifier.ts","webpack://gloperate/./zoommodifier.ts","webpack://gloperate/./ndcfillingrectangle.ts","webpack://gloperate/./shaders/accumulate.frag","webpack://gloperate/./shaders/blit.frag","webpack://gloperate/./readbackpass.ts","webpack://gloperate/./shaders/readbackdepth.frag","webpack://gloperate/./xrcontroller.ts","webpack://gloperate/./debug/testnavigation.ts","webpack://gloperate/./webgl-operate.ts","webpack://gloperate/./raymath.ts","webpack://gloperate/./debug/testrenderer.ts","webpack://gloperate/./debug/testrenderer.vert","webpack://gloperate/./debug/testrenderer.frag","webpack://gloperate/./viewer/eventblocker.ts","webpack://gloperate/./viewer/fullscreen.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","auxiliaries","gl_matrix_extensions_1","LogLevel","logVerbosityThreshold","logVerbosity","verbosity","undefined","Math","max","assertImpl","statement","message","EvalError","assertEmpty","log","console","logPerformanceStart","mark","start","assert","performance","getEntriesByName","length","logPerformanceStop","measureIndent","end","measure","clearMarks","clearMeasures","minIndent","indent","prettyMeasure","prettyPrintMilliseconds","duration","Debug","repeat","assertions","enable","logIf","logPerformanceStartIf","logPerformanceStopIf","rand","min","random","byteSuffixes","prettyPrintBytes","bytes","prefix","floor","pow","toFixed","msSuffixes","msScales","milliseconds","clamp","bitInBitfield","flags","flag","RAD2DEG","DEG2RAD","GETsearch","document","location","search","GETparameter","parameter","re","RegExp","match","auxiliaries_1","Initializable","_this","this","_initialized","assertInitialized","assertInitializedFalse","assertUninitialized","initialize","target","propertyKey","descriptor","apply","arguments","assertUninitializedFalse","uninitialize","assert_initialized","assert_uninitialized","constructor","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","abs","out","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","LDU","L","D","U","add","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","scale","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ab","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","a4","a5","b4","b5","mat2d_rotate","mat2d_scale","translate","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","fromMat4","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","x","y","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","a6","a7","a8","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","axis","len","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a9","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","round","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","angle","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","forEach","vec","stride","offset","count","fn","arg","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","vec4_random","v2","v3","v4","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_random","u1","u2","u3","sqrt1MinusU1","sqrtU1","quat_invert","dot","invDot","conjugate","fromMat3","fRoot","fTrace","j","k","fromEuler","halfToRad","cx","cy","cz","quat_str","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","view","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","mt","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","a_dot_b","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","p1","sinC","cosC","vec2_angle","len1","len2","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","__webpack_exports__","common_namespaceObject","mat2_namespaceObject","mat2d_namespaceObject","mat3_namespaceObject","mat4_namespaceObject","quat_namespaceObject","quat2_namespaceObject","vec2_namespaceObject","vec3_namespaceObject","vec4_namespaceObject","gl_matrix_extensions","gl_matrix_1","fract","sign","vec2","clamp2","abs2","vec3","clamp3","abs3","one256ths","encode_float24x1_to_uint8x3","decode_float24x1_from_uint8x3","encode_uint24_to_rgb8","encode_uint32_to_rgba8","decode_uint24_from_rgb8","decode_uint32_from_rgba8","fromVec4","vec4","clamp4","abs4","fromVec3","parseVec2","v2str","numbers","JSON","parse","error","isNaN","parseVec3","v3str","parseVec4","v4str","mix","value1","value2","interpolation","m2","mat2","m3","mat3","m4","mat4","initializable_1","AbstractObject","_super","context","identifier","_valid","_referenceCount","_context","_identifier","__extends","args","_i","allocationRegister","createUniqueIdentifier","deleteUniqueIdentifier","Error","reallocate","delete","_object","ref","initialized","unref","__decorate","uri","ValidationError","instance","schema","propertyPath","argument","id","stack","toString","ValidatorResult","options","ctx","errors","throwError","disableFormat","stringizer","addError","detail","err","push","importErrors","res","validatorType","map","join","SchemaError","msg","captureStackTrace","SchemaContext","base","schemas","resolve","makeChild","propertyName","makeSuffix","FORMAT_REGEXPS","date-time","date","time","email","ip-address","ipv6","color","hostname","host-name","alpha","alphanumeric","utc-millisec","input","parseFloat","parseInt","regex","result","e","style","phone","regexp","pattern","ipv4","isFormat","format","validator","test","customFormats","stringify","deepMerge","src","array","isArray","dst","concat","indexOf","keys","pathEncoder","encodeURIComponent","replace","deepCompareStrict","every","aKeys","bKeys","objectGetPath","parts","split","slice","shift","decodeURIComponent","encodePath","getDecimalPlaces","number","decimalPlaces","Number","decimalParts","camera_1","CameraModifier","_camera","_reference","Camera","camera","assign","update","object_1","renderbuffer_1","texture2_1","Framebuffer","_buffersByAttachment","Map","_texturesByAttachment","_colorClearQueue","_drawBuffers","_drawBuffersChanged","statusString","status","gl","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","attachments","gl2facade","createFramebuffer","_clearColors","COLOR_ATTACHMENT_MAX","COLOR_ATTACHMENT0","_clearDepth","_clearStencil","clear","isWebGL1","es2Clear","es3Clear","attachments_1","tuple","attachment","bufferOrTexture","Renderbuffer","Texture2","COLOR_ATTACHMENT_MIN","index","bindFramebuffer","FRAMEBUFFER","buffer","framebufferRenderbuffer","RENDERBUFFER","texture","framebufferTexture2D","TEXTURE_2D","drawBuffers","checkFramebufferStatus","isFramebuffer","Warning","DEFAULT_FRAMEBUFFER","WebGLFramebuffer","deleteFramebuffer","mask","unbind","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","clearColor","COLOR_BUFFER_BIT","colorClearQueue","_a","drawBuffer","clearBufferfv","COLOR","DEPTH","hasAttachment","has","isWebGL2","supportsDrawBuffers","alphaIssue","color2","premultipliedAlpha","depth","stencil","resize","NaN","attachments_2","formatbytesizes_1","_width","_height","_internalFormat","_format","_type","internalFormat","createTexture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","DEFAULT_TEXTURE","isTexture","WebGLTexture","deleteTexture","byteSizeOfFormat","HALF_FLOAT","RGBA16F","FLOAT","unit","activeTexture","load","crossOrigin","Promise","reject","image","Image","onerror","onload","data","filter","mag","wrap","wrap_s","wrap_t","reformat","allocated","Program","attach","shaders","shaders_1","shader","attachShader","link","linkProgram","getProgramParameter","LINK_STATUS","infoLog","getProgramInfoLog","detach","shaders_2","detachShader","numVertShaders","numFragShaders","shaders_3","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","WebGLProgram","isProgram","deleteProgram","useProgram","DEFAULT_PROGRAM","uniform","getUniformLocation","attribute","bindAttribLocation","getAttribLocation","Shader","source","createShader","WebGLShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","isShader","deleteShader","buffer_1","geometry_1","NdcFillingTriangle","vertexVBO","Buffer","_buffers","bindBuffers","indices","attribEnable","_aVertex","unbindBuffers","attribDisable","aVertex","valid","ARRAY_BUFFER","WebGLBuffer","VERTICES","STATIC_DRAW","draw","drawArrays","TRIANGLES","Geometry","tuples","tuple2","tuple3","tuple4","clampf","semantic","valueV1","Info","clampf2","tupleV2","clampf3","tupleV3","clampf4","tupleV4","duplicate2","duplicate3","duplicate4","equals2","t0","t1","equals3","equals4","Wizard","queryInternalTextureFormat","precision","floatWriteSupport","supportsTextureFloat","supportsColorBufferFloat","halfWriteSupport","supportsTextureHalfFloat","Precision","auto","internalFormatIndex","query","float","half","byte","colorBufferFloat","textureHalfFloat","UNSIGNED_BYTE","textureFloat","RGBA","RGBA32F","RGBA8","RGB","RGB32F","RGB16F","RGB8","NONE","allocationregister_1","contextmasquerade_1","extensions_1","extensionshash_1","gl2facade_1","Context","_extensions","_allocationRegister","AllocationRegister","_mask","contextString","webgl1","webgl2","_backend","BackendType","WebGL1","WebGL2","valueOf","Invalid","queryExtensionSupport","functionsUndefine","func","_gl2","GL2Facade","createMasqueradeFromGETorDataAttribute","dataset","ContextMasquerade","fromGET","msqrdH","fromHash","msqrdP","fromPreset","request","element","attributes","DEFAULT_ATTRIBUTES","backend","toLowerCase","BackendRequestType","webgl","experimental","experimental1","experimental2","requestWebGL2","requestWebGL1","getContext","getContextAttributes","antialias","failIfMajorPerformanceCaveat","preserveDrawingBuffer","supports","extension","extensionsConceal","WEBGL1_EXTENSIONS","WEBGL2_DEFAULT_EXTENSIONS","WEBGL2_EXTENSIONS","getSupportedExtensions","ANGLE_instanced_arrays_supported","EXT_blend_minmax_supported","EXT_color_buffer_half_float_supported","EXT_disjoint_timer_query_supported","EXT_frag_depth_supported","EXT_sRGB_supported","EXT_shader_texture_lod_supported","OES_element_index_uint_supported","OES_standard_derivatives_supported","OES_texture_float_supported","OES_texture_half_float_supported","OES_vertex_array_object_supported","WEBGL_color_buffer_float_supported","WEBGL_depth_texture_supported","WEBGL_draw_buffers_supported","EXT_color_buffer_float_supported","EXT_disjoint_timer_query_webgl2_supported","EXT_texture_filter_anisotropic_supported","OES_texture_float_linear_supported","OES_texture_half_float_linear_supported","WEBGL_compressed_texture_astc_supported","WEBGL_compressed_texture_atc_supported","WEBGL_compressed_texture_etc_supported","WEBGL_compressed_texture_etc1_supported","WEBGL_compressed_texture_pvrtc_supported","WEBGL_compressed_texture_s3tc_supported","WEBGL_compressed_texture_s3tc_srgb_supported","WEBGL_debug_renderer_info_supported","WEBGL_debug_shaders_supported","WEBGL_lose_context_supported","getExtension","ANGLE_instanced_arrays","EXT_blend_minmax","EXT_color_buffer_half_float","EXT_disjoint_timer_query","EXT_disjoint_timer_query_webgl2","EXT_frag_depth","EXT_sRGB","EXT_shader_texture_lod","EXT_texture_filter_anisotropic","OES_element_index_uint","OES_standard_derivatives","OES_texture_float","OES_texture_float_linear","OES_texture_half_float","OES_texture_half_float_linear","OES_vertex_array_object","WEBGL_color_buffer_float","EXT_color_buffer_float","WEBGL_compressed_texture_astc","WEBGL_compressed_texture_atc","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_debug_renderer_info","WEBGL_debug_shaders","WEBGL_depth_texture","WEBGL_draw_buffers","WEBGL_lose_context","blitFramebuffer","readBuffer","hash","ExtensionsHash","encode","about","pNamesAndValues","getParameter","RENDERER","VENDOR","VERSION","SHADING_LANGUAGE_VERSION","supportsDebugRendererInfo","debugRendererInfo","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","String","devicePixelRatio","navigator","appCodeName","appName","appVersion","platform","vendor","vendorSub","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_VARYING_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORT_DIMS","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","MAX_COLOR_ATTACHMENTS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_DRAW_BUFFERS","MAX_ELEMENT_INDEX","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_PROGRAM_TEXEL_OFFSET","MAX_SAMPLES","MAX_SERVER_WAIT_TIMEOUT","MAX_TEXTURE_LOD_BIAS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_VARYING_COMPONENTS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MIN_PROGRAM_TEXEL_OFFSET","WEBGL1_EXTENSIONS_1","WEBGL2_DEFAULT_EXTENSIONS_1","_b","WEBGL2_EXTENSIONS_1","aboutString","maxPNameLength","about_1","extensionSeparator","about_2","logAbout","logAboutIf","encode64","bitfield","BASE64_ALPHABET","decode64","base64","supported","version","LATEST_VERSION","extensions","EXTENSIONS_BY_VERSION","backendIndex","WEBGL_BACKENDS","support","decode","hashHead","expectedHashLength","complement","WEBGL_EXTENSIONS_BY_BACKEND","ext","tuples_1","Color","rgba","_rgba","DEFAULT_ALPHA","_altered","fromF32","hue2rgb","to2CharHexCode","hsl2rgb","hsl","hslF","rgb2hsl","rgb","rgbF","delta","deltaR","deltaG","deltaB","lab2xyz","lab","labF","yr","xr","zr","yr3","xr3","zr3","xyz2lab","xyz","xyzF","xyz2rgb","g","rgb2xyz","lab2rgb","rgb2lab","cmyk2rgb","cmyk","cmykF","rgb2cmyk","k1","k2","k3","hex2rgba","hex","HEX_FORMAT_REGEX","startsWith","rgb2hex","rgba2hex","rgbaF","space","Space","LAB","CMYK","cmyka","fromCMYK","laba","fromLAB","HSL","hsla","fromHSL","fromRGB","other","red","green","blue","previous","fromUI8","hue","saturation","lightness","alphaf","greenRed","blueYellow","cyan","magenta","yellow","fromHex","gray","algorithm","GrayscaleAlgorithm","LinearLuminance","Average","LeastSaturatedVariant","MinimumDecomposition","MaximumDecomposition","ui8Array","Uint8Array","f32Array","rxjs_1","pointerlock_1","MouseEventProvider","timeframe","_pointerLockRequestPending","_element","_timeframe","addEventListener","processPointerLockRequests","PointerLock","preventDefaultOnEvent","event","_preventDefaultMask","preventDefault","types","types_1","allowDefault","types_2","observable","Type","Click","click$","Enter","enter$","Leave","leave$","Down","down$","Up","up$","Move","move$","Wheel","wheel$","active","lock","exit","_clickSubject","ReplaySubject","_clickListener","next","asObservable","_enterSubject","_enterListener","_leaveSubject","_leaveListener","_downSubject","_downListener","_upSubject","_upListener","_moveSubject","_moveListener","_wheelSubject","_wheelListener","queryAndCacheAPI","_exit","exits","exitPointerLock","mozExitPointerLock","webkitExitPointerLock","api","_request","requestPointerLock","pointerLockElement","mozCancelPointerLock","mozRequestPointerLock","mozPointerLockElement","webkitRequestPointerLock","webkitPointerLockElement","callback","TouchEventProvider","Start","start$","End","end$","Cancel","cancel$","Observable","_startSubject","_startListener","_endSubject","_endListener","_cancelSubject","_cancelListener","ChangeLookup","alter","path","any","names","parent","getOwnPropertyNames","child","reset","name_1","_target","DEFAULT_BUFFER","createBuffer","ELEMENT_ARRAY_BUFFER","deleteBuffer","bindBuffer","usage","bufferData","isBuffer","getError","NO_ERROR","byteLength","size","normalized","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","punycode","util","Url","protocol","slashes","auth","host","port","pathname","href","urlParse","relative","resolveObject","obj","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","url","parseQueryString","slashesDenoteHost","isObject","u","TypeError","queryIndex","splitter","uSplit","rest","trim","simplePath","exec","substr","proto","lowerProto","atSign","hostEnd","hec","lastIndexOf","parseHost","ipv6Hostname","hostparts","part","newpart","charCodeAt","validParts","notHost","bit","unshift","toASCII","h","ae","esc","escape","qm","charAt","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","splice","isAbsolute","urilib","helpers","SchemaScanResult","found","scan","scanSchema","baseuri","$ref","resolvedUri","ourBase","substring","scanArray","items","extends","additionalItems","scanObject","properties","additionalProperties","definitions","patternProperties","dependencies","disallow","allOf","anyOf","oneOf","not","UNSIGNED_INT_24_8_WEBGL","supportsDepthTexture","depthTexture","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT","UNSIGNED_INT","BYTE","SHORT","INT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_24_8","FLOAT_32_UNSIGNED_INT_24_8_REV","SRGB8_ALPHA8_EXT","supportsSRGB","sRGB","SRGB_EXT","SRGB_ALPHA_EXT","RGB32F_EXT","RGBA32F_EXT","ALPHA","LUMINANCE","R8","R8I","R8UI","STENCIL_INDEX8","DEPTH_COMPONENT16","LUMINANCE_ALPHA","R16F","R16I","R16UI","RG8","RG8I","RG8UI","RGB565","RGB5_A1","RGBA4","DEPTH_COMPONENT24","RGB8UI","SRGB","SRGB8","DEPTH_STENCIL","DEPTH24_STENCIL8","DEPTH_COMPONENT32F","R11F_G11F_B10F","R32F","R32I","R32UI","RG16F","RG16I","RG16UI","RGB10_A2","RGB10_A2UI","RGB9_E5","RGBA8I","RGBA8UI","SRGB8_ALPHA8","SRGB_ALPHA","SRGB_ALPHA8","SRGB_APLHA8","DEPTH32F_STENCIL8","RG32F","RG32I","RG32UI","RGBA16I","RGBA16UI","RGBA32I","RGBA32UI","DEPTH_COMPONENT","vertexarray_1","_vertexArray","VertexArray","targets","AbstractKernel","components","_components","_depth","xPosOrIndex","yPos","zPos","_samples","sample","elements","fromJSON","json","flatten","reduce","kernel","fromArray","xPos","position","clamped","sort","approach","SortApproach","BySquaredLength","iSource","iTarget","elementCount","bytesPerComponent","KernelF32","samples","KernelUI32","Uint32Array","KernelI32","Int32Array","KernelUI8","KernelI8","Int8Array","mouseeventprovider_1","toucheventprovider_1","EventHandler","invalidate","mouseEventProvider","touchEventProvider","_subscriptions","_latestMouseEventsByType","_previousMouseEventsByType","_mouseEventHandlerByType","_latestTouchEventsByType","_previousTouchEventsByType","_touchEventHandlerByType","_invalidate","_mouseEventProvider","_touchEventProvider","force","pushMouseEventHandler","handler","latest","subscribe","invokeMouseEventHandler","handlers","pushTouchEventHandler","invokeTouchEventHandler","dispose","unsubscribe","offsets","chromeWorkaround","MouseEvent","offsetX","offsetY","clientX","clientY","WheelEvent","TouchEvent","touches","touch","item","offsets_1","rect","currentTarget","srcElement","getBoundingClientRect","offsets_2","pushClickHandler","pushMouseEnterHandler","pushMouseLeaveHandler","pushMouseDownHandler","pushMouseUpHandler","pushMouseMoveHandler","pushMouseWheelHandler","pushTouchStartHandler","pushTouchEndHandler","pushTouchMoveHandler","pushTouchCancelHandler","pointerLock","createRenderbuffer","bindRenderbuffer","renderbufferStorage","isRenderbuffer","DEFAULT_RENDER_BUFFER","WebGLRenderbuffer","deleteRenderbuffer","changelookup_1","wizard_1","Renderer","multiFrameNumber","frameSize","canvasSize","framePrecision","debugTexture","_frameSize","_canvasSize","_framePrecision","_clearColor","_debugTextures","_debugTextureSubject","debugTextureNext","_debugTexture","onInitialize","onUninitialize","canvas","_multiFrameNumber","onUpdate","prepare","onPrepare","frame","frameNumber","onFrame","swap","onSwap","frameCoords","_extensionsStrive","_extensionsConceal","_functionsUndefine","preset","identifiers","presets","extensions_hash","extensions_conceal","extensions_strive","functions_undefine","msqrdHash","msqrdPreset","MASQUERADE_JSON","color_1","context_1","controller_1","resizable_1","Canvas","controller","_framePrecisionSubject","_size","_sizeSubject","_frameScaleSubject","_frameSizeSubject","HTMLCanvasElement","getElementById","dataClearColor","_controller","block","configureController","configureSizeAndScale","DEFAULT_CLEAR_COLOR","dataFramePrecision","accumulationFormat","DEFAULT_FRAME_PRECISION","framePrecisionNext","dataMFNum","dataDFNum","Controller","debugFrameNumber","DEFAULT_MULTI_FRAME_NUMBER","mfNumChanged","dfNumChanged","dataFrameScale","dataFrameSize","frameScale","_frameScale","_favorSizeOverScale","onResize","retrieveSize","Resizable","elementSize","sizeNext","_renderer","unblock","frameScaleNext","frameSizeNext","renderer","blocked","controllable","isFinite","backendString","_batchSize","_multiFrameNumberSubject","_debugFrameNumber","_debugFrameNumberSubject","_frameNumber","_frameNumberSubject","_pendingRequest","_pause","_block","_blockedUpdates","_intermediateFrameCount","_multiFrameCount","_intermediateFrameTimes","_multiTime","_debug","_controllable","dfnum","mfnum","pause","numRemainingIntermediates","requestAnimationFrame","invoke","RequestType","Frame","cancel","cancelAnimationFrame","Update","invokeUpdate","NonOptionalUpdate","Prepare","invokePrepare","invokeFrame","redraw","_pauseTime","_multiFrameTime","MAX_VALUE","MIN_VALUE","now","updateDuration","_updateFrameTime","debug","batchEnd","frameDuration","frameNumberNext","multiFrameNumberNext","debugFrameNumberNext","ignore","unpause","pauseDelay","multiFrameTime","_buffersBound","bindBOs","unbindBOs","supportsVertexArrayObject","createVertexArray","_bind","bindVertexArray","_unbind","DEFAULT_VERTEX_ARRAY","deleteVertexArray","_fovy","DEFAULT_FOVY","_near","DEFAULT_NEAR","_far","DEFAULT_FAR","_viewport","_aspect","_eye","DEFAULT_EYE","_center","DEFAULT_CENTER","_up","DEFAULT_UP","calculateFovY","elementDisplayHeight","eyeToDisplayDistance","atan","invalidateView","invalidateProjection","_view","_viewInverse","_projection","_projectionInverse","_viewProjection","_viewProjectionInverse","viewProjection","FirstPersonModifier","_rotation","_sensitivity","DEFAULT_SENSITIVITY","initiate","point","_initialPoint","process","movement","_currentPoint","magnitudes","centerToEye","strafe","yaw","pitch","T","sensitivity","TrackballModifier","quat","TurntableModifier","_maxAzimuth","_minAzimuth","_xAxisScreenSpace","_azimuth","RandomSquareKernel","generate","renderview_1","FrameData","_renderViews","_renderViewsValid","_inputData","_inputDataValid","_time","_frame","_frameOfReference","frameOfReference","pose","getDevicePose","views","RenderView","projectionMatrix","getViewMatrix","session","baseLayer","getViewport","sources","getInputSources","inputData","getInputPose","_cameraPosition","_cameraPositionValid","_viewProjectionMatrixValid","_projectionMatrix","_viewMatrix","viewMatrix","viewport","_inverseViewMatrix","_viewProjectionMatrix","XRRenderer","xrframe","frameData","onXRFrame","fetch","properties_1","failed","statusText","fetchAsync","transform","XMLHttpRequest","open","responseText","ontimeout","send","fetchJsonAsync","validate","jsonschema_1","references","Validator","references_1","reference","addSchema","propertiesSchema","properties_2","propertySchema","isDefined","hasProperties","hasDefault","writable","itemsSchema","compare","objectL","objectR","tracker","track","names_1","from","Set","values","name_2","framebuffer_1","DefaultFramebuffer","AntiAliasingKernel","ndcfillingtriangle_1","program_1","shader_1","AccumulatePass","passThrough","_precision","_write","_ndcTriangleShared","ndcTriangle","_accumulationFBOs","_accumulationTextures","vert","frag","_program","_uWeight","uniform1f","uniform1i","_ndcTriangle","_texture","_passThrough","sizeAltered","textureSize","readIndex","writeIndex","accumTexture","frameTexture","TEXTURE0","TEXTURE1","DRAW_FRAMEBUFFER","BlitPass","functionBlit","_framebuffer","READ_FRAMEBUFFER","_readBuffer","_drawBuffer","SCISSOR_TEST","scissor","disable","programBlit","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","supportsBlitFramebuffer","framebuffer","RangeError","rpt","searchString","action","that","log10","LOG10E","Float64Array","Uint16Array","Int16Array","version_1","branch","commit","canvas_1","eventhandler_1","colorscale_1","ColorScale","defaultframebuffer_1","renderer_1","texturecube_1","TextureCube","cameramodifier_1","navigation_1","Navigation","firstpersonmodifier_1","panmodifier_1","PanModifier","trackballmodifier_1","turntablemodifier_1","zoommodifier_1","ZoomModifier","ndcfillingrectangle_1","NdcFillingRectangle","kernel_1","antialiasingkernel_1","randomsquarekernel_1","kernel_2","accumulatepass_1","blitpass_1","readbackpass_1","ReadbackPass","root_auxiliaries","gl_matrix_2","root_gl_matrix_extensions","root_tuples","xrcontroller_1","XRController","xrrenderer_1","framedata_1","_bytesByIdentifier","_bytes","_bytesSubject","bytesNext","bytesToString","assertIdentifier","uniqueIdentifier","unificationSuffix","allocate","deallocate","previousBytes","output","queryHalfFloatSupport","queryColorAttachments","queryInstancedArraySupport","queryDrawBuffersSupport","queryVertexArrayObjectSupport","queryMaxUniformVec3Components","queryTexImageInterface","_halfFloat","HALF_FLOAT_OES","_colorAttachmentMin","_colorAttachmentMax","_colorAttachments","MAX_COLOR_ATTACHMENTS_WEBGL","COLOR_ATTACHMENT0_WEBGL","supportsInstancedArrays","drawArraysInstanced","first","instanceCount","instancedArrays","drawArraysInstancedANGLE","drawElementsInstanced","primcount","drawElementsInstancedANGLE","vertexAttribDivisor","divisor","vertexAttribDivisorANGLE","buffers","drawBuffersWEBGL","vertexArrayObject","createVertexArrayOES","arrayObject","deleteVertexArrayOES","isVertexArray","isVertexArrayOES","bindVertexArrayOES","_maxUniformVec3Components","level","internalformat","border","ArrayBuffer","Uint8ClampedArray","DataView","_resizeEventListener","instances","event_1","EVENT_IDENTIFIER","eventSupported","documentElement","body","getComputedStyle","removeEventListener","fetch_1","_colors","ArrayType","RGBf","RGBAf","stepCount","data_1","colorsByStepCount","colors","positions","positionsByStepCount","SCHEMA","interleavedColorComponents","lower","upper","posIndex","_hint","InterpolationHint","Nearest","hint","bitsUI8","bits","bitsF32","ScaleType","unresolvedRefs","validators","shouldResolve","self","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","validateSchema","switchSchema","schemaobj","schemaTraverser","superResolve","resolved","subctx","subschema","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","testType","string","integer","boolean","Date","global","__WEBPACK_AMD_DEFINE_RESULT__","nodeType","freeGlobal","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","overflow","not-basic","invalid-input","baseMinusTMin","stringFromCharCode","fromCharCode","mapDomain","ucs2decode","extra","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","adapt","numPoints","firstTime","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toUnicode","webpackPolyfill","deprecate","paths","children","Function","eval","prop","qs","sep","eq","maxKeys","kstr","vstr","idx","xs","stringifyPrimitive","objectKeys","ks","default","description","title","exclusiveMinimum","exclusiveMaximum","$schema","testSchemaNoThrow","testAdditionalProperty","preValidateProperty","some","list","inner","nestedErrors","minProperties","maxProperties","minimum","maximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","divisorDecimals","maxDecimals","multiplier","testArrays","multipleOf","divisibleBy","required","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dep","childContext","notTypes","schemaId","faceID","face","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP","LINEAR","urisByFace","images","positiveX","negativeX","positiveY","negativeY","positiveZ","negativeZ","waiting","images_1","bytesPerFace","perFaceData","clearOnUndefined","_alwaysRotateOnMove","_eventHandler","latests","onMouseDown","onMouseUp","onMouseMove","onClick","metaphor","Metaphor","Turntable","isPrimaryButtonDown","buttons","isMouseDown","isMouseMove","Modes","Rotate","_metaphor","FirstPerson","firstPerson","_firstPerson","movementX","movementY","Trackball","trackball","_trackball","turntable","_turntable","_mode","Zoom","modeWasUndefined","TRIANGLE_STRIP","_cache","_depthAttachment","_cachedDepths","_cachedIDs","_buffer","directReadDepthAt","_depthFBO","_referenceSize","readPixels","renderThenReadDepthAt","uniform2f","_uOffset","_uScale","depthAt","coordsAt","zInNDC","viewProjectionInverse","idAt","_idFBO","_idAttachment","sessionOpts","onXRFrameCallback","contextAttributes","frameOfRefType","inputPoses","sessionCreationOptions","supportsXR","requestDevice","device","sent","compatibleXRDevice","supportsSession","requestSession","_c","canvasEl","createElement","XRWebGLLayer","webGLLayerInit","requestFrameOfReference","frameOfRefOptions","frameOfRef","onEndSession","endSession","TestNavigation","onMouseEnter","onMouseLeave","__export","root_properties","root_fetch","root_raymath","ray_math","debug_TestNavigation","debug_TestRenderer","TestRenderer","viewer_EventBlocker","viewer_Fullscreen","viewer","EventBlocker","Fullscreen","rayCircleIntersection","ray0","ray1","radius","ray_direction","intersection","rayLineIntersection","line0","line1","cross_rs","qp","rayPlaneIntersection","origin","normal","rdDotN","distancePointToRay","ray_length","eyeToPoint","pointSquareIntersection","edgeLength","raySquareIntersection","halfLength","vertices","intersections","raySphereIntersection","rayOriginToSphereCenter","dot_term","rayPlaneIntersection_tube","intersection2","isPointWithinSquare","p_abs","isPointWithinNDC","p_transformed","eyeWithPointInView","ray_normalized","ortho_v","ortho_u","closest","part_v","part_u","testnavigation_1","supportsStandardDerivatives","standardDerivatives","_uNdcOffset","_uFrameNumber","_ndcOffsetKernel","_defaultFBO","_colorRenderTexture","_depthRenderbuffer","_intermediateFBO","_accumulate","_blit","BACK","_testNavigation","altered","ndcOffset","uniform2fv","events","_blockListenerByEvent","events_1","eventIdentifier","stopPropagation","exitFullScreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","fullscreenElement","_event","msRequestFullscreen","msFullscreenElement","mozRequestFullScreen","mozFullScreenElement","webkitRequestFullscreen","webkitFullscreenElement","toggle","isFullscreen","_callback"],"mappings":"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","file":"webgl-operate.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rxjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rxjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gloperate\"] = factory(require(\"rxjs\"));\n\telse\n\t\troot[\"gloperate\"] = factory(root[\"rxjs\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__5__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 84);\n","\r\nimport { clamp } from './gl-matrix-extensions';\r\n\r\n\r\n/**\r\n * If true, assertions immediately return on invocation (variable can be set via webpack define plugin).\r\n */\r\ndeclare var DISABLE_ASSERTIONS: boolean;\r\n\r\n/**\r\n * If defined, logs of equal or higher verbosity level are skipped (variable can be set via webpack define plugin).\r\n */\r\ndeclare var LOG_VERBOSITY_THRESHOLD: number; // -1 disables all logs\r\n\r\n\r\n/** Namespace that comprises various utils (also cleans up documentation). */\r\nnamespace auxiliaries {\r\n\r\n    /* istanbul ignore next line - LOG_VERBOSITY_THRESHOLD has to be defined by the build environment*/\r\n    let logVerbosityThreshold = typeof LOG_VERBOSITY_THRESHOLD !== 'undefined' ? LOG_VERBOSITY_THRESHOLD : 3;\r\n\r\n    /**\r\n     * Allows to specify the log verbosity. The default verbosity depends on the bundle type, e.g., a production bundle\r\n     * might use a verbosity of 1, a local development bundle might favor a verbosity of 2. Even though verbosity levels\r\n     * can be used arbitrarily, a verbosity of 0 is intended for user info only, 1 for developers, and 2 for developers\r\n     * of this module. However, this semantic breaks when reusing this logging mechanism in other modules as well...\r\n     * @param verbosity - Log level threshold, -1:disabled, 0:user, 1:developer, and 2:module developer.\r\n     * @returns - The current log verbosity.\r\n     */\r\n    export function logVerbosity(verbosity?: number): number {\r\n        if (verbosity !== undefined) {\r\n            logVerbosityThreshold = Math.max(-1, verbosity);\r\n        }\r\n        return logVerbosityThreshold;\r\n    }\r\n\r\n    /**\r\n     * Log verbosity levels.\r\n     */\r\n    export enum LogLevel { Debug = 3, Info = 2, Warning = 1, Error = 0 }\r\n\r\n    /**\r\n     * Evaluates the provided statement and throws an evaluation error if false.\r\n     * ```\r\n     * assert(foo <= threshold, `value of foo ${foo} exceeds threshold of ${threshold}`);\r\n     * ```\r\n     * @param statement - Result of an statement expected to be true.\r\n     * @param message - Message to be passed to the error (if thrown).\r\n     */\r\n    const assertImpl = (statement: boolean, message: string): void => {\r\n        if (statement) {\r\n            return;\r\n        }\r\n        /* The parameters are intentionally not forwarded to console.assert since it does not interrupt execution. */\r\n        throw new EvalError(message);\r\n    };\r\n    const assertEmpty = (statement: boolean, message: string): void => { };\r\n\r\n    export let assert = assertImpl;\r\n    /* istanbul ignore next line - DISABLE_ASSERTIONS has to be defined by the build environment*/\r\n    if (typeof DISABLE_ASSERTIONS !== 'undefined' && DISABLE_ASSERTIONS) {\r\n        assert = assertEmpty;\r\n    }\r\n\r\n    /**\r\n     * Allows to specify whether or not assertions should be enabled or disabled/ignored.\r\n     * @param enable - If true, assertions will be evaluated and might throw errors.\r\n     */\r\n    export function assertions(enable?: boolean): boolean {\r\n        if (enable !== undefined) {\r\n            assert = enable ? assertImpl : assertEmpty;\r\n        }\r\n        return assert !== assertEmpty;\r\n    }\r\n\r\n    /**\r\n     * Writes a warning to the console when the evaluated statement is false.\r\n     * ```\r\n     * log(,`scale changed to ${scale}, given ${this._scale}`);\r\n     * ```\r\n     * @param statement - Result of an statement expected to be true.\r\n     * @param verbosity - Verbosity of log level: user, developer, or module developer.\r\n     * @param message - Message to be passed to the error (if thrown).\r\n     */\r\n    export function log(verbosity: LogLevel, message: string): void {\r\n        if (verbosity > logVerbosityThreshold) {\r\n            return;\r\n        }\r\n        console.log(`[${verbosity}] ${message}`);\r\n    }\r\n\r\n    /**\r\n     * Writes a lo message to the console when the evaluated statement is false.\r\n     * ```\r\n     * logIf(!vec2.equals(this._scale, scale), LogLevel.Info, `scale changed to ${scale}, given ${this._scale}`);\r\n     * ```\r\n     * @param statement - Result of an statement expected to be true.\r\n     * @param verbosity - Verbosity of log level: debug, info, warning, or error.\r\n     * @param message - Message to be passed to the error (if thrown).\r\n     */\r\n    export function logIf(statement: boolean, verbosity: LogLevel, message: string): void {\r\n        if (!statement) {\r\n            return;\r\n        }\r\n        log(verbosity, message);\r\n    }\r\n\r\n\r\n    /**\r\n     * Starts performance measure using the performance API. This call initiates a performance mark and should be\r\n     * followed by a `logPerformanceStop` call later on. Furthermore, the measurement can be tracked using, e.g., the\r\n     * Chrome built-in performance profiler. Example:\r\n     * ```\r\n     * gloperate.auxiliaries.logPerformanceStart('initialization');\r\n     * ...\r\n     * gloperate.auxiliaries.logPerformanceStop('initialization');\r\n     * ```\r\n     * The example above should output something like: `[3] initialization | 5.635s`.\r\n     * @param mark - Name for the performance measure and base name for the start mark (`<mark>-start`).\r\n     */\r\n    export function logPerformanceStart(mark: string): void {\r\n        const start = `${mark}-start`;\r\n        assert(performance.getEntriesByName(mark).length === 0,\r\n            `expected mark identifier to not already exists, given ${mark}`);\r\n        assert(performance.getEntriesByName(start).length === 0,\r\n            `expected mark identifier to not already exists, given ${start}`);\r\n\r\n        performance.mark(start);\r\n    }\r\n\r\n    /**\r\n     * Invokes `logPerformanceStart` iff the statement resolves successfully.\r\n     * @param statement - Result of an statement expected to be true in order to invoke logPerformanceStart.\r\n     * @param mark - Name for the performance measure mark ... @see {@link logPerformanceStart}.\r\n     */\r\n    export function logPerformanceStartIf(statement: boolean, mark: string): void {\r\n        if (!statement) {\r\n            return;\r\n        }\r\n        logPerformanceStart(mark);\r\n    }\r\n\r\n    /**\r\n     * This creates a second, end mark for the given mark name, then creates a performance measure between the start\r\n     * and end mark (`<mark>-start` and `<mark>-end`), resolves the duration for logging and, finally, removes/cleans\r\n     * both marks and the measure. The duration is pretty printed ranging from nanoseconds to seconds. Example:\r\n     * ```\r\n     * gloperate.auxiliaries.logPerformanceStart('initialization');\r\n     * ...\r\n     * gloperate.auxiliaries.logPerformanceStop('initialization', '#items processed: ' + items.length , 48);\r\n     * ```\r\n     * The example above should output something like: `[3] initialization           #items processed: 4096 | 7.172ms`.\r\n     * @param mark - Name for the performance measure and base name for the end mark (`<mark>-end`).\r\n     * @param message - Optional message to provide to the debug-log output.\r\n     * @param measureIndent - Optional indentation of the measure (useful if multiple measurements shall be aligned).\r\n     */\r\n    export function logPerformanceStop(mark: string, message: string | undefined, measureIndent: number = 0): void {\r\n        const start = `${mark}-start`;\r\n        const end = `${mark}-end`;\r\n        assert(performance.getEntriesByName(mark).length === 0,\r\n            `expected mark identifier to not already exists, given ${mark}`);\r\n        assert(performance.getEntriesByName(end).length === 0,\r\n            `expected mark identifier to not already exists, given ${end}`);\r\n\r\n        performance.mark(end);\r\n        performance.measure(mark, start, end);\r\n\r\n        const measures = performance.getEntriesByName(mark);\r\n        const measure = measures[0];\r\n\r\n        performance.clearMarks(start);\r\n        performance.clearMarks(end);\r\n        performance.clearMeasures(mark);\r\n\r\n        const minIndent = message === undefined || message!.length === 0 ? 0 : 2;\r\n        const indent = Math.max(minIndent, measureIndent - mark.length - (message ? message!.length : 0) - 1);\r\n\r\n        const prettyMeasure = prettyPrintMilliseconds(measure.duration);\r\n        log(LogLevel.Debug, `${mark}${' '.repeat(indent)}${message ? message : ''} | ${prettyMeasure}`);\r\n    }\r\n\r\n    /**\r\n     * Invokes `logPerformanceStop` under the condition that the statement is true.\r\n     * @param statement - Result of an expression expected to be true in order to invoke logPerformanceStop.\r\n     * @param mark - Name for the performance measure mark ... @see {@link logPerformanceStart}.\r\n     * @param message - Optional message to provide to the debug-log output ... @see {@link logPerformanceStart}.\r\n     * @param measureIndent - Optional indentation of the measure ... @see {@link logPerformanceStart}.\r\n     */\r\n    export function logPerformanceStopIf(statement: boolean,\r\n        mark: string, message: string | undefined, measureIndent: number = 0): void {\r\n        if (!statement) {\r\n            return;\r\n        }\r\n        logPerformanceStop(mark, message, measureIndent);\r\n    }\r\n\r\n\r\n    /**\r\n     * Generates a random value within a given range [min,max].\r\n     * @param min - Minimum random value possible.\r\n     * @param max - Maximum random value possible.\r\n     * @return - Random number in the range [min,max].\r\n     */\r\n    export function rand(min: number = 0.0, max: number = 1.0): number {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    /**\r\n     * Byte suffixes based on ISO/IEC 80000 used for pretty printing of bytes.\r\n     */\r\n    const byteSuffixes: Array<string> = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi'];\r\n\r\n    /**\r\n     * Prints bytes using ISO/IEC 80000 postfixes for bytes and fixed number of decimal places (3 decimal places if\r\n     * bytes >= KiB).\r\n     * ```\r\n     * prettyPrintBytes(27738900); // returns '26.454MiB'\r\n     * ```\r\n     * @param bytes - Number of bytes in plain bytes.\r\n     */\r\n    export function prettyPrintBytes(bytes: number): string {\r\n        const prefix: number = bytes > 0 ? Math.floor(Math.log(bytes) / Math.log(1024)) : 0;\r\n        const value = bytes / Math.pow(1024, prefix);\r\n        return `${prefix > 0 ? value.toFixed(3) : value}${byteSuffixes[prefix]}B`;\r\n    }\r\n\r\n\r\n    /**\r\n     * Suffixes used for pretty printing of time values in milliseconds.\r\n     */\r\n    const msSuffixes: Array<string> = ['ms', 'ns', 'μs', 'ms', 's'];\r\n    /**\r\n     * Scales used for pretty printing of time values in milliseconds.\r\n     */\r\n    const msScales: Array<number> = [0, 1e+6, 1e+3, 1e+0, 1e-3];\r\n\r\n    /**\r\n     * Prints given milliseconds in an appropriate seconds-based time unit and fixed number of decimal places.\r\n     * ```\r\n     * prettyPrintMilliseconds(0.03277); // returns '32.770μs'\r\n     * ```\r\n     * @param milliseconds - Number of milliseconds as floating point number.\r\n     */\r\n    export function prettyPrintMilliseconds(milliseconds: number): string {\r\n        let prefix: number = milliseconds > 0 ?\r\n            Math.max(1, Math.floor(Math.log(milliseconds * 10) / Math.log(1e+3)) + 3) : 0;\r\n        prefix = clamp(prefix, 0, 4);\r\n\r\n        const value = milliseconds * msScales[prefix];\r\n        return `${value.toFixed(3)}${msSuffixes[prefix]}`;\r\n    }\r\n\r\n\r\n    /**\r\n     * Tests if specific bits are set in a given bitfield and returns true if so, false otherwise.\r\n     */\r\n    export function bitInBitfield(flags: GLbitfield, flag: GLbitfield | undefined): boolean {\r\n        if (flag === undefined) {\r\n            return false;\r\n        }\r\n        return (flags & flag) === flag;\r\n    }\r\n\r\n    /**\r\n     * Conversion multiplier for radians to degrees conversion (180 / PI).\r\n     */\r\n    export const RAD2DEG = 57.295779513082320;\r\n\r\n    /**\r\n     * Conversion multiplier for degrees to radians conversion (PI / 180).\r\n     */\r\n    export const DEG2RAD = 0.017453292519943295;\r\n\r\n    /**\r\n     * Queries window.location.search.\r\n     */\r\n    export function GETsearch(): string {\r\n        return document.location.search;\r\n    }\r\n\r\n    /**\r\n     * Queries the value of a GET parameter.\r\n     * @param parameter - Name/identifier of the parameter to query for.\r\n     */\r\n    export function GETparameter(parameter: string): string | undefined {\r\n        const re = new RegExp(`${parameter}=([^&]+)`);\r\n        const match = document.location.search.match(re);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        return match[1];\r\n    }\r\n\r\n}\r\n\r\nexport = auxiliaries;\r\n","\r\nimport { assert } from './auxiliaries';\r\n\r\n\r\ninterface MethodDecorator { (target: any, propertyKey: string, descriptor: PropertyDescriptor): PropertyDescriptor; }\r\n\r\n\r\n/**\r\n * Mixin that incorporates basic (un-)initialization workflow. The inheritor should specialize initialize and\r\n * uninitialize and decorate them with @initialize and @uninitialize respectively. When the object gets constructed it\r\n * is not initialized. It can be initialized only when it is not initialized and uninitialized vice versa. Failure\r\n * states result in invalid asserts.\r\n * The initialization status within the inheritor can be asserted using assertInitialized and assertUninitialized.\r\n * Note that the use of this class requires decorator support (compilerOptions: experimentalDecorators: true).\r\n * ```\r\n * class Test extends Initializable {\r\n *\r\n *     @initialize()\r\n *     initialize(name: string): boolean {\r\n *         ....\r\n *         return true;\r\n *     }\r\n *\r\n *     @uninitialize()\r\n *     uninitialize(): void {\r\n *         ...\r\n *     }\r\n *\r\n *     doStuffWhenInitialized(): void {\r\n *         this.assertInitialized();\r\n *         ...\r\n *     }\r\n *     // ... or alternatively:\r\n *     @assert_initialized()\r\n *     doOtherStuffWhenInitialized(): void {\r\n *         ...\r\n *     }\r\n * ```\r\n */\r\nexport abstract class Initializable {\r\n\r\n    /** @see {@link initialized} */\r\n    private _initialized = false;\r\n\r\n\r\n    protected static readonly assertInitializedFalse = (object: Initializable) =>\r\n        /* tslint:disable-next-line:semicolon */\r\n        assert(false, `instance of ${object.constructor.name} expected to be initialized`);\r\n    protected static readonly assertUninitializedFalse = (object: Initializable) =>\r\n        /* tslint:disable-next-line:semicolon */\r\n        assert(false, `instance of ${object.constructor.name} not expected to be initialized`);\r\n\r\n    /**\r\n     * Method decorator for initialization of Initializable inheritors. This decorator asserts the initialization status\r\n     * of the instance that is to be initialized, invokes its initialization with arbitrary number of parameters,\r\n     * and sets the initialization status to the initialization success (either false or true).\r\n     * In order to encourage the use of `assertInitialized` and `assertUninitialized` they are dynamically\r\n     * bound to either a static, always-failing assert or an empty/undefined function.\r\n     */\r\n    static initialize(): MethodDecorator {\r\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor): PropertyDescriptor => {\r\n\r\n            const initialize = descriptor.value;\r\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\r\n            descriptor.value = function (): boolean {\r\n                assert(this._initialized === false, `re-initialization of initialized object not anticipated`);\r\n\r\n                /* Call actual initialization and set initialization status. */\r\n                this._initialized = initialize.apply(this, arguments);\r\n\r\n                /* Assign assert functions for better performance when initialized. */\r\n                if (this._initialized) {\r\n                    this.assertInitialized = () => undefined;\r\n                    this.assertUninitialized = () => Initializable.assertUninitializedFalse(this);\r\n                } else {\r\n                    this.assertUninitialized = () => undefined;\r\n                    this.assertInitialized = () => Initializable.assertInitializedFalse(this);\r\n                }\r\n                return this._initialized;\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Method decorator for uninitialization of Initializable inheritors. This decorator asserts the initialization\r\n     * status of the instance that is to be uninitialized, invokes its uninitialization, and falsifies the\r\n     * initialization status. In order to encourage the use of `assertInitialized` and `assertUninitialized` they are\r\n     * dynamically bound to a static, always-failing assert and an empty/undefined function respectively.\r\n     */\r\n    static uninitialize(): MethodDecorator {\r\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n\r\n            const uninitialize = descriptor.value;\r\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\r\n            descriptor.value = function (): void {\r\n                assert(this._initialized === true, `expected object to be initialized in order to uninitialize`);\r\n\r\n                /* call actual uninitialization */\r\n                uninitialize.apply(this);\r\n                this._initialized = false;\r\n\r\n                /* assign assert functions for better performance when uninitialized */\r\n                this.assertUninitialized = () => undefined;\r\n                this.assertInitialized = () => Initializable.assertInitializedFalse(this);\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Method decorator for asserting the initialization status of an initializable to be true.\r\n     * @see {@link assertInitialized}\r\n     */\r\n    static assert_initialized(): MethodDecorator {\r\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n\r\n            const initialize = descriptor.value;\r\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\r\n            descriptor.value = function (): any {\r\n                this.assertInitialized();\r\n                /* call actual initialization and set initialization status */\r\n                return initialize.apply(this, arguments);\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Method decorator for asserting the initialization status of an initializable to be false.\r\n     * @see {@link assertUninitialized}\r\n     */\r\n    static assert_uninitialized(): MethodDecorator {\r\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n\r\n            const initialize = descriptor.value;\r\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\r\n            descriptor.value = function (): void {\r\n                this.assertUninitialized();\r\n                /* Call actual initialization and set initialization status. */\r\n                initialize.apply(this, arguments);\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Asserts the objects initialization status to be true. Note that the implementation is cached and forwarded to\r\n     * either an empty function when initialized and to an acutal assert(false) otherwise.\r\n     */\r\n    protected assertInitialized: () => void = () => Initializable.assertInitializedFalse(this);\r\n\r\n    /**\r\n     * Asserts the objects initialization status to be false. Note that the implementation is cached and forwarded to\r\n     * either an empty function when uninitialized and to an acutal assert(false) otherwise.\r\n     */\r\n    protected assertUninitialized: () => void = () => undefined;\r\n\r\n    /**\r\n     * Should implement actual initialization and has to be decorated by @initialize in order to assert initialization\r\n     * status and update the initialization status (based on return value).\r\n     * @param args - All args are passed to the onInitialize function a subclass must override.\r\n     * @returns - True if initialization was successful.\r\n     */\r\n    abstract initialize(...args: any[]): boolean;\r\n\r\n    /**\r\n     * Uninitialization event that should be specialized by inheritor and has to be decorated by @uninitialize in order\r\n     * to assert initialization status and set the initialization status to false.\r\n     */\r\n    abstract uninitialize(): void;\r\n\r\n    /**\r\n     * Property getter for readonly access to the initialization status of an initializable instance.\r\n     */\r\n    get initialized(): boolean {\r\n        return this._initialized;\r\n    }\r\n\r\n}\r\n","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n","import * as glMatrix from \"./common.js\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {quat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  let translation = new glMatrix.ARRAY_TYPE(3);\n  let bx = -a[0], by = -a[1], bz = -a[2], bw = a[3],\n  ax = a[4], ay = a[5], az = a[6], aw = a[7];\n\n  let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5]) && (mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  let out0 = (1 - (yy + zz)) * sx;\n  let out1 = (xy + wz) * sx;\n  let out2 = (xz - wy) * sx;\n  let out4 = (xy - wz) * sy;\n  let out5 = (1 - (xx + zz)) * sy;\n  let out6 = (yz + wx) * sy;\n  let out8 = (xz + wy) * sz;\n  let out9 = (yz - wx) * sz;\n  let out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2), nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = (2 * far * near) * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  len = x0*x0 + x1*x1 + x2*x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n    let x = a[0], y = a[1], z = a[2];\n    // var qvec = [qx, qy, qz];\n    // var uv = vec3.cross([], qvec, a);\n    let uvx = qy * z - qz * y,\n        uvy = qz * x - qx * z,\n        uvz = qx * y - qy * x;\n    // var uuv = vec3.cross([], qvec, uv);\n    let uuvx = qy * uvz - qz * uvy,\n        uuvy = qz * uvx - qx * uvz,\n        uuvz = qx * uvy - qy * uvx;\n    // vec3.scale(uv, uv, 2 * w);\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    // vec3.scale(uuv, uuv, 2);\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    // return vec3.add(out, a, vec3.add(out, uv, uuv));\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\"\nimport * as mat3 from \"./mat3.js\"\nimport * as vec3 from \"./vec3.js\"\nimport * as vec4 from \"./vec4.js\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > glMatrix.EPSILON ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Generates a random quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  let u1 = glMatrix.RANDOM();\n  let u2 = glMatrix.RANDOM();\n  let u3 = glMatrix.RANDOM();\n\n  let sqrt1MinusU1 = Math.sqrt(1 - u1);\n  let sqrtU1 = Math.sqrt(u1);\n\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\nexport function create() {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n  dq[3] = 1;\n  return dq;\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function clone(a) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  let ax = x2 * 0.5,\n    ay = y2 * 0.5,\n    az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q quaternion\n * @param {vec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotationTranslation(out, q, t) {\n  let ax = t[0] * 0.5,\n    ay = t[1] * 0.5,\n    az = t[2] * 0.5,\n    bx = q[0],\n    by = q[1],\n    bz = q[2],\n    bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Creates a dual quat from a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {vec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {mat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  let outer = quat.create();\n  mat4.getRotation(outer, a);\n  let t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} real part\n */\nexport const getReal = quat.copy;\n\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} dual part\n */\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\nexport const setReal = quat.copy;\n\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {quat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\nexport function getTranslation(out, a) {\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to translate\n * @param {vec3} v vector to translate by\n * @returns {quat2} out\n */\nexport function translate(out, a, v) {\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3],\n    bx1 = v[0] * 0.5,\n    by1 = v[1] * 0.5,\n    bz1 = v[2] * 0.5,\n    ax2 = a[4],\n    ay2 = a[5],\n    az2 = a[6],\n    aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateX(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateY(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateZ(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {quat} q quaternion to rotate by\n * @returns {quat2} out\n */\nexport function rotateByQuatAppend(out, a, q) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat} q quaternion to rotate by\n * @param {quat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\nexport function rotateByQuatPrepend(out, q, a) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    bx = a[0],\n    by = a[1],\n    bz = a[2],\n    bw = a[3];\n\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {vec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n  let axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  let bx = s * axis[0] / axisLength;\n  let by = s * axis[1] / axisLength;\n  let bz = s * axis[2] / axisLength;\n  let bw = Math.cos(rad);\n\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n\n  return out;\n}\n\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n * @function\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n */\nexport function multiply(out, a, b) {\n  let ax0 = a[0],\n    ay0 = a[1],\n    az0 = a[2],\n    aw0 = a[3],\n    bx1 = b[4],\n    by1 = b[5],\n    bz1 = b[6],\n    bw1 = b[7],\n    ax1 = a[4],\n    ay1 = a[5],\n    az1 = a[6],\n    aw1 = a[7],\n    bx0 = b[0],\n    by0 = b[1],\n    bz0 = b[2],\n    bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = quat.dot;\n\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\nexport function lerp(out, a, b, t) {\n  let mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\nexport function invert(out, a) {\n  let sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Calculates the length of a dual quat\n *\n * @param {quat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\nexport const length = quat.length;\n\n/**\n * Alias for {@link quat2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {quat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = quat.squaredLength;\n\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\nexport function normalize(out, a) {\n  let magnitude = squaredLength(a);\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n\n    let a0 = a[0] / magnitude;\n    let a1 = a[1] / magnitude;\n    let a2 = a[2] / magnitude;\n    let a3 = a[3] / magnitude;\n\n    let b0 = a[4];\n    let b1 = a[5];\n    let b2 = a[6];\n    let b3 = a[7];\n\n    let a_dot_b = (a0 * b0) + (a1 * b1) + (a2 * b2) + (a3 * b3);\n\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n\n    out[4] = (b0 - (a0 * a_dot_b)) / magnitude;\n    out[5] = (b1 - (a1 * a_dot_b)) / magnitude;\n    out[6] = (b2 - (a2 * a_dot_b)) / magnitude;\n    out[7] = (b3 - (a3 * a_dot_b)) / magnitude;\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {quat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat2} a the first dual quaternion.\n * @param {quat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n    a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {quat2} a the first dual quat.\n * @param {quat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  let b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)));\n}\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {vec2} a The vec2 point to rotate\n * @param {vec2} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  let p0 = a[0] - b[0],\n  p1 = a[1] - b[1],\n  sinC = Math.sin(c),\n  cosC = Math.cos(c);\n  \n  //perform rotation and translate to correct position\n  out[0] = p0*cosC - p1*sinC + b[0];\n  out[1] = p0*sinC + p1*cosC + b[1];\n\n  return out;\n}\n\n/**\n * Get the angle between two 2D vectors\n * @param {vec2} a The first operand\n * @param {vec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let x1 = a[0],\n    y1 = a[1],\n    x2 = b[0],\n    y2 = b[1];\n  \n  let len1 = x1*x1 + y1*y1;\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n  \n  let len2 = x2*x2 + y2*y2;\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n  \n  let cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n  \n  \n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./gl-matrix/common.js\";\nimport * as mat2 from \"./gl-matrix/mat2.js\";\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\nimport * as mat3 from \"./gl-matrix/mat3.js\";\nimport * as mat4 from \"./gl-matrix/mat4.js\";\nimport * as quat from \"./gl-matrix/quat.js\";\nimport * as quat2 from \"./gl-matrix/quat2.js\";\nimport * as vec2 from \"./gl-matrix/vec2.js\";\nimport * as vec3 from \"./gl-matrix/vec3.js\";\nimport * as vec4 from \"./gl-matrix/vec4.js\";\n\nexport {\n  glMatrix,\n  mat2, mat2d, mat3, mat4,\n  quat, quat2,\n  vec2, vec3, vec4,\n};\n","\r\nimport { mat2, mat3, mat4, vec2, vec3, vec4 } from 'gl-matrix';\r\n\r\n\r\n/** Namespace that comprises various gl-matrix extensions (also cleans up documentation). */\r\nnamespace gl_matrix_extensions {\r\n\r\n    // GLSL sign https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sign.xhtml\r\n\r\n    /**\r\n     * Extract the sign of the parameter as specified in GLSL.\r\n     * @param x - Value from which to extract the sign.\r\n     * @returns - -1.0 if x is less than 0.0, 0.0 if x is equal to 0.0, and +1.0 if x is greater than 0.0.\r\n     */\r\n    export function sign(x: number): number {\r\n        return x > 0.0 ? 1.0 : x < 0.0 ? -1.0 : 0.0;\r\n    }\r\n\r\n    // GLSL clamp https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/clamp.xhtml\r\n\r\n    /**\r\n     * Constrain a value to lie between two further values.\r\n     * ```\r\n     * clamp(+3, +0, +2); // results in +2;\r\n     * ```\r\n     * @param x - The number to clamp.\r\n     * @param min - Minimum number operand.\r\n     * @param max - Maximum number operand.\r\n     * @returns - Number constrained to [min,max].\r\n     */\r\n    export function clamp(x: number, min: number, max: number): number {\r\n        return Math.max(min, Math.min(max, x));\r\n    }\r\n\r\n    /**\r\n     * Compute the fractional part of the argument.\r\n     * ```\r\n     * fract(+1.23); // results in +0.23\r\n     * fract(-1.23); // results in -0.23\r\n     * ```\r\n     * @param x - The number to compute the fractional part of.\r\n     * @returns - The fractional part of x. This is calculated as x - floor(x).\r\n     */\r\n    export function fract(x: number): number {\r\n        return x > 0 ? x - Math.floor(x) : x - Math.ceil(x);\r\n    }\r\n\r\n\r\n    /**\r\n     * A vec2 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function v2(): vec2 {\r\n        return vec2.create();\r\n    }\r\n\r\n    /**\r\n     * Constrain a two-component vector to lie between two further two-component vectors.\r\n     * ```\r\n     * let a: vec2 = vec2.fromValues(2, 2);\r\n     * clamp2(a, a, [0, 0], [1, 1]);\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to clamp.\r\n     * @param min - Minimum vector operand.\r\n     * @param max - Maximum vector operand.\r\n     * @returns - Vector constrained to [min,max].\r\n     */\r\n    export function clamp2(out: vec2, x: vec2 | number[], min: vec2 | number[], max: vec2 | number[]): vec2 {\r\n        out[0] = Math.max(min[0], Math.min(max[0], x[0]));\r\n        out[1] = Math.max(min[1], Math.min(max[1], x[1]));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Derive the absolute values of each of the two vector components.\r\n     * ```\r\n     * let a: vec2 = vec2.fromValues(-2, 2);\r\n     * abs2(a, a); // should result in [2,2]\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to apply abs to.\r\n     * @returns - Vector with each component as absolute value.\r\n     */\r\n    export function abs2(out: vec2, x: vec2): vec2 {\r\n        out[0] = Math.abs(x[0]);\r\n        out[1] = Math.abs(x[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * A vec3 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function v3(): vec3 {\r\n        return vec3.create();\r\n    }\r\n\r\n    /**\r\n     * Constrain a three-component vector to lie between two further three-component vectors.\r\n     * ```\r\n     * let a: vec3 = vec3.fromValues(2, 2, 2);\r\n     * clamp3(a, a, [0, 0, 0], [1, 1, 1]);\r\n     * ```\r\n     * @param out -The receiving vector.\r\n     * @param x - The vector to clamp.\r\n     * @param min - Minimum vector operand.\r\n     * @param max - Maximum vector operand.\r\n     * @returns - Vector constrained to [min,max].\r\n     */\r\n    export function clamp3(out: vec3, x: vec3 | number[], min: vec3 | number[], max: vec3 | number[]): vec3 {\r\n        out[0] = Math.max(min[0], Math.min(max[0], x[0]));\r\n        out[1] = Math.max(min[1], Math.min(max[1], x[1]));\r\n        out[2] = Math.max(min[2], Math.min(max[2], x[2]));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Derive the absolute values of each of the three vector components.\r\n     * ```\r\n     * let a: vec3 = vec3.fromValues(-2, 2, -1);\r\n     * abs3(a, a); // should result in [2,2,1]\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to apply abs to.\r\n     * @returns  - Vector with each component as absolute value.\r\n     */\r\n    export function abs3(out: vec3, x: vec3): vec3 {\r\n        out[0] = Math.abs(x[0]);\r\n        out[1] = Math.abs(x[1]);\r\n        out[2] = Math.abs(x[2]);\r\n        return out;\r\n    }\r\n\r\n    const one256ths: number = 1.0 / 256.0;\r\n\r\n    /**\r\n     * Encodes a 24bit floating point in [0,1] into three 8bit components (vec3 of uint8).\r\n     * @param out - The vector to encode into.\r\n     * @param x - 24bit floating point number to encode.\r\n     * @returns - Vector with the float encoded.\r\n     */\r\n    export function encode_float24x1_to_uint8x3(out: vec3, x: number): vec3 {\r\n        out[0] = Math.floor(x * 256.0);\r\n        out[1] = Math.floor(fract(x * 256.0) * 256.0);\r\n        out[2] = Math.floor(fract(x * 65536.0) * 256.0);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Decodes three 8bit components of a vec3 to a 24bit floating point number.\r\n     * @param x - Vector with three 8bit unsigned int components (uint8x3).\r\n     * @returns - Encoded 24bit floating point number.\r\n     */\r\n    export function decode_float24x1_from_uint8x3(x: vec3): number {\r\n        return (x[0] + (x[1] + x[2] * one256ths) * one256ths) * one256ths;\r\n    }\r\n\r\n    /**\r\n     * Packs a 24bit unsigned int into a three component byte vector.\r\n     * ```\r\n     * let uint8x3: vec3 = vec3.create();\r\n     * encode_uint24_in_rgb8(uint8x3, 250285); // should result in [ 173, 209, 3 ]\r\n     * ```\r\n     * @param out - byte (uint8) vector with packed uint24 data\r\n     * @param x - uint24 number\r\n     * @returns - Three component byte vector with x packed.\r\n     */\r\n    export function encode_uint24_to_rgb8(out: vec3, x: number): vec3 {\r\n        out[0] = (x >> 0) & 0xFF;\r\n        out[1] = (x >> 8) & 0xFF;\r\n        out[2] = (x >> 16) & 0xFF;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Packs a 32bit unsigned int into a four component byte vector.\r\n     * ```\r\n     * let uint8x4: vec3 = vec4.create();\r\n     * encode_uint24_in_rgb8(uint8x4, 250285); // should result in [ 173, 209, 3, 0 ]\r\n     * ```\r\n     * @param out - byte (uint8) vector with packed uint32 data\r\n     * @param x - uint32 number\r\n     * @returns - Three component byte vector with x packed.\r\n     */\r\n    export function encode_uint32_to_rgba8(out: vec4, x: number): vec4 {\r\n        out[0] = (x >> 0) & 0xFF;\r\n        out[1] = (x >> 8) & 0xFF;\r\n        out[2] = (x >> 16) & 0xFF;\r\n        out[3] = (x >> 24) & 0xFF;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Unpacks a 24bit unsigned int from a three component byte vector.\r\n     * ```\r\n     * let uint8x3: vec3 = vec3.fromValues(173, 209, 3);\r\n     * decode_uint24_from_rgb8(uint8x3); // should return 250285\r\n     * ```\r\n     * @param x - byte (uint8) vector with packed uint24 data\r\n     * @returns - Unpacked 24bit unsigned int.\r\n     */\r\n    export function decode_uint24_from_rgb8(x: vec3): number {\r\n        return x[0] + (x[1] << 8) + (x[2] << 16);\r\n    }\r\n\r\n    /**\r\n     * Unpacks a 32bit unsigned int from a four component byte vector.\r\n     * ```\r\n     * let uint8x4: vec4 = vec4.fromValues(173, 209, 3, 23);\r\n     * decode_uint24_from_rgba8(uint8x4); // should return xxx\r\n     * ```\r\n     * @param x - byte (uint8) vector with packed uint32 data\r\n     * @returns - Unpacked 32bit unsigned int.\r\n     */\r\n    export function decode_uint32_from_rgba8(x: vec4): number {\r\n        return x[0] + (x[1] << 8) + (x[2] << 16) + (x[3] << 24);\r\n    }\r\n\r\n    /**\r\n     * Constructs a vec3 from a vec4 with division by the w component applied.\r\n     * ```\r\n     * const v4: vec4 = vec4.fromValues(2, 4, 6, 2);\r\n     * const v3: vec3 = fromVec4(v4); // v3 is [1, 2, 3]\r\n     * ```\r\n     * @param x - The vector to be transformed to a vec3.\r\n     * @returns - Three component vector based on x.\r\n     */\r\n    export function fromVec4(x: vec4): vec3 {\r\n        return vec3.fromValues(x[0] / x[3], x[1] / x[3], x[2] / x[3]);\r\n    }\r\n\r\n    /**\r\n     * A vec4 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function v4(): vec4 {\r\n        return vec4.create();\r\n    }\r\n\r\n    /**\r\n     * Constrain a four-component vector to lie between two further four-component vectors.\r\n     * ```\r\n     * let a: vec4 = vec4.fromValues(2, 2, 2, 2);\r\n     * clamp4(a, a, [0, 0, 0, 0], [1, 1, 1, 1]);\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to clamp.\r\n     * @param min - Minimum vector operand.\r\n     * @param max - Maximum vector operand.\r\n     * @returns - Vector constrained to [min,max].\r\n     */\r\n    export function clamp4(out: vec4, x: vec4 | number[], min: vec4 | number[], max: vec4 | number[]): vec4 {\r\n        out[0] = Math.max(min[0], Math.min(max[0], x[0]));\r\n        out[1] = Math.max(min[1], Math.min(max[1], x[1]));\r\n        out[2] = Math.max(min[2], Math.min(max[2], x[2]));\r\n        out[3] = Math.max(min[3], Math.min(max[3], x[3]));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Derive the absolute values of each of the four vector components.\r\n     * ```\r\n     * let a: vec4 = vec4.fromValues(-2, 2, -1, 1);\r\n     * abs4(a, a); // should result in [2,2,1,1]\r\n     * ```\r\n     * @param out - The receiving vector.\r\n     * @param x - The vector to apply abs to.\r\n     * @returns - Vector with each component as absolute value.\r\n     */\r\n    export function abs4(out: vec4, x: vec4): vec4 {\r\n        out[0] = Math.abs(x[0]);\r\n        out[1] = Math.abs(x[1]);\r\n        out[2] = Math.abs(x[2]);\r\n        out[3] = Math.abs(x[3]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Constructs a vec4 from a vec3 by appending 1.0 as the w component.\r\n     * ```\r\n     * const v3: vec3 = vec3.fromValues(2, 4, 6);\r\n     * const v4: vec4 = fromVec3(v3); // v3 is [2, 4, 6, 1]\r\n     * ```\r\n     * @param x - The vector to be transformed to a vec4.\r\n     * @returns - Four component vector based on x.\r\n     */\r\n    export function fromVec3(x: vec3): vec4 {\r\n        return vec4.fromValues(x[0], x[1], x[2], 1.0);\r\n    }\r\n\r\n\r\n    /**\r\n     * Parses a vec2 from a string.\r\n     * @param v2str - String in the format '<number>, <number>', e.g., '1.0, 0.0'.\r\n     * @returns - Vec2 if string was parsed successfully, undefined else.\r\n     */\r\n    export function parseVec2(v2str: string | undefined): vec2 | undefined {\r\n        if (v2str === undefined || v2str === '') {\r\n            return undefined;\r\n        }\r\n        let numbers = [];\r\n        try {\r\n            numbers = JSON.parse(`[${v2str}]`);\r\n        } catch (error) {\r\n            return undefined;\r\n        }\r\n        return numbers.length !== 2 || isNaN(numbers[0]) || isNaN(numbers[1]) ?\r\n            undefined : vec2.clone(numbers);\r\n    }\r\n\r\n    /**\r\n     * Parses a vec3 from a string.\r\n     * @param v3str - String in the format '<number>, <number>, <number>', e.g., '1.0, 0.0, 1.0'.\r\n     * @returns - Vec3 if string was parsed successfully, undefined else.\r\n     */\r\n    export function parseVec3(v3str: string | undefined): vec3 | undefined {\r\n        if (v3str === undefined || v3str === '') {\r\n            return undefined;\r\n        }\r\n        let numbers = [];\r\n        try {\r\n            numbers = JSON.parse(`[${v3str}]`);\r\n        } catch (error) {\r\n            return undefined;\r\n        }\r\n        return numbers.length !== 3 || isNaN(numbers[0]) || isNaN(numbers[1]) || isNaN(numbers[2]) ?\r\n            undefined : vec3.clone(numbers);\r\n    }\r\n\r\n    /**\r\n     * Parses a vec4 from a string.\r\n     * @param v4str - String in the format '<number>, <number>, <number>, <number>', e.g., '1.0, 0.0, 0.0, 0.0'.\r\n     * @returns - Vec4 if string was parsed successfully, undefined else.\r\n     */\r\n    export function parseVec4(v4str: string | undefined): vec4 | undefined {\r\n        if (v4str === undefined || v4str === '') {\r\n            return undefined;\r\n        }\r\n        let numbers = [];\r\n        try {\r\n            numbers = JSON.parse(`[${v4str}]`);\r\n        } catch (error) {\r\n            return undefined;\r\n        }\r\n        return numbers.length !== 4 || isNaN(numbers[0]) || isNaN(numbers[1]) ||\r\n            isNaN(numbers[2]) || isNaN(numbers[3]) ?\r\n            undefined : vec4.clone(numbers);\r\n    }\r\n\r\n\r\n    /**\r\n     * Performs a mix as specified in GLSL.\r\n     * @param value1 - The first value.\r\n     * @param value2 - The second value.\r\n     * @param interpolation - The interpolation value (usually between 0 and 1).\r\n     * @return - The interpolated value between value1 and value2.\r\n     */\r\n    export function mix(value1: number, value2: number, interpolation: number): number {\r\n        return value1 * (1.0 - interpolation) + value2 * interpolation;\r\n    }\r\n\r\n\r\n    /**\r\n     * A mat2 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function m2(): mat2 {\r\n        return mat2.create();\r\n    }\r\n    /**\r\n     * A mat3 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function m3(): mat3 {\r\n        return mat3.create();\r\n    }\r\n\r\n    /**\r\n     * A mat4 placeholder to overcome the gl-matrix out interface.\r\n     */\r\n    export function m4(): mat4 {\r\n        return mat4.create();\r\n    }\r\n\r\n}\r\n\r\nexport = gl_matrix_extensions;\r\n","\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\nimport { Initializable } from './initializable';\r\n\r\n\r\n/**\r\n * A generic WebGL object trait that has a size, a status, an identifier, and is initializable. A context and an object\r\n * handle are provided for internal use and can be read from outside. Furthermore, an object supports optional reference\r\n * counting. If used, an object cannot be initialized when already referenced, and cannot be delete as long as at least\r\n * a single reference is active.\r\n */\r\nexport abstract class AbstractObject<T> extends Initializable {\r\n\r\n    /** @see {@link context} */\r\n    protected _context: Context;\r\n\r\n    /** @see {@link identifier} */\r\n    protected _identifier: string;\r\n\r\n    /** @see {@link object} */\r\n    protected _object: T | undefined;\r\n\r\n    /** @see {@link valid} */\r\n    protected _valid = false;\r\n\r\n    /**\r\n     * Number of references to this object. If at least a single reference was counted, this object can neither be\r\n     * initialized (and thus created) nor uninitialized (and thus deleted). The reference count is controlled via\r\n     * ref() and unref() functions.\r\n     */\r\n    protected _referenceCount = 0;\r\n\r\n    /**\r\n     * Object constructor, requires a context and a valid identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super();\r\n        this._context = context;\r\n        this._identifier = identifier !== undefined && identifier !== `` ? identifier : 'Object';\r\n    }\r\n\r\n\r\n    /**\r\n     * Object creation which is invoked on initialization.\r\n     * @returns - The created WebGL object handle.\r\n     */\r\n    protected abstract create(...args: any[]): T | undefined;\r\n\r\n    /**\r\n     * Object deletion which is invoked on uninitialization.\r\n     */\r\n    protected abstract delete(): void;\r\n\r\n\r\n    /**\r\n     * @override\r\n     * Ensure that an object handle is created at the point of initialization. When overriding this function\r\n     * super.initialize() has to be invoked immediately/first. Please note that initialization of invalid\r\n     * object raises an assertion in order to prevent further actions without a valid WebGL object. After\r\n     * object creation the valid property is expected to be set accordingly.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(...args: any[]): boolean {\r\n        this._identifier = this._context.allocationRegister.createUniqueIdentifier(this._identifier);\r\n        this.create.apply(this, args);\r\n\r\n        if (!this._valid) {\r\n            this._context.allocationRegister.deleteUniqueIdentifier(this._identifier);\r\n            log(LogLevel.Error, `initialization of '${this._identifier}' failed`);\r\n        }\r\n        return this._valid;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Ensure that an object handle is deleted, invalidated, and its allocated GPU resources are set to zero.\r\n     * When overriding this function super.uninitialize() has to be invoked last/at the end.\r\n     * Note that an object cannot be uninitialized if it is referenced (reference count > 0).\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this._context.allocationRegister.reallocate(this._identifier, 0);\r\n        this._context.allocationRegister.deleteUniqueIdentifier(this._identifier);\r\n\r\n        this.delete();\r\n        assert(this._object === undefined, `expected object '${this._identifier}' to be undefined after delete`);\r\n        assert(this._valid === false, `expected object '${this._identifier}' to be invalid after delete`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Read-only access to the objects context, used to get context information and WebGL API access.\r\n     */\r\n    get context(): Context {\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * Every GPU asset that allocates memory should provide a human readable identifier for GPU allocation tracking and\r\n     * debugging purposes. Please note that the identifier might changed on initialization due to the generation and\r\n     * assignment of a unique identifier.\r\n     * @returns - This assets identifier used for gpu allocation tracking and debugging.\r\n     */\r\n    get identifier(): string {\r\n        return this._identifier;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the WebGL object handle.\r\n     */\r\n    get object(): T {\r\n        assert(this._object !== undefined, `access to undefined object`);\r\n        return this._object as T;\r\n    }\r\n\r\n    /**\r\n     * Cached object status used to derive validity when initialized.\r\n     * @returns - True if the object status is complete, false otherwise.\r\n     */\r\n    get valid(): boolean {\r\n        return this._valid;\r\n    }\r\n\r\n    /**\r\n     * Increment the reference count of this object.\r\n     */\r\n    ref(): void {\r\n        assert(this.initialized, `expected object to be initialized in order to be referenced`);\r\n        ++this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * Decrement the reference count of this object.\r\n     */\r\n    unref(): void {\r\n        assert(this._referenceCount > 0, `expected object to be referenced in order to decrease its reference count`);\r\n        --this._referenceCount;\r\n    }\r\n\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, propertyPath, name, argument) {\n  if (propertyPath) {\n    this.property = propertyPath;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    if (schema.id) {\n      this.schema = schema.id;\n    } else {\n      this.schema = schema;\n    }\n  }\n  if (instance) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.propertyPath);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.propertyPath, detail.name, detail.argument);\n  }\n\n  if (this.throwError) {\n    throw err;\n  }\n  this.errors.push(err);\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    Array.prototype.push.apply(this.errors, res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  { constructor: {value: SchemaError, enumerable: false}\n  , name: {value: 'SchemaError', enumerable: false}\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, propertyPath, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  this.propertyPath = propertyPath;\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var propertyPath = (propertyName===undefined) ? this.propertyPath : this.propertyPath+makeSuffix(propertyName);\n  var base = uri.resolve(this.base, schema.id||'');\n  var ctx = new SchemaContext(schema, this.options, propertyPath, base, Object.create(this.schemas));\n  if(schema.id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n}\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n  'uri': /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\\s]*$/,\n\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n  'style': /\\s*(.+?):\\s*([^;]+);?/g,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a instanceof Array) {\n    if (!(b instanceof Array)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e)\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e)\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key])\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n};\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n\t// ~ must be encoded explicitly because hacks\n\t// the slash is encoded by encodeURIComponent\n\treturn a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\n","\r\nimport { vec2 } from 'gl-matrix';\r\n\r\nimport { Camera } from './camera';\r\n\r\n\r\nexport abstract class CameraModifier {\r\n\r\n    /** @see {@link camera} */\r\n    protected _camera: Camera | undefined = undefined;\r\n\r\n    /**\r\n     * Copy of a camera for ongoing camera modifications based on previous/initial camera settings.\r\n     */\r\n    protected _reference = new Camera();\r\n\r\n    /**\r\n     * Reference to the initial point starting the camera modification.\r\n     */\r\n    protected _initialPoint: vec2;\r\n\r\n    /**\r\n     * Reference to the current point updating the camera modification.\r\n     */\r\n    protected _currentPoint: vec2;\r\n\r\n\r\n    /**\r\n     * Should apply all previously calculated transformations to the camera set. Note that this does not invalidate the\r\n     * rendering. Invalidation of rendering is done by the event handler (triggering a rendering update which in turn\r\n     * checks if the camera was altered, and if so, redraws).\r\n     */\r\n    abstract update(): void;\r\n\r\n\r\n    /**\r\n     * The camera that is to be modified in response to various events.\r\n     */\r\n    set camera(camera: Camera | undefined) {\r\n        if (this._camera === camera) {\r\n            return;\r\n        }\r\n        this._camera = camera;\r\n        if (camera === undefined) {\r\n            return;\r\n        }\r\n        Object.assign(this._reference, camera);\r\n        this.update();\r\n    }\r\n\r\n}\r\n","\r\nimport { assert, bitInBitfield, logIf, LogLevel } from './auxiliaries';\r\nimport { GLclampf4, GLsizei2 } from './tuples';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Context } from './context';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\nimport { Renderbuffer } from './renderbuffer';\r\nimport { Texture2 } from './texture2';\r\n\r\n\r\n/**\r\n * WebGL Framebuffer base implementation providing size accessors and requiring for bind, unbind, resize, validity,\r\n * and initialization implementations.\r\n * ```\r\n * @todo add usage example\r\n * ```\r\n */\r\nexport class Framebuffer extends AbstractObject<WebGLFramebuffer> implements Bindable {\r\n\r\n    /**\r\n     * Default framebuffer, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_FRAMEBUFFER = undefined;\r\n\r\n\r\n    /**\r\n     * Access to all attached renderbuffer objects.\r\n     */\r\n    protected _buffersByAttachment = new Map<GLenum, Renderbuffer>();\r\n\r\n    /**\r\n     * Access to all attached texture objects.\r\n     */\r\n    protected _texturesByAttachment = new Map<GLenum, Texture2>();\r\n\r\n    /**\r\n     * RGBA color, depth value, or stencil value used for clearing the\r\n     * associated buffer.\r\n     */\r\n    protected _clearDepth: GLfloat;\r\n    protected _clearStencil: GLint;\r\n    protected _clearColors: Array<GLclampf4>;\r\n    /**\r\n     * Queue of all draw buffers that are to be cleared on `clear`.\r\n     */\r\n    protected _colorClearQueue = new Array<GLint>();\r\n\r\n    /** @see {@link drawBuffers} */\r\n    protected _drawBuffers = new Array<GLenum>();\r\n    protected _drawBuffersChanged = false;\r\n\r\n    /**\r\n     * Depending on the webgl version and provided bitmask, clears attachments of the framebuffer. Note that this\r\n     * function is set/unset to gl1Clear or gl2Clear on initialization/uninitialization.\r\n     * @param mask - Bitmask specifying which bits are to be cleared (and thereby which attachments).\r\n     * @param bind - Allows to skip binding the framebuffer (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the framebuffer (e.g., when binding is handled outside).\r\n     * @param colorClearQueue - allows to specify a specific queue of color attachments to be cleared. The webgl1\r\n     * implementation ignores this parameter. If no parameter is given, the webgl2 implementation clears all color\r\n     * attachments.\r\n     */\r\n    clear: ((mask: GLbitfield, bind?: boolean, unbind?: boolean, colorClearQueue?: Array<GLint>) => void);\r\n\r\n    /**\r\n     * Returns a string describing the given status of a framebuffer object.\r\n     * @param context - Context for valid GLenums.\r\n     * @param status - A framebuffer's status.\r\n     */\r\n    protected static statusString(context: Context, status: GLenum): string {\r\n        const gl = context.gl;\r\n\r\n        switch (status) {\r\n            case gl.FRAMEBUFFER_COMPLETE:\r\n                return 'the framebuffer is ready to display (COMPLETE)';\r\n\r\n            case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\r\n                return 'the attachment types are mismatched or not all framebuffer attachment points are ' +\r\n                    'framebuffer attachment complete (INCOMPLETE_ATTACHMENT)';\r\n\r\n            case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\r\n                return 'there is no attachment (INCOMPLETE_MISSING_ATTACHMENT)';\r\n\r\n            case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\r\n                return 'height and width of the attachment are not the same (INCOMPLETE_DIMENSIONS)';\r\n\r\n            case gl.FRAMEBUFFER_UNSUPPORTED:\r\n                return 'the format of the attachment is not supported or if depth and stencil attachments are not ' +\r\n                    'the same renderbuffer (UNSUPPORTED)';\r\n\r\n            case gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:\r\n                return 'the values of gl.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are ' +\r\n                    'non-zero if the attached images are a mix of renderbuffers and textures (INCOMPLETE_MULTISAMPLE)';\r\n\r\n            default:\r\n                assert(false, `expected known framebuffer status, given ${status}`);\r\n                return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a framebuffer object on the GPU and attaches all given renderable objects (either renderbuffer or\r\n     * texture) to the framebuffer object.\r\n     * @param attachments - tuples that associate an attachment to its actual render object, either a renderbuffer or\r\n     * texture, e.g., `[ gl.COLOR_ATTACHMENT0, someTexture ]`.\r\n     */\r\n    protected create(attachments: Array<[GLenum, Renderbuffer | Texture2]>): WebGLFramebuffer | undefined {\r\n        const gl = this._context.gl;\r\n        const gl2facade = this.context.gl2facade;\r\n\r\n        this._object = gl.createFramebuffer();\r\n\r\n        /* Initialize clearing. */\r\n\r\n        this._clearColors = new Array<GLclampf4>(gl2facade.COLOR_ATTACHMENT_MAX - gl2facade.COLOR_ATTACHMENT0);\r\n        this._clearDepth = 1.0;\r\n        this._clearStencil = 0;\r\n\r\n        this.clear = this.context.isWebGL1 ? this.es2Clear : this.es3Clear;\r\n\r\n        /* Classify color attachments in textures and renderbuffer. */\r\n\r\n        for (const tuple of attachments) {\r\n            const attachment = tuple[0];\r\n            const bufferOrTexture = tuple[1];\r\n\r\n            if (bufferOrTexture instanceof Renderbuffer) {\r\n                this._buffersByAttachment.set(attachment, bufferOrTexture as Renderbuffer);\r\n            } else if (bufferOrTexture instanceof Texture2) {\r\n                this._texturesByAttachment.set(attachment, bufferOrTexture as Texture2);\r\n            }\r\n\r\n            if (attachment < gl2facade.COLOR_ATTACHMENT_MIN || attachment > gl2facade.COLOR_ATTACHMENT_MAX) {\r\n                continue;\r\n            }\r\n\r\n            /* Queue color attachments for color clearing. */\r\n            this._drawBuffers.push(attachment);\r\n\r\n            /* Derive the draw buffer index as GLint is required for clearBuffer. */\r\n            const index = attachment - gl.COLOR_ATTACHMENT0;\r\n            this._colorClearQueue.push(index as GLint);\r\n            /* Setup default clear color (required in webgl2 or drawBuffers extension). */\r\n            this._clearColors[index] = [0.0, 0.0, 0.0, 0.0];\r\n        }\r\n        this._drawBuffersChanged = true;\r\n\r\n\r\n        /* Setup attachments. */\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._object);\r\n\r\n        this._buffersByAttachment.forEach((buffer: Renderbuffer, attachment: GLenum) => {\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, buffer.object);\r\n\r\n        });\r\n        this._texturesByAttachment.forEach((texture: Texture2, attachment: GLenum) => {\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.object, 0);\r\n        });\r\n\r\n        if (gl2facade.drawBuffers) {\r\n            gl2facade.drawBuffers(this._drawBuffers);\r\n        }\r\n\r\n\r\n        /* Check status and cache minimum renderable area. */\r\n        const status: GLenum = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        this._valid = gl.isFramebuffer(this._object) && (status === gl.FRAMEBUFFER_COMPLETE);\r\n        logIf(!this._valid, LogLevel.Warning, Framebuffer.statusString(this.context, status));\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, Framebuffer.DEFAULT_FRAMEBUFFER);\r\n\r\n        return this._object;\r\n\r\n    }\r\n\r\n    /**\r\n     * Delete the framebuffer object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLFramebuffer, `expected WebGLFramebuffer object`);\r\n        this.context.gl.deleteFramebuffer(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * WebGL1 implementation for clearing framebuffer attachments.\r\n     * @param mask - A GLbitfield bitwise OR mask that indicates the buffers to be cleared.\r\n     * @param bind - Allows to skip binding the framebuffer (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the framebuffer (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    protected es2Clear(mask: GLbitfield, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        const clearDepth = bitInBitfield(mask, gl.DEPTH_BUFFER_BIT);\r\n        const clearStencil = bitInBitfield(mask, gl.STENCIL_BUFFER_BIT);\r\n        const clearColor = bitInBitfield(mask, gl.COLOR_BUFFER_BIT);\r\n\r\n        if (!clearColor && !clearDepth && !clearStencil) {\r\n            return;\r\n        }\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        if (clearColor && this._clearColors[0] !== undefined) {\r\n            const color = this._clearColors[0];\r\n            gl.clearColor(color[0], color[1], color[2], color[3]);\r\n        }\r\n        if (clearDepth && this._clearDepth !== undefined) {\r\n            gl.clearDepth(this._clearDepth);\r\n        }\r\n        if (clearStencil && this._clearStencil !== undefined) {\r\n            gl.clearStencil(this._clearStencil);\r\n        }\r\n\r\n        gl.clear(mask);\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * WebGL2 implementation for clearing framebuffer attachments.\r\n     * @param mask - A GLbitfield bitwise OR mask that indicates the buffers to be cleared.\r\n     * @param bind - Allows to skip binding the framebuffer (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the framebuffer (e.g., when binding is handled outside).\r\n     * @param colorClearQueue - Allows to specify a specific queue of color attachments to be cleared. If no\r\n     * parameter is given, the webgl2 implementation clears all color attachments.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    protected es3Clear(mask: GLbitfield, bind: boolean = true, unbind: boolean = true,\r\n        colorClearQueue?: Array<GLint>): void {\r\n\r\n        const gl = this.context.gl;\r\n\r\n        const clearDepth = bitInBitfield(mask, gl.DEPTH_BUFFER_BIT);\r\n        const clearStencil = bitInBitfield(mask, gl.STENCIL_BUFFER_BIT);\r\n        const clearColor = bitInBitfield(mask, gl.COLOR_BUFFER_BIT);\r\n\r\n        if (!clearColor && !clearDepth && !clearStencil) {\r\n            return;\r\n        }\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        if (clearColor) {\r\n            /* Multiple color attachments either by WebGL2 or WEBGL_draw_buffers can be expected. */\r\n            for (const drawBuffer of colorClearQueue ? colorClearQueue : this._colorClearQueue) {\r\n                gl.clearBufferfv(gl.COLOR, drawBuffer, this._clearColors[drawBuffer]);\r\n            }\r\n        }\r\n\r\n        if (clearDepth && clearStencil) {\r\n            /**\r\n             * Unfortunately, the following code doesn't work, on Intel HD, -> fallback to WebGL 1 interface for\r\n             * clearing depth and stencil.\r\n             *\r\n             * gl.clearBufferfi(gl.DEPTH_STENCIL, 0, this._clearDepth, this._clearStencil);\r\n             */\r\n            gl.clearStencil(this._clearStencil);\r\n            gl.clearDepth(this._clearDepth);\r\n            gl.clear(gl.STENCIL_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n        } else if (clearDepth) {\r\n            gl.clearBufferfv(gl.DEPTH, 0, [this._clearDepth]);\r\n\r\n        } else if (clearStencil) {\r\n            /**\r\n             * Unfortunately, the following code doesn't work, at least in Chrome, -> fallback to WebGL 1 interface\r\n             * for clearing depth and stencil.\r\n             *\r\n             * gl.clearBufferiv(gl.STENCIL, 0, [this._clearStencil]);\r\n             */\r\n            gl.clearStencil(this._clearStencil);\r\n            gl.clear(gl.STENCIL_BUFFER_BIT);\r\n        }\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param attachment -\r\n     */\r\n    protected hasAttachment(attachment: GLenum): boolean {\r\n        return this._texturesByAttachment.has(attachment) || this._buffersByAttachment.has(attachment);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the framebuffer object as framebuffer to the provided target.\r\n     * @param target - Specifying the binding point (target).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(target: GLenum = this.context.gl.FRAMEBUFFER): void {\r\n        this.context.gl.bindFramebuffer(target, this._object);\r\n\r\n        if (this._drawBuffersChanged && this.context.gl2facade.drawBuffers) {\r\n            this.context.gl2facade.drawBuffers(this._drawBuffers);\r\n            this._drawBuffersChanged = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Binds the default back buffer as framebuffer to the provided target.\r\n     * @param target - Specifying the binding point (target).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(target: GLenum = this.context.gl.FRAMEBUFFER): void {\r\n        this.context.gl.bindFramebuffer(target, Framebuffer.DEFAULT_FRAMEBUFFER);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the clear color used for clearing a draw buffer. In order to have transparency working, the canvas needs\r\n     * to have the alpha attribute enabled. This stage also supports premultiplied alpha, which is applied\r\n     * automatically when the context's `premultipliedAlpha` attribute is set.\r\n     * @param color - RGBA clear color.\r\n     * @param drawBuffer - The draw buffer index. If no index is provided, the color will be applied to all buffers.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    clearColor(color: GLclampf4, drawBuffer?: GLint): void {\r\n        assert(drawBuffer === undefined || drawBuffer === 0 || this.context.isWebGL2 ||\r\n            this.context.supportsDrawBuffers, `WebGL2 context expected for clearing multiple color attachments.`);\r\n\r\n        const alphaIssue: boolean = color[3] < 1.0 && !this.context.alpha;\r\n        logIf(alphaIssue, LogLevel.Warning, `context has alpha disabled, clear color alpha is ignored`);\r\n\r\n        const color2: GLclampf4 = [color[0], color[1], color[2], alphaIssue ? 1.0 : color[3]];\r\n\r\n        if (this.context.premultipliedAlpha && !alphaIssue) {\r\n            /* Premultiply alpha. */\r\n            color2[0] *= color2[3];\r\n            color2[1] *= color2[3];\r\n            color2[2] *= color2[3];\r\n        }\r\n\r\n        /* Note that draw buffer index null is allowed, thus explicit check for undefined is required. */\r\n        if (drawBuffer !== undefined) {\r\n            this._clearColors[drawBuffer] = color2;\r\n        } else {\r\n            for (let i = 0; i < this._clearColors.length; ++i) {\r\n                this._clearColors[i] = color2;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Initializable.assert_initialized()\r\n    clearDepth(depth: GLfloat): void {\r\n        this._clearDepth = depth;\r\n    }\r\n\r\n    @Initializable.assert_initialized()\r\n    clearStencil(stencil: GLint): void {\r\n        this._clearStencil = stencil;\r\n    }\r\n\r\n\r\n    /**\r\n     * Access to attached textures, identified by a valid framebuffer attachment.\r\n     * @param attachment - The attachment to request the texture object of.\r\n     * @returns - A texture object if one exists for the given attachment, otherwise undefined.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    texture(attachment: GLenum): Texture2 | undefined {\r\n        return this._texturesByAttachment.get(attachment);\r\n    }\r\n\r\n    /**\r\n     * Forwards a resize to all attachments, renderbuffers and textures.\r\n     * @param width - Targeted/new width for all attachments in px.\r\n     * @param height - Targeted/new height for all attachments in px.\r\n     * @param bind - Allows to skip binding the specific attachment (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the specific attachment (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(width: GLsizei, height: GLsizei, bind: boolean = true, unbind: boolean = true): void {\r\n        this._buffersByAttachment.forEach((buffer: Renderbuffer) => {\r\n            buffer.resize(width, height, bind, unbind);\r\n        });\r\n        this._texturesByAttachment.forEach((texture: Texture2) => {\r\n            texture.resize(width, height, bind, unbind);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Readonly access to the framebuffer width in pixel. If the width of the attachments are not all identical,\r\n     * the minimal width as the renderable width of this framebuffer is returned.\r\n     * @returns - The minimal width of the renderable width over all attachments.\r\n     */\r\n    get width(): GLsizei {\r\n        this.assertInitialized();\r\n\r\n        let width: GLsizei = NaN;\r\n        this._buffersByAttachment.forEach((buffer: Renderbuffer) => {\r\n            if (isNaN(width) || buffer.width < width) {\r\n                width = buffer.width;\r\n            }\r\n        });\r\n        this._texturesByAttachment.forEach((texture: Texture2) => {\r\n            if (isNaN(width) || texture.width < width) {\r\n                width = texture.width;\r\n            }\r\n        });\r\n        return width;\r\n    }\r\n\r\n    /**\r\n     * Readonly access to the framebuffer height in pixel. If the height of the attachments are not all identical,\r\n     * the minimal height as the renderable height of this framebuffer is returned.\r\n     * @returns - The minimal height of the renderable height over all attachments.\r\n     */\r\n    get height(): GLsizei {\r\n        this.assertInitialized();\r\n\r\n        let height: GLsizei = NaN;\r\n        this._buffersByAttachment.forEach((buffer: Renderbuffer) => {\r\n            if (isNaN(height) || buffer.height < height) {\r\n                height = buffer.height;\r\n            }\r\n        });\r\n        this._texturesByAttachment.forEach((texture: Texture2) => {\r\n            if (isNaN(height) || texture.height < height) {\r\n                height = texture.height;\r\n            }\r\n        });\r\n        return height;\r\n    }\r\n\r\n    /**\r\n     * Convenience getter for the 2-tuple containing the texture's width and height.\r\n     * @see {@link width}\r\n     * @see {@link heigth}\r\n     */\r\n    get size(): GLsizei2 {\r\n        return [this.width, this.height];\r\n    }\r\n\r\n\r\n    /**\r\n     * Set one or multiple draw buffers.\r\n     * @param attachments - Array of attachment identifier (e.g., gl.COLOR_ATTACHMENT0).\r\n     */\r\n    set drawBuffers(attachments: Array<GLenum>) {\r\n        this.assertInitialized();\r\n        const gl2facade = this.context.gl2facade;\r\n\r\n        for (const attachment of attachments) {\r\n            assert(this.hasAttachment(attachment), `valid attachment expected for draw buffer, given ${attachment}`);\r\n            assert(attachment >= gl2facade.COLOR_ATTACHMENT_MIN && attachment <= gl2facade.COLOR_ATTACHMENT_MAX,\r\n                `color attachment expected for draw buffer, given ${attachment}`);\r\n            this._drawBuffersChanged = this._drawBuffersChanged || this._drawBuffers.indexOf(attachment) === -1;\r\n        }\r\n        this._drawBuffersChanged = this._drawBuffersChanged || attachments.length !== this._drawBuffers.length;\r\n\r\n        if (this._drawBuffersChanged) {\r\n            this._drawBuffers = attachments;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used to remember which attachments are available as potential draw buffers.\r\n     */\r\n    get drawBuffers(): Array<GLenum> {\r\n        this.assertInitialized();\r\n        return this._drawBuffers;\r\n    }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\nimport { byteSizeOfFormat } from './formatbytesizes';\r\nimport { GLsizei2 } from './tuples';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { TexImage2DData } from './gl2facade';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n\r\n/**\r\n * Wrapper for an WebGL 2D texture providing size accessors and requiring for bind, unbind, resize, validity, and\r\n * initialization implementations. The texture object is created on initialization and deleted on uninitialization.\r\n * After being initialized, the texture can be resized, reformated, and data can set directly or via load:\r\n * ```\r\n * const texture = new Texture2(context, 'Texture');\r\n * texture.initialize(1, 1, gl.RGB8, gl.RGB, gl.UNSIGNED_BYTE);\r\n * texture.load('/img/webgl-operate-logo.png', true)\r\n * ```\r\n */\r\nexport class Texture2 extends AbstractObject<WebGLTexture> implements Bindable {\r\n\r\n    /**\r\n     * Default texture, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_TEXTURE = undefined;\r\n\r\n    /** @see {@link width} */\r\n    protected _width: GLsizei = 0;\r\n\r\n    /** @see {@link height} */\r\n    protected _height: GLsizei = 0;\r\n\r\n    /** @see {@link internalFormat} */\r\n    protected _internalFormat: GLenum = 0;\r\n\r\n    /** @see {@link format} */\r\n    protected _format: GLenum = 0;\r\n\r\n    /** @see {@link type} */\r\n    protected _type: GLenum = 0;\r\n\r\n\r\n    /**\r\n     * Create a texture object on the GPU.\r\n     * @param width - Initial width of the texture in px.\r\n     * @param height - Initial height of the texture in px.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     */\r\n    protected create(width: GLsizei, height: GLsizei, internalFormat: GLenum,\r\n        format: GLenum, type: GLenum): WebGLTexture | undefined {\r\n\r\n        assert(width > 0 && height > 0, `texture requires valid width and height of greater than zero`);\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        this._object = gl.createTexture();\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._internalFormat = internalFormat;\r\n        this._format = format;\r\n        this._type = type;\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this._object);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        gl2facade.texImage2D(gl.TEXTURE_2D, 0, this._internalFormat,\r\n            this._width, this._height, 0, this._format, this._type);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, Texture2.DEFAULT_TEXTURE);\r\n        /* note that gl.isTexture requires the texture to be bound */\r\n        this._valid = gl.isTexture(this._object);\r\n\r\n        this.reallocate();\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the texture object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLTexture, `expected WebGLTexture object`);\r\n        this._context.gl.deleteTexture(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._internalFormat = 0;\r\n        this._format = 0;\r\n        this._type = 0;\r\n\r\n        this._width = 0;\r\n        this._height = 0;\r\n    }\r\n\r\n    protected reallocate(): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        let bytes: GLsizei = this._width * this._height * byteSizeOfFormat(this.context, this._internalFormat);\r\n        // Fix in case of implicit float and half-float texture generation (e.g., in webgl with half_float support).\r\n        if (this._type === gl2facade.HALF_FLOAT && this._internalFormat !== gl.RGBA16F) {\r\n            bytes *= 2;\r\n        } else if (this._type === gl.FLOAT && this._internalFormat !== gl.RGBA16F) {\r\n            bytes *= 4;\r\n        }\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n    }\r\n\r\n    /**\r\n     * Bind the texture object to a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D, this._object);\r\n    }\r\n\r\n    /**\r\n     * Unbind the texture object from a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D, Texture2.DEFAULT_TEXTURE);\r\n    }\r\n\r\n    /**\r\n     * Asynchronous load of an image via URI or data URI.\r\n     * @param uri - URI linking the image that should be loaded. Data URI is also supported.\r\n     * @param crossOrigin - Enable cross origin data loading.\r\n     * @returns - Promise for handling image load status.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    load(uri: string, crossOrigin: boolean = false): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            const image = new Image();\r\n            image.onerror = () => reject();\r\n\r\n            image.onload = () => {\r\n                this.resize(image.width, image.height);\r\n                this.data(image);\r\n                resolve();\r\n            };\r\n\r\n            if (crossOrigin) {\r\n                image.crossOrigin = 'anonymous';\r\n            }\r\n            image.src = uri;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Pass image data to the texture object.\r\n     * @param data - Texel data that will be copied into the objects data store.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    data(data: TexImage2DData, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        gl2facade.texImage2D(gl.TEXTURE_2D, 0, this._internalFormat,\r\n            this._width, this._height, 0, this._format, this._type, data);\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n        this.reallocate();\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's magnification and minification filter.\r\n     * @param mag - Value for the TEXTURE_MAG_FILTER parameter.\r\n     * @param min - Value for the TEXTURE_MIN_FILTER parameter.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    filter(mag: GLenum, min: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mag);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, min);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's wrapping function for s and t coordinates.\r\n     * @param wrap_s - Value for the TEXTURE_WRAP_S parameter.\r\n     * @param wrap_t - Value for the TEXTURE_WRAP_T parameter.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    /* tslint:disable-next-line:variable-name */\r\n    wrap(wrap_s: GLenum, wrap_t: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap_s);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap_t);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This can be used to reformat the texture image without creating a new texture object. Please note that this\r\n     * resets the texture's image data to undefined. @see {@link data} for setting new image data.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    reformat(internalFormat: GLenum, format?: GLenum, type?: GLenum,\r\n        bind: boolean = true, unbind: boolean = true): void {\r\n\r\n        if (internalFormat === this._internalFormat\r\n            && (format === undefined || format === this._format)\r\n            && (type === undefined || type === this._type)) {\r\n            return;\r\n        }\r\n        assert(internalFormat !== undefined, `valid internal format expected`);\r\n        this._internalFormat = internalFormat;\r\n\r\n        if (format) {\r\n            this._format = format;\r\n        }\r\n        if (type) {\r\n            this._type = type;\r\n        }\r\n\r\n        this.data(undefined, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * This should be used to implement efficient resize the texture.\r\n     * @param width - Targeted/new width of the texture in px.\r\n     * @param height - Targeted/new height of the texture in px.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(width: GLsizei, height: GLsizei, bind: boolean = true, unbind: boolean = true): void {\r\n        if (width === this._width && height === this._height) {\r\n            return;\r\n        }\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        this.data(undefined, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU. The size will be zero when no\r\n     * image data was passed to the texture object.\r\n     */\r\n    get bytes(): GLsizei {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Cached internal format of the texture for efficient resize. This can only be changed by re-initialization.\r\n     */\r\n    get internalFormat(): GLenum {\r\n        this.assertInitialized();\r\n        return this._internalFormat!;\r\n    }\r\n\r\n    /**\r\n     * Cached format of the data provided to the texture object for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get format(): GLenum {\r\n        this.assertInitialized();\r\n        return this._format!;\r\n    }\r\n\r\n    /**\r\n     * Cached type of the data provided to the texture used for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get type(): GLenum {\r\n        this.assertInitialized();\r\n        return this._type!;\r\n    }\r\n\r\n    /**\r\n     * The width of the texture object.\r\n     */\r\n    get width(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * The height of the texture object.\r\n     */\r\n    get height(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * Convenience getter for the 2-tuple containing width and height.\r\n     * @see {@link width}\r\n     * @see {@link heigth}\r\n     */\r\n    get size(): GLsizei2 {\r\n        return [this.width, this.height];\r\n    }\r\n\r\n}\r\n","\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\nimport { Shader } from './shader';\r\n\r\n\r\n/**\r\n * WebGL Program wrapper encapsulating program creation, shader attachment, linking, binding, as well as attribute and\r\n * uniform location retrieval. A program is intended to be used as follows:\r\n *\r\n * ```\r\n * const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (blit)');\r\n * vert.initialize(require('./shaders/ndcvertices.vert'));\r\n * const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'blit.frag');\r\n * frag.initialize(require('./shaders/blit.frag'));\r\n *\r\n * this._program = new Program(this._context, 'BlitProgram');\r\n * this._program.initialize([vert, frag]);\r\n *\r\n * this.aVertex = this._program.attribute('a_vertex');\r\n * const uTexture = this._program.uniform('u_texture');\r\n *\r\n * this._program.bind();\r\n * gl.uniform1i(uTexture, 0);\r\n * // ... draw\r\n * this._program.unbind();\r\n * ```\r\n */\r\nexport class Program extends AbstractObject<WebGLProgram> implements Bindable {\r\n\r\n    /**\r\n     * Default program, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_PROGRAM = undefined;\r\n\r\n\r\n    /**\r\n     * Attaches and references all given shaders. Attach is expected to be called once within creation of a Program.\r\n     * Shaders that are not initialized will be skipped/not attached.\r\n     * @param shaders - All shaders to be attached to the program for linking.\r\n     * @returns - True if attaching all shaders and linking succeeded, false otherwise.\r\n     */\r\n    protected attach(shaders: Array<Shader>): boolean {\r\n        assert(this._object !== undefined, `expected a WebGLProgram object`);\r\n        const gl = this._context.gl;\r\n\r\n        for (const shader of shaders) {\r\n            if (!shader.initialized) {\r\n                log(LogLevel.Error, `shader '${shader.identifier}' not initialized.`);\r\n                continue;\r\n            }\r\n            gl.attachShader(this._object, shader.object);\r\n            shader.ref();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Links the program with all its already attached shaders. If linking fails, a developer log with additional\r\n     * information is provided.\r\n     * @returns - True if linking the program succeeded, false otherwise.\r\n     */\r\n    protected link(): boolean {\r\n        assert(this._object !== undefined, `expected WebGLProgram object`);\r\n        const gl = this._context.gl;\r\n\r\n        gl.linkProgram(this._object);\r\n\r\n        if (!gl.getProgramParameter(this._object, gl.LINK_STATUS)) {\r\n            const infoLog: string = gl.getProgramInfoLog(this._object);\r\n            log(LogLevel.Error, `linking of program '${this._identifier}' failed: '${infoLog}'`);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Detaches all shaders from the program. For now, expected to be called after successful linking/program creation.\r\n     * @param shaders - Shaders that are to be deleted.\r\n     */\r\n    protected detach(shaders: Array<Shader>): void {\r\n        assert(this._object !== undefined, `expected WebGLProgram object`);\r\n        const gl = this._context.gl;\r\n\r\n        for (const shader of shaders) {\r\n            assert(shader.initialized, `expected shader '${shader.identifier}' to be initialized`);\r\n            gl.detachShader(this._object, shader.object);\r\n            shader.unref();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a WebGLProgram object and attaches, and references all shaders to it. The program is then linked. All\r\n     * shaders have to be initialized in order to be attached and at least on vertex and one fragment shader has to be\r\n     * present.\r\n     * @param shaders - Vertex and fragment shaders that are to be attached to the program.\r\n     * @returns - Either a new program or undefined if linking failed or one of the shaders is invalid/not compiled.\r\n     */\r\n    protected create(shaders: Array<Shader>): WebGLProgram | undefined {\r\n        const gl = this._context.gl;\r\n\r\n        let numVertShaders = 0;\r\n        let numFragShaders = 0;\r\n\r\n        for (const shader of shaders) {\r\n            switch (shader.type) {\r\n                case gl.VERTEX_SHADER:\r\n                    ++numVertShaders;\r\n                    break;\r\n                case gl.FRAGMENT_SHADER:\r\n                    ++numFragShaders;\r\n                    break;\r\n                default:\r\n                    assert(false, `Unknown shader type detected.`);\r\n                    break;\r\n            }\r\n        }\r\n        logIf(numVertShaders < 1, LogLevel.Error, `at least one vertex shader is expected`);\r\n        logIf(numFragShaders < 1, LogLevel.Error, `at least one fragment shader is expected`);\r\n        if (numVertShaders < 1 || numFragShaders < 1) {\r\n            return undefined;\r\n        }\r\n\r\n        this._object = gl.createProgram();\r\n        assert(this._object instanceof WebGLProgram, `expected WebGLProgram object to be created`);\r\n\r\n        if (!this.attach(shaders) || !this.link()) {\r\n            this.delete();\r\n            return undefined;\r\n        }\r\n        this.detach(shaders);\r\n\r\n        this._valid = gl.isProgram(this._object);\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the program object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object !== undefined, `expected WebGLProgram object`);\r\n        this._context.gl.deleteProgram(this._object);\r\n        this._object = undefined;\r\n        this._valid = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Activates this program for use.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        this._context.gl.useProgram(this._object);\r\n    }\r\n\r\n    /**\r\n     * Deactivates this/any program for use.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this._context.gl.useProgram(Program.DEFAULT_PROGRAM);\r\n    }\r\n\r\n\r\n    /**\r\n     * Requests the location of a uniform of the program.\r\n     * @param uniform - Uniform identifier to request location of.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    uniform(uniform: string): WebGLUniformLocation {\r\n        return this._context.gl.getUniformLocation(this._object, uniform);\r\n    }\r\n\r\n    /**\r\n     * Requests the location of an attribute of the program.\r\n     * @param attribute - Attribute identifier to request location of.\r\n     * @param location - Attribute location (if WebGL2 location is used)\r\n     * @returns - Location of the attribute (or location parameter if provided).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    attribute(attribute: string, location?: GLuint): GLint {\r\n        if (this._context.isWebGL2 && location !== undefined) {\r\n            this._context.gl.bindAttribLocation(this._object, location, attribute);\r\n            return location as GLint;\r\n        } else {\r\n            return this._context.gl.getAttribLocation(this._object, attribute);\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\nimport { AbstractObject } from './object';\r\n\r\n\r\n/**\r\n * WebGL shader wrapper encapsulating shader creation, compilation, and deletion. A shader can be attached to multiple\r\n * Programs for linking, and can be deleted if detached from all (linked) programs.\r\n *\r\n * ```\r\n * var frag = new gloperate.Shader(context, context.gl.FRAGMENT_SHADER, 'EmptyFragmentShader');\r\n * var vert = new gloperate.Shader(context, context.gl.VERTEX_SHADER, 'EmptyVertexShader');\r\n * vert.initialize('void main() { }');\r\n * frag.initialize('void main() { }');\r\n *\r\n * var prog = new gloperate.Program(context, 'EmptyProgram');\r\n * prog.initialize([frag, vert]);\r\n * ```\r\n */\r\nexport class Shader extends AbstractObject<WebGLShader> {\r\n\r\n    /** @see {@link type} */\r\n    protected _type: GLenum;\r\n\r\n    /**\r\n     * Object constructor, requires a context and a valid identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param type - Either GL_VERTEX_SHADER or GL_FRAGMENT_SHADER.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, type: GLenum, identifier?: string) {\r\n        const gl = context.gl;\r\n        if (identifier === undefined) {\r\n            switch (type) {\r\n                case context.gl.FRAGMENT_SHADER:\r\n                    identifier = 'FragmentShader';\r\n                    break;\r\n                case context.gl.VERTEX_SHADER:\r\n                    identifier = 'VertexShader';\r\n                    break;\r\n                default:\r\n                    assert(false, `expected either a FRAGMENT_SHADER (${gl.FRAGMENT_SHADER}) ` +\r\n                        `or a VERTEX_SHADER (${gl.VERTEX_SHADER}), given ${type}`);\r\n            }\r\n        }\r\n        super(context, identifier);\r\n        this._type = type;\r\n    }\r\n\r\n    /**\r\n     * Creates a shader, sets the shader source, and compiles the shader. If the shader source cannot be compiled, the\r\n     * identifier and an info log are logged to console and the shader object is deleted. Note that a '#version 300 es'\r\n     * is added in case the shader source is compiled in a WebGL2 context.\r\n     * @param source - Shader source.\r\n     * @returns - Either a new shader or undefined if compilation failed.\r\n     */\r\n    protected create(source: string): WebGLShader | undefined {\r\n        const gl = this._context.gl;\r\n        this._object = gl.createShader(this._type);\r\n        assert(this._object instanceof WebGLShader, `expected WebGLShader object to be created`);\r\n\r\n        if (this._context.isWebGL2) {\r\n            source = '#version 300 es\\n' + source;\r\n        }\r\n\r\n        gl.shaderSource(this._object, source);\r\n        gl.compileShader(this._object);\r\n\r\n        if (!gl.getShaderParameter(this._object, gl.COMPILE_STATUS)) {\r\n            const infoLog: string = gl.getShaderInfoLog(this._object);\r\n            log(LogLevel.Error, `compilation of shader '${this._identifier}' failed: ${infoLog}`);\r\n\r\n            this.delete();\r\n            return undefined;\r\n        }\r\n\r\n        this._valid = gl.isShader(this._object);\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the shader object. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object !== undefined, `expected WebGLShader object`);\r\n        this._context.gl.deleteShader(this._object);\r\n        this._object = undefined;\r\n        this._valid = false;\r\n    }\r\n\r\n    /**\r\n     * Either VERTEX_SHADER or FRAGMENT_SHADER.\r\n     */\r\n    get type(): GLenum {\r\n        this.assertInitialized();\r\n        return this._type;\r\n    }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\n\r\n\r\nimport { Buffer } from './buffer';\r\nimport { Context } from './context';\r\nimport { Geometry } from './geometry';\r\nimport { Initializable } from './initializable';\r\n\r\n\r\n/**\r\n * Geometry for a viewport/screen-filling triangle. The geometry creates triangle vertices, associated to\r\n * a vertex array object (from geometry base class), and provides a specialized draw call for rendering. It is intended\r\n * for, e.g., viewport/screen-filling rendering in post-processing. The vertices can be used directly as normalized\r\n * device space (NDC) coordinates, e.g., by using the following vertex shader snippet:\r\n * ```\r\n * #if __VERSION__ == 100\r\n *     attribute vec2 a_vertex;\r\n * #else\r\n *     layout(location = 0) in vec2 a_vertex;\r\n * #endif\r\n *\r\n * ...\r\n *\r\n * v_uv = a_vertex * 0.5 + 0.5;\r\n * gl_Position = vec4(a_vertex, 0.0, 1.0);\r\n * ```\r\n */\r\nexport class NdcFillingTriangle extends Geometry {\r\n\r\n    /**\r\n     * 2───────┬ ----- 1\r\n     * │       │    /\r\n     * │       │ /\r\n     * ├───────┘\r\n     * |     /\r\n     * |  /\r\n     * 0\r\n     */\r\n    protected static readonly VERTICES = new Float32Array(\r\n        [-1.0, -3.0, 3.0, 1.0, -1.0, 1.0]);\r\n\r\n    /** @see {@link aVertex} */\r\n    protected _aVertex: GLuint;\r\n\r\n\r\n    /**\r\n     * Object constructor, requires a context and an identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super(context, identifier);\r\n\r\n        /* Generate identifier from constructor name if none given. */\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n\r\n        const vertexVBO = new Buffer(context, identifier + 'VBO');\r\n        this._buffers.push(vertexVBO);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the vertex buffer object (VBO) to an attribute binding point of a given, pre-defined index.\r\n     */\r\n    protected bindBuffers(indices: Array<GLuint>): void {\r\n        /* Please note the implicit bind in attribEnable */\r\n        this._buffers[0].attribEnable(indices[0], 2, this.context.gl.FLOAT, false, 0, 0, true, false);\r\n        this._aVertex = indices[0];\r\n    }\r\n\r\n    /**\r\n     * Unbinds the vertex buffer object (VBO) and disables the binding point.\r\n     */\r\n    protected unbindBuffers(indices: Array<GLuint>): void {\r\n        /* Please note the implicit unbind in attribEnable is skipped */\r\n        this._buffers[0].attribDisable(indices[0], true, true);\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\r\n     * @param aVertex - Attribute binding point for vertices.\r\n     */\r\n    initialize(aVertex: GLuint): boolean {\r\n        const gl = this.context.gl;\r\n        const valid = super.initialize([gl.ARRAY_BUFFER], [aVertex]);\r\n\r\n        assert(this._buffers[0] !== undefined && this._buffers[0].object instanceof WebGLBuffer,\r\n            `expected valid WebGLBuffer`);\r\n\r\n        this._buffers[0].data(NdcFillingTriangle.VERTICES, gl.STATIC_DRAW);\r\n\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Specifies/invokes the draw of this screen-aligned triangle.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    draw(): void {\r\n        const gl = this.context.gl;\r\n        gl.drawArrays(gl.TRIANGLES, 0, 3);\r\n    }\r\n\r\n\r\n    /**\r\n     * Attribute location this geometries vertices are bound to.\r\n     */\r\n    get aVertex(): GLint {\r\n        return this._aVertex;\r\n    }\r\n\r\n}\r\n","\r\nimport { vec2, vec3, vec4 } from 'gl-matrix';\r\nimport { clamp, clamp2, clamp3, clamp4 } from './gl-matrix-extensions';\r\n\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\n\r\n\r\nnamespace tuples {\r\n\r\n    /**\r\n     * Auxiliary 2-tuple of GLsizei values.\r\n     */\r\n    export type GLsizei2 = [GLsizei, GLsizei];\r\n\r\n    /**\r\n     * Auxiliary 3-tuple of GLsizei values.\r\n     */\r\n    export type GLsizei3 = [GLsizei, GLsizei, GLsizei];\r\n\r\n    /**\r\n     * Auxiliary 4-tuple of GLsizei values.\r\n     */\r\n    export type GLsizei4 = [GLsizei, GLsizei, GLsizei, GLsizei];\r\n\r\n\r\n    /**\r\n     * Auxiliary 2-tuple of GLfloat values.\r\n     */\r\n    export type GLfloat2 = [GLfloat, GLfloat];\r\n\r\n    /**\r\n     * Auxiliary 3-tuple of GLfloat values.\r\n     */\r\n    export type GLfloat3 = [GLfloat, GLfloat, GLfloat];\r\n\r\n    /**\r\n     * Auxiliary 4-tuple of GLfloat values.\r\n     */\r\n    export type GLfloat4 = [GLfloat, GLfloat, GLfloat, GLfloat];\r\n\r\n\r\n    /**\r\n     * Auxiliary 3-tuple of GLclampf values.\r\n     */\r\n    export type GLclampf2 = [GLclampf, GLclampf];\r\n\r\n    /**\r\n     * Auxiliary 3-tuple of GLclampf values.\r\n     */\r\n    export type GLclampf3 = [GLclampf, GLclampf, GLclampf];\r\n\r\n    /**\r\n     * Auxiliary 4-tuple of GLclampf values.\r\n     */\r\n    export type GLclampf4 = [GLclampf, GLclampf, GLclampf, GLclampf];\r\n\r\n    /**\r\n     * Auxiliary 5-tuple of GLclampf values.\r\n     */\r\n    export type GLclampf5 = [GLclampf, GLclampf, GLclampf, GLclampf, GLclampf];\r\n\r\n    /**\r\n     * Creates a tuple from a array buffer of the same size.\r\n     * @param buffer - Array of two float32 values.\r\n     * @returns - 2-tuple of specified type (GLsizei, GLfloat, or GLclampf).\r\n     */\r\n    export function tuple2<T extends GLsizei | GLclampf | GLfloat>(buffer: Float32Array): [T, T] {\r\n        assert(buffer.length === 2, `expected length of buffer to be 2, given ${buffer.length}`);\r\n        return [buffer[0] as T, buffer[1] as T];\r\n    }\r\n\r\n    /**\r\n     * Creates a tuple from a array buffer of the same size.\r\n     * @param buffer - Array of three float32 values.\r\n     * @returns - 3-tuple of specified type (GLsizei, GLfloat, or GLclampf).\r\n     */\r\n    export function tuple3<T extends GLsizei | GLclampf | GLfloat>(buffer: Float32Array): [T, T, T] {\r\n        assert(buffer.length === 3, `expected length of buffer to be 3, given ${buffer.length}`);\r\n        return [buffer[0] as T, buffer[1] as T, buffer[2] as T];\r\n    }\r\n\r\n    /**\r\n     * Creates a tuple from a array buffer of the same size.\r\n     * @param buffer - Array of four float32 values.\r\n     * @returns - 4-tuple of specified type (GLsizei, GLfloat, or GLclampf).\r\n     */\r\n    export function tuple4<T extends GLsizei | GLclampf | GLfloat>(buffer: Float32Array): [T, T, T, T] {\r\n        assert(buffer.length === 4, `expected length of buffer to be 4, given ${buffer.length}`);\r\n        return [buffer[0] as T, buffer[1] as T, buffer[2] as T, buffer[3] as T];\r\n    }\r\n\r\n\r\n    /**\r\n     * Clamps a single GLclampf/GLfloat value to the range [0.0, 1.0]. If clamping is necessary, a user-level message\r\n     * will be logged to console.\r\n     * @param value - Single GLclampf/GLfloat value to clamp to range [0.0, 1.0].\r\n     * @param semantic - String describing the value's semantic, used for the user-level log message.\r\n     * @returns - Clamped value.\r\n     */\r\n    export function clampf(value: GLclampf | GLfloat, semantic?: string): GLclampf | GLfloat {\r\n        const valueV1 = clamp(value, 0.0, 1.0);\r\n        logIf(semantic !== undefined && value < 0.0 || value > 1.0, LogLevel.Info,\r\n            `${semantic} clamped to [${valueV1}], given [${value}]`);\r\n        return valueV1;\r\n    }\r\n\r\n    /**\r\n     * Clamps each GLclampf/GLfloat value of a 2-tuple to the range [0.0, 1.0]. If clamping is necessary, a user-level\r\n     * message will be logged to console.\r\n     * @param tuple - 2-tuple of GLclampf/GLfloat values, each to be clamped to range [0.0, 1.0].\r\n     * @param semantic - String describing the tuple's semantic, used for the user-level log message.\r\n     * @returns - Clamped tuple.\r\n     */\r\n    export function clampf2(tuple: GLclampf2 | GLfloat2, semantic?: string): GLclampf2 | GLfloat2 {\r\n        const tupleV2: vec2 = vec2.fromValues(tuple[0], tuple[1]);\r\n        if (tuple[0] < 0.0 || tuple[0] > 1.0 || tuple[1] < 0.0 || tuple[1] > 1.0) {\r\n            clamp2(tupleV2, tupleV2, vec2.fromValues(0.0, 0.0), vec2.fromValues(1.0, 1.0));\r\n            logIf(semantic !== undefined, LogLevel.Info, `${semantic} clamped to [${tupleV2}], given [${tuple}]`);\r\n        }\r\n        return tuple2<typeof tuple[0]>(tupleV2);\r\n    }\r\n\r\n    /**\r\n     * Clamps each GLclampf/GLfloat value of a 3-tuple to the range [0.0, 1.0]. If clamping is necessary, a user-level\r\n     * message will be logged to console.\r\n     * @param tuple - 3-tuple of GLclampf/GLfloat values, each to be clamped to range [0.0, 1.0].\r\n     * @param semantic - String describing the tuple's semantic, used for the user-level log message.\r\n     * @returns - Clamped tuple.\r\n     */\r\n    export function clampf3(tuple: GLclampf3 | GLfloat3, semantic?: string): GLclampf3 | GLfloat3 {\r\n        const tupleV3: vec3 = vec3.fromValues(tuple[0], tuple[1], tuple[2]);\r\n        if (tuple[0] < 0.0 || tuple[0] > 1.0 || tuple[1] < 0.0 || tuple[1] > 1.0 || tuple[2] < 0.0 || tuple[2] > 1.0) {\r\n            clamp3(tupleV3, tupleV3, vec3.fromValues(0.0, 0.0, 0.0), vec3.fromValues(1.0, 1.0, 1.0));\r\n            logIf(semantic !== undefined, LogLevel.Info, `${semantic} clamped to [${tupleV3}], given [${tuple}]`);\r\n        }\r\n        return tuple3<typeof tuple[0]>(tupleV3);\r\n    }\r\n\r\n    /**\r\n     * Clamps each GLclampf/GLfloat value of a 4-tuple to the range [0.0, 1.0]. If clamping is necessary, a user-level\r\n     * message will be logged to console.\r\n     * @param tuple - 4-tuple of GLclampf/GLfloat values, each to be clamped to range [0.0, 1.0].\r\n     * @param semantic - String describing the tuple's semantic, used for the user-level log message.\r\n     * @returns - Clamped tuple.\r\n     */\r\n    export function clampf4(tuple: GLclampf4 | GLfloat4, semantic?: string): GLclampf4 | GLfloat4 {\r\n        const tupleV4: vec4 = vec4.fromValues(tuple[0], tuple[1], tuple[2], tuple[3]);\r\n        if (tuple[0] < 0.0 || tuple[0] > 1.0 || tuple[1] < 0.0 || tuple[1] > 1.0 ||\r\n            tuple[2] < 0.0 || tuple[2] > 1.0 || tuple[3] < 0.0 || tuple[3] > 1.0) {\r\n            clamp4(tupleV4, tupleV4, vec4.fromValues(0.0, 0.0, 0.0, 0.0), vec4.fromValues(1.0, 1.0, 1.0, 1.0));\r\n            logIf(semantic !== undefined, LogLevel.Info, `${semantic} clamped to [${tupleV4}], given [${tuple}]`);\r\n        }\r\n        return tuple4<typeof tuple[0]>(tupleV4);\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a duplicate of a 2-tuple into another tuple.\r\n     * @param tuple - Source tuple to create duplicate of.\r\n     */\r\n    export function duplicate2<T extends GLclampf | GLfloat | GLsizei>(tuple: [T, T]): [T, T] {\r\n        return [tuple[0], tuple[1]];\r\n    }\r\n\r\n    /**\r\n     * Creates a duplicate of a 3-tuple into another tuple.\r\n     * @param tuple - Source tuple to create duplicate of.\r\n     */\r\n    export function duplicate3<T extends GLclampf | GLfloat | GLsizei>(tuple: [T, T, T]): [T, T, T] {\r\n        return [tuple[0], tuple[1], tuple[2]];\r\n    }\r\n\r\n    /**\r\n     * Creates a duplicate of a 4-tuple into another tuple.\r\n     * @param tuple - Source tuple to create duplicate of.\r\n     */\r\n    export function duplicate4<T extends GLclampf | GLfloat | GLsizei>(tuple: [T, T, T, T]): [T, T, T, T] {\r\n        return [tuple[0], tuple[1], tuple[2], tuple[3]];\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks whether or not two 2-tuples have identical values.\r\n     * @param tuple0 - First 2-tuple/operand for comparison.\r\n     * @param tuple1 - Second 2-tuple/operand for comparison.\r\n     * @returns - True iff tuples are equal in all two values (in their sequence).\r\n     */\r\n    export function equals2<T extends GLclampf | GLfloat | GLsizei>(t0: [T, T], t1: [T, T]): boolean {\r\n        return t0[0] === t1[0] && t0[1] === t1[1];\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not two 3-tuples have identical values.\r\n     * @param tuple0 - First 3-tuple/operand for comparison.\r\n     * @param tuple1 - Second 3-tuple/operand for comparison.\r\n     * @returns - True iff tuples are equal in all three values (in their sequence).\r\n     */\r\n    export function equals3<T extends GLclampf | GLfloat | GLsizei>(t0: [T, T, T], t1: [T, T, T]): boolean {\r\n        return t0[0] === t1[0] && t0[1] === t1[1] && t0[2] === t1[2];\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not two 4-tuples have identical values.\r\n     * @param tuple0 - First 4-tuple/operand for comparison.\r\n     * @param tuple1 - Second 4-tuple/operand for comparison.\r\n     * @returns - True iff tuples are equal in all four values (in their sequence).\r\n     */\r\n    export function equals4<T extends GLclampf | GLfloat | GLsizei>(t0: [T, T, T, T], t1: [T, T, T, T]): boolean {\r\n        return t0[0] === t1[0] && t0[1] === t1[1] && t0[2] === t1[2] && t0[3] === t1[3];\r\n    }\r\n\r\n}\r\n\r\nexport = tuples;\r\n","\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\n\r\n\r\n/**\r\n * This wizard provides means for non-trivial, context specific framebuffer setups, texture formats, etc.\r\n */\r\nexport class Wizard {\r\n\r\n    /**\r\n     * Queries the internal texture format matching the target format best for the given context. For 'auto' precision\r\n     * the format of maximum accuracy supported is returned.\r\n     * @param context - Wrapped gl context for function resolution (passed to all stages).\r\n     * @param target - Target format, e.g., gl.RGBA, used to find the supported precision/accuracy for.\r\n     * @param precision - Requested precision of the internal format: 'auto', 'float', 'half', 'byte'.\r\n     * @returns - 3-tuple containing the (1) internal format, (2) the type (required for some internal formats to work\r\n     * ...), and (3) the precision enum/string that matches the resulting format best.\r\n     */\r\n    static queryInternalTextureFormat(context: Context, target: GLenum,\r\n        precision: Wizard.Precision | undefined): [GLenum, GLenum, Wizard.Precision] {\r\n\r\n        const gl = context.gl;\r\n        const gl2facade = context.gl2facade;\r\n\r\n        /**\r\n         * In WebGL1 contexts, OES_texture_float always implies WEBGL_color_buffer_float and OES_texture_half_float\r\n         * implies EXT_color_buffer_half_float.\r\n         */\r\n        const floatWriteSupport = (context.isWebGL1 && context.supportsTextureFloat) ||\r\n            (context.isWebGL2 && context.supportsColorBufferFloat);\r\n        const halfWriteSupport = (context.isWebGL1 && context.supportsTextureHalfFloat) ||\r\n            (context.isWebGL2 && context.supportsColorBufferFloat);\r\n\r\n        if (precision === undefined) {\r\n            precision = Wizard.Precision.auto;\r\n        }\r\n        let query = precision === undefined ? Wizard.Precision.auto : precision;\r\n\r\n        if (!(precision in Wizard.Precision)) {\r\n            log(LogLevel.Warning, `unknown precision '${query}' changed to '${Wizard.Precision.auto}'`);\r\n            precision = Wizard.Precision.auto;\r\n        }\r\n        if (precision === Wizard.Precision.auto) { /* Derive maximum supported write to texture/buffer format. */\r\n            query = floatWriteSupport ? Wizard.Precision.float : halfWriteSupport ?\r\n                Wizard.Precision.half : Wizard.Precision.byte;\r\n        }\r\n\r\n        let type: GLenum;\r\n        let internalFormatIndex: GLint; /* Utility index to reduce tuple return logic (see switch). */\r\n\r\n        /* Query type and, if required), enable extension. */\r\n        if (query === Wizard.Precision.half && halfWriteSupport) {\r\n            /* tslint:disable-next-line:no-unused-expression */\r\n            context.isWebGL2 ? context.colorBufferFloat : context.textureHalfFloat;\r\n            type = gl2facade.HALF_FLOAT;\r\n            internalFormatIndex = 1;\r\n\r\n        } else if ((query === Wizard.Precision.float || query === Wizard.Precision.half)\r\n            && floatWriteSupport) {\r\n            /* If not explicitly requested, fallback for half_float. */\r\n            /* tslint:disable-next-line:no-unused-expression */\r\n            context.isWebGL2 ? context.colorBufferFloat : context.textureFloat;\r\n            type = gl.FLOAT;\r\n            internalFormatIndex = 0;\r\n\r\n        } else {\r\n            type = gl.UNSIGNED_BYTE;\r\n            internalFormatIndex = 2;\r\n        }\r\n\r\n        /* In this case, no specialized internal formats are available. */\r\n        if (context.isWebGL1) {\r\n            return [target, type, query];\r\n        }\r\n\r\n        switch (target) {\r\n            case gl.RGBA:\r\n                return [[gl.RGBA32F, gl.RGBA16F, gl.RGBA8][internalFormatIndex], type, query];\r\n            case gl.RGB:\r\n                return [[gl.RGB32F, gl.RGB16F, gl.RGB8][internalFormatIndex], type, query];\r\n            default:\r\n                assert(false, `internal format querying is not yet supported for formats other than RGBA, RGB`);\r\n        }\r\n        return [gl.NONE, gl.NONE, query];\r\n    }\r\n\r\n}\r\n\r\nexport namespace Wizard {\r\n\r\n    export enum Precision {\r\n        float = 'float',\r\n        half = 'half',\r\n        byte = 'byte',\r\n        auto = 'auto',\r\n    }\r\n\r\n}\r\n","\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\n\r\nimport { AllocationRegister } from './allocationregister';\r\nimport { ContextMasquerade } from './contextmasquerade';\r\nimport { WEBGL1_EXTENSIONS, WEBGL2_DEFAULT_EXTENSIONS, WEBGL2_EXTENSIONS } from './extensions';\r\nimport { ExtensionsHash } from './extensionshash';\r\nimport { GL2Facade } from './gl2facade';\r\n\r\n\r\n/**\r\n * A controller for either a WebGLRenderingContext or WebGL2RenderingContext. It requests a context, tracks context\r\n * attributes, extensions as well as multi frame specific rendering information and a (gpu)allocation registry.\r\n *\r\n * An instance of `Context` can be created only implicitly by requesting a context given a canvas element and its\r\n * dataset:\r\n * ```\r\n * const element: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(canvasID);\r\n * this.context = Context.request(element); // element.dataset is used for attributes\r\n * ```\r\n * The context supports the following data-attributes:\r\n * ```\r\n * data-backend: 'auto' | 'webgl' | 'webgl2'\r\n * data-accumulation-format: 'auto' | 'float' | 'half' | 'byte'\r\n * ```\r\n *\r\n * At run-time, cached context features can be queried without a performance impact, e.g., frequent extension-based\r\n * branching:\r\n * ```\r\n * if(this.context.supportsVertexArrayObject) {\r\n *     this.context.vertexArrayObject.bindVertexArrayOES(...);\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * For convenience, protected extension names such as `EXT_frag_depth` are not prefixed by an underscore.\r\n */\r\nexport class Context {\r\n\r\n    /* tslint:disable:member-ordering variable-name */\r\n\r\n    /**\r\n     * Context creation attribute defaults. The defaults are taken directly from the spec.\r\n     */\r\n    protected static readonly DEFAULT_ATTRIBUTES = {\r\n        alpha: true,\r\n        antialias: false, /* Not defaulted to true, since it might interfere with manual blitting. */\r\n        depth: true,\r\n        failIfMajorPerformanceCaveat: false,\r\n        premultipliedAlpha: true,\r\n        preserveDrawingBuffer: false,\r\n        stencil: false,\r\n    };\r\n\r\n    /** @see {@link backend} */\r\n    protected _backend: Context.BackendType | undefined;\r\n\r\n    /**\r\n     * Created context. The actual type depends on the created context.\r\n     * @see {@link gl}\r\n     */\r\n    protected _context: any; // WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    /** @see {@link mask} */\r\n    protected _mask: ContextMasquerade | undefined;\r\n\r\n    /** @see {@link gl2facade} */\r\n    protected _gl2: GL2Facade;\r\n\r\n\r\n    /**\r\n     * Creates a masquerade object that can be used for debugging. This is intended to be called when requesting a\r\n     * context, i.e., before actually requesting it. For creation of a masquerade object, the following masquerade\r\n     * specifiers are evaluated in the following order:\r\n     *  1. msqrd_h GET parameter,\r\n     *  2. msqrd_p GET parameter,\r\n     *  3. data-msqrd-h attribute of the canvas element, and, finally,\r\n     *  4. data-msqrd-p attribute of the canvas element.\r\n     * If no specifier can be found, no object is created and undefined is returned.\r\n     * @param dataset - Dataset of the canvas element that might provide a data-msqrd-{h,p} attribute.\r\n     * @returns - Masquerade object when a specifier was found. If none was found undefined is returned.\r\n     */\r\n    protected static createMasqueradeFromGETorDataAttribute(dataset: DOMStringMap): ContextMasquerade | undefined {\r\n        const mask = ContextMasquerade.fromGET();\r\n        if (mask) {\r\n            return mask;\r\n        }\r\n        if (dataset.msqrdH) {\r\n            return ContextMasquerade.fromHash(dataset.msqrdH as string);\r\n        }\r\n        if (dataset.msqrdP) {\r\n            return ContextMasquerade.fromPreset(dataset.msqrdP as string);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    // WEBGL 1 & 2 CONTEXT\r\n\r\n    /**\r\n     * Create a WebGL context. Note: this should only be called once in constructor, because the second and subsequent\r\n     * calls to getContext of an element will return null.\r\n     * @param element - Canvas element to request context from.\r\n     * @param attributes - Overrides the internal default attributes @see{Context.DEFAULT_ATTRIBUTES}.\r\n     * @returns - Context providing either a WebGLRenderingContext, WebGL2RenderingContext.\r\n     */\r\n    static request(element: HTMLCanvasElement,\r\n        attributes: WebGLContextAttributes = Context.DEFAULT_ATTRIBUTES): Context {\r\n\r\n        const dataset: DOMStringMap = element.dataset;\r\n        const mask = Context.createMasqueradeFromGETorDataAttribute(dataset);\r\n\r\n        /** Favor backend specification by masquerade over specification by data attribute. */\r\n        let request = mask ? (mask.backend as string) :\r\n            dataset.backend ? (dataset.backend as string).toLowerCase() : 'auto';\r\n\r\n        if (!(request in Context.BackendRequestType)) {\r\n            log(LogLevel.Warning,\r\n                `unknown backend '${dataset.backend}' changed to '${Context.BackendRequestType.auto}'`);\r\n            request = 'auto';\r\n        }\r\n\r\n        switch (request) {\r\n            case Context.BackendRequestType.webgl:\r\n                break;\r\n            case Context.BackendRequestType.experimental:\r\n            case Context.BackendRequestType.webgl1:\r\n            case Context.BackendRequestType.experimental1:\r\n                request = Context.BackendRequestType.webgl;\r\n                break;\r\n            case Context.BackendRequestType.webgl2:\r\n            case Context.BackendRequestType.experimental2:\r\n                request = Context.BackendRequestType.webgl2;\r\n                break;\r\n            default:\r\n                request = Context.BackendRequestType.auto;\r\n        }\r\n\r\n        let context;\r\n        if (request !== Context.BackendRequestType.webgl) {\r\n            context = this.requestWebGL2(element, attributes);\r\n        }\r\n        if (!context) {\r\n            context = this.requestWebGL1(element, attributes);\r\n            logIf(context !== undefined && request === Context.BackendRequestType.webgl2, LogLevel.Info,\r\n                `backend changed to '${Context.BackendRequestType.webgl}', given '${request}'`);\r\n        }\r\n\r\n        assert(!!context, `creating a context failed`);\r\n        return new Context(context, mask);\r\n    }\r\n\r\n    /**\r\n     * Helper that tries to create a WebGL 1 context (requests to 'webgl' and 'experimental-webgl' are made).\r\n     * @param element - Canvas element to request context from.\r\n     * @param attributes - Overrides the internal default attributes @see{Context.CONTEXT_ATTRIBUTES}.\r\n     * @returns {WebGLRenderingContext} - WebGL context object or null.\r\n     */\r\n    protected static requestWebGL1(element: HTMLCanvasElement,\r\n        attributes: WebGLContextAttributes = Context.DEFAULT_ATTRIBUTES): WebGLRenderingContext | undefined {\r\n\r\n        let context = element.getContext(Context.BackendRequestType.webgl, attributes);\r\n        if (context) {\r\n            return context;\r\n        }\r\n        context = element.getContext(Context.BackendRequestType.experimental, attributes);\r\n        return context === null ? undefined : context;\r\n    }\r\n\r\n    /**\r\n     * Helper that tries to create a WebGL 2 context (requests to 'webgl2' and 'experimental-webgl2' are made).\r\n     * @param element - Canvas element to request context from.\r\n     * @param attributes - Overrides the internal default attributes @see{Context.CONTEXT_ATTRIBUTES}.\r\n     * @returns {WebGL2RenderingContext} - WebGL2 context object or undefined.\r\n     */\r\n    protected static requestWebGL2(element: HTMLCanvasElement,\r\n        attributes: WebGLContextAttributes = Context.DEFAULT_ATTRIBUTES)\r\n        : WebGLRenderingContext | CanvasRenderingContext2D | undefined {\r\n\r\n        let context = element.getContext(Context.BackendRequestType.webgl2, attributes);\r\n        if (context) {\r\n            return context;\r\n        }\r\n        context = element.getContext(Context.BackendRequestType.experimental2, attributes);\r\n        return context === null ? undefined : context;\r\n    }\r\n\r\n\r\n    // CONTEXT ATTRIBUTES\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true, the drawing buffer has an alpha channel for the purposes of performing OpenGL destination\r\n     * alpha operations and compositing with the page. If the value is false, no alpha buffer is available.\r\n     */\r\n    get alpha(): boolean {\r\n        return this._context.getContextAttributes().alpha;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true and the implementation supports antialiasing the drawing buffer will perform antialiasing\r\n     * using its choice of technique (multisample/supersample) and quality. If the value is false or the implementation\r\n     * does not support antialiasing, no antialiasing is performed.\r\n     */\r\n    get antialias(): boolean {\r\n        return this._context.getContextAttributes().antialias;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true, the drawing buffer has a depth buffer of at least 16 bits. If the value is false, no depth\r\n     * buffer is available.\r\n     */\r\n    get depth(): boolean {\r\n        return this._context.getContextAttributes().depth;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true, context creation will fail if the implementation determines that the performance of the\r\n     * created WebGL context would be dramatically lower than that of a native application making equivalent OpenGL\r\n     * calls...\r\n     */\r\n    get failIfMajorPerformanceCaveat(): boolean {\r\n        return this._context.getContextAttributes().failIfMajorPerformanceCaveat;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true the page compositor will assume the drawing buffer contains colors with premultiplied alpha.\r\n     * If the value is false the page compositor will assume that colors in the drawing buffer are not premultiplied.\r\n     * This flag is ignored if the alpha flag is false. See Premultiplied Alpha for more information on the effects of\r\n     * the premultipliedAlpha flag.\r\n     */\r\n    get premultipliedAlpha(): boolean {\r\n        return this._context.getContextAttributes().premultipliedAlpha;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If false, once the drawing buffer is presented as described in theDrawing Buffer section, the contents of the\r\n     * drawing buffer are cleared to their default values. All elements of the drawing buffer (color, depth and stencil)\r\n     * are cleared. If the value is true the buffers will not be cleared and will preserve their values until cleared\r\n     * or overwritten by the author.\r\n     */\r\n    get preserveDrawingBuffer(): boolean {\r\n        return this._context.getContextAttributes().preserveDrawingBuffer;\r\n    }\r\n\r\n    /**\r\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\r\n     * If the value is true, the drawing buffer has a stencil buffer of at least 8 bits. If the value is false, no\r\n     * stencil buffer is available.\r\n     */\r\n    get stencil(): boolean {\r\n        return this._context.getContextAttributes().stencil;\r\n    }\r\n\r\n\r\n    // EXTENSIONS\r\n\r\n    /**\r\n     * Cached extension supported by the context.\r\n     */\r\n    protected _extensions: Array<string> = new Array<string>();\r\n\r\n    /**\r\n     * Checks if the given extension is supported. Please note that a 'supports' call asserts whether or not the\r\n     * extension is related to the WebGL version. For example, the following code would lead to an Error:\r\n     * ```\r\n     * this.supports('ANGLE_instanced_arrays'); // asserts in WebGL2 since the extension is incorporated by default\r\n     * ```\r\n     * If the context is masked by a ContextMasquerade the support of an extension might be concealed.\r\n     * @param extension - Extension identifier to query support for.\r\n     * @returns - True if the extension is supported, false otherwise.\r\n     */\r\n    protected supports(extension: string): boolean {\r\n        if (this._mask && this._mask.extensionsConceal.indexOf(extension) > -1) {\r\n            return false;\r\n        }\r\n\r\n        switch (this._backend) {\r\n            case Context.BackendType.WebGL1:\r\n                assert(WEBGL1_EXTENSIONS.indexOf(extension) > -1, `extension ${extension} not available to WebGL1`);\r\n                break;\r\n\r\n            case Context.BackendType.WebGL2:\r\n                assert(WEBGL2_DEFAULT_EXTENSIONS.indexOf(extension) === -1,\r\n                    `extension ${extension} supported by default in WebGL2`);\r\n                assert(WEBGL2_EXTENSIONS.indexOf(extension) > -1, `extension ${extension} not available to WebGL2`);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return this._extensions.indexOf(extension) > -1;\r\n    }\r\n\r\n    /**\r\n     * Queries all extensions for the current context and stores the result (supported or not supported). This is\r\n     * relevant to avoid continuous searches or regexp matching or substring queries in the complete extension string.\r\n     * Instead, the support is queried once and can be explicitly request in the public interface using properties.\r\n     *\r\n     * This function should get called only once per Context instance.\r\n     */\r\n    protected queryExtensionSupport(): void {\r\n        this._extensions = this._context.getSupportedExtensions();\r\n\r\n        if (this._backend === Context.BackendType.WebGL1) {\r\n            this.ANGLE_instanced_arrays_supported = this.supports('ANGLE_instanced_arrays');\r\n\r\n            this.EXT_blend_minmax_supported = this.supports('EXT_blend_minmax');\r\n            this.EXT_color_buffer_half_float_supported = this.supports('EXT_color_buffer_half_float');\r\n            this.EXT_disjoint_timer_query_supported = this.supports('EXT_disjoint_timer_query');\r\n            this.EXT_frag_depth_supported = this.supports('EXT_frag_depth');\r\n            this.EXT_sRGB_supported = this.supports('EXT_sRGB');\r\n            this.EXT_shader_texture_lod_supported = this.supports('EXT_shader_texture_lod');\r\n\r\n            this.OES_element_index_uint_supported = this.supports('OES_element_index_uint');\r\n            this.OES_standard_derivatives_supported = this.supports('OES_standard_derivatives');\r\n            this.OES_texture_float_supported = this.supports('OES_texture_float');\r\n            this.OES_texture_half_float_supported = this.supports('OES_texture_half_float');\r\n            this.OES_vertex_array_object_supported = this.supports('OES_vertex_array_object');\r\n\r\n            this.WEBGL_color_buffer_float_supported = this.supports('WEBGL_color_buffer_float');\r\n            this.WEBGL_depth_texture_supported = this.supports('WEBGL_depth_texture');\r\n            this.WEBGL_draw_buffers_supported = this.supports('WEBGL_draw_buffers');\r\n        }\r\n\r\n        if (this._backend === Context.BackendType.WebGL2) {\r\n            this.EXT_color_buffer_float_supported = this.supports('EXT_color_buffer_float');\r\n            this.EXT_disjoint_timer_query_webgl2_supported = this.supports('EXT_disjoint_timer_query_webgl2');\r\n        }\r\n\r\n        this.EXT_texture_filter_anisotropic_supported = this.supports('EXT_texture_filter_anisotropic');\r\n\r\n        this.OES_texture_float_linear_supported = this.supports('OES_texture_float_linear');\r\n        this.OES_texture_half_float_linear_supported = this.supports('OES_texture_half_float_linear');\r\n\r\n        this.WEBGL_compressed_texture_astc_supported = this.supports('WEBGL_compressed_texture_astc');\r\n        this.WEBGL_compressed_texture_atc_supported = this.supports('WEBGL_compressed_texture_atc');\r\n        this.WEBGL_compressed_texture_etc_supported = this.supports('WEBGL_compressed_texture_etc');\r\n        this.WEBGL_compressed_texture_etc1_supported = this.supports('WEBGL_compressed_texture_etc1');\r\n        this.WEBGL_compressed_texture_pvrtc_supported = this.supports('WEBGL_compressed_texture_pvrtc');\r\n        this.WEBGL_compressed_texture_s3tc_supported = this.supports('WEBGL_compressed_texture_s3tc');\r\n        this.WEBGL_compressed_texture_s3tc_srgb_supported = this.supports('WEBGL_compressed_texture_s3tc_srgb');\r\n        this.WEBGL_debug_renderer_info_supported = this.supports('WEBGL_debug_renderer_info');\r\n        this.WEBGL_debug_shaders_supported = this.supports('WEBGL_debug_shaders');\r\n        this.WEBGL_lose_context_supported = this.supports('WEBGL_lose_context');\r\n    }\r\n\r\n    /**\r\n     * Returns the cached extensions object for the given extension identifier. If no extensions is cached, it is\r\n     * queried. Asserts if the extension is provided by default in the current backend, not supported in general, or\r\n     * unknown to the specification.\r\n     * Please not that the availability of an extension might be concealed by the context's mask.\r\n     * @param out - Member the extension object is cached into.\r\n     * @param extension - Extension identifier to query.\r\n     * @returns - Extension object.\r\n     */\r\n    protected extension(out: any, extension: string): any {\r\n        if (out === undefined) {\r\n            assert(this.supports(extension), `extension ${extension} expected to be supported`);\r\n            out = this._context.getExtension(extension);\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Context this is of type 'any' for now, since WebGL2RenderingContext not available but supported. This\r\n     * constructor is protected to enforce context creation using `request`. It queries extension support and\r\n     * configures context specifics for convenience, e.g., HALF_FLOAT format.\r\n     */\r\n    protected constructor(context: any, mask: ContextMasquerade | undefined) {\r\n        this._context = context;\r\n        this._mask = mask;\r\n\r\n        const contextString = context.toString();\r\n\r\n        {\r\n            // WebGL chrome debugger renames Context to CaptureContext\r\n            const webgl1 = /WebGLRenderingContext/.test(contextString) ||\r\n                /CaptureContext/.test(contextString);\r\n            const webgl2 = /WebGL2RenderingContext/.test(contextString);\r\n\r\n            this._backend = webgl1 ? Context.BackendType.WebGL1 : webgl2 ? Context.BackendType.WebGL2 : undefined;\r\n        }\r\n\r\n        assert(this._backend !== undefined && this._backend.valueOf() !== Context.BackendType.Invalid.valueOf(),\r\n            `context is neither webgl nor webgl2, given ${contextString}`);\r\n\r\n        this.queryExtensionSupport();\r\n\r\n        // undefine all masked functions\r\n        if (this._mask && this._mask.functionsUndefine) {\r\n            for (const func in this._mask.functionsUndefine) {\r\n                (this._context as any)[func] = undefined;\r\n            }\r\n        }\r\n\r\n        // create an instance for a gl2 facade (unifies mandatory interfaces of the webgl and webgl2 api)\r\n        this._gl2 = new GL2Facade(this);\r\n    }\r\n\r\n\r\n    /** @see {@link allocationRegister} */\r\n    protected _allocationRegister = new AllocationRegister();\r\n\r\n    /**\r\n     * The context's GPU allocation register for use of tracking memory allocations.\r\n     */\r\n    get allocationRegister(): AllocationRegister {\r\n        return this._allocationRegister;\r\n    }\r\n\r\n\r\n    /**\r\n     * The created rendering backend (webgl context type), either 'webgl' or 'webgl2' based on which one was\r\n     * created successfully. If no context could be created undefined is returned.\r\n     * @returns - Backend that was created on construction.\r\n     */\r\n    get backend(): Context.BackendType | undefined {\r\n        return this._backend;\r\n    }\r\n\r\n    /**\r\n     * Provides a human-readable string of the backend.\r\n     */\r\n    get backendString(): string | undefined {\r\n        switch (this._backend) {\r\n            case Context.BackendType.WebGL1:\r\n                return 'WebGL';\r\n            case Context.BackendType.WebGL2:\r\n                return 'WebGL2';\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Provides an array of all extensions supported by the used WebGL1/2 context.\r\n     */\r\n    get extensions(): Array<string> {\r\n        return this._extensions;\r\n    }\r\n\r\n    /**\r\n     * Masquerade object applied to a context instance.\r\n     */\r\n    get mask(): ContextMasquerade | undefined {\r\n        return this._mask;\r\n    }\r\n\r\n    /**\r\n     * Access to either the WebGLRenderingContext or WebGL2RenderingContext.\r\n     */\r\n    get gl(): any { // WebGLRenderingContext | WebGL2RenderingContext\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * WebGL2 facade for WebGL2 API like access to features mandatory to this engine.\r\n     */\r\n    get gl2facade(): GL2Facade {\r\n        return this._gl2;\r\n    }\r\n\r\n    /**\r\n     * True if the context is a WebGL1 context, otherwise false.\r\n     */\r\n    get isWebGL1(): boolean {\r\n        return this._backend === Context.BackendType.WebGL1;\r\n    }\r\n\r\n    /**\r\n     * True if the context is a WebGL2 context, otherwise false.\r\n     */\r\n    get isWebGL2(): boolean {\r\n        return this._backend === Context.BackendType.WebGL2;\r\n    }\r\n\r\n\r\n    // EXTENSION QUERIES\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected ANGLE_instanced_arrays: any;\r\n    protected ANGLE_instanced_arrays_supported: boolean;\r\n    get supportsInstancedArrays(): boolean {\r\n        return this.ANGLE_instanced_arrays_supported;\r\n    }\r\n    get instancedArrays(): any {\r\n        return this.extension(this.ANGLE_instanced_arrays, 'ANGLE_instanced_arrays');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected EXT_blend_minmax: any;\r\n    protected EXT_blend_minmax_supported: boolean;\r\n    get supportsBlendMinmax(): boolean {\r\n        return this.EXT_blend_minmax_supported;\r\n    }\r\n    get blendMinmax(): any {\r\n        return this.extension(this.EXT_blend_minmax, 'EXT_blend_minmax');\r\n    }\r\n\r\n    // WebGL1\r\n    protected EXT_color_buffer_half_float: any;\r\n    protected EXT_color_buffer_half_float_supported: boolean;\r\n    get supportsColorBufferHalfFloat(): boolean {\r\n        return this.EXT_color_buffer_half_float_supported;\r\n    }\r\n    get colorBufferHalfFloat(): any {\r\n        return this.extension(this.EXT_color_buffer_half_float, 'EXT_color_buffer_half_float');\r\n    }\r\n\r\n    // WebGL1\r\n    protected EXT_disjoint_timer_query: any;\r\n    protected EXT_disjoint_timer_query_supported: boolean;\r\n    get supportsDisjointTimerQuery(): boolean {\r\n        return this.EXT_disjoint_timer_query_supported;\r\n    }\r\n    get disjointTimerQuery(): any {\r\n        return this.extension(this.EXT_disjoint_timer_query, 'EXT_disjoint_timer_query');\r\n    }\r\n\r\n    // WebGL2\r\n    protected EXT_disjoint_timer_query_webgl2: any;\r\n    protected EXT_disjoint_timer_query_webgl2_supported: boolean;\r\n    get supportsDisjointTimerQueryWebGL2(): boolean {\r\n        return this.EXT_disjoint_timer_query_webgl2_supported;\r\n    }\r\n    get disjointTimerQueryWebGL2(): any {\r\n        return this.extension(this.EXT_disjoint_timer_query_webgl2, 'EXT_disjoint_timer_query_webgl2');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected EXT_frag_depth: any;\r\n    protected EXT_frag_depth_supported: boolean;\r\n    get supportsFragDepth(): boolean {\r\n        return this.EXT_frag_depth_supported;\r\n    }\r\n    get fragDepth(): any {\r\n        return this.extension(this.EXT_frag_depth, 'EXT_frag_depth');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected EXT_sRGB: any;\r\n    protected EXT_sRGB_supported: boolean;\r\n    get supportsSRGB(): boolean {\r\n        return this.EXT_sRGB_supported;\r\n    }\r\n    get sRGB(): any {\r\n        return this.extension(this.EXT_sRGB, 'EXT_sRGB');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected EXT_shader_texture_lod: any;\r\n    protected EXT_shader_texture_lod_supported: boolean;\r\n    get supportsShaderTextureLOD(): boolean {\r\n        return this.EXT_shader_texture_lod_supported;\r\n    }\r\n    get shaderTextureLOD(): any {\r\n        return this.extension(this.EXT_shader_texture_lod, 'EXT_shader_texture_lod');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected EXT_texture_filter_anisotropic: any;\r\n    protected EXT_texture_filter_anisotropic_supported: boolean;\r\n    get supportsTextureFilterAnisotropic(): boolean {\r\n        return this.EXT_texture_filter_anisotropic_supported;\r\n    }\r\n    get textureFilterAnisotropic(): any {\r\n        return this.extension(this.EXT_texture_filter_anisotropic, 'EXT_texture_filter_anisotropic');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_element_index_uint: any;\r\n    protected OES_element_index_uint_supported: boolean;\r\n    get supportsElementIndexUint(): boolean {\r\n        return this.OES_element_index_uint_supported;\r\n    }\r\n    get elementIndexUint(): any {\r\n        return this.extension(this.OES_element_index_uint, 'OES_element_index_uint');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_standard_derivatives: any;\r\n    protected OES_standard_derivatives_supported: boolean;\r\n    get supportsStandardDerivatives(): boolean {\r\n        return this.OES_standard_derivatives_supported;\r\n    }\r\n    get standardDerivatives(): any {\r\n        return this.extension(this.OES_standard_derivatives, 'OES_standard_derivatives');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_texture_float: any;\r\n    protected OES_texture_float_supported: boolean;\r\n    get supportsTextureFloat(): boolean {\r\n        return this.OES_texture_float_supported;\r\n    }\r\n    get textureFloat(): any {\r\n        return this.extension(this.OES_texture_float, 'OES_texture_float');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected OES_texture_float_linear: any;\r\n    protected OES_texture_float_linear_supported: boolean;\r\n    get supportsTextureFloatLinear(): boolean {\r\n        return this.OES_texture_float_linear_supported;\r\n    }\r\n    get textureFloatLinear(): any {\r\n        return this.extension(this.OES_texture_float_linear, 'OES_texture_float_linear');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_texture_half_float: any;\r\n    protected OES_texture_half_float_supported: boolean;\r\n    get supportsTextureHalfFloat(): boolean {\r\n        return this.OES_texture_half_float_supported;\r\n    }\r\n    get textureHalfFloat(): any {\r\n        return this.extension(this.OES_texture_half_float, 'OES_texture_half_float');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected OES_texture_half_float_linear: any;\r\n    protected OES_texture_half_float_linear_supported: boolean;\r\n    get supportsTextureHalfFloatLinear(): boolean {\r\n        return this.OES_texture_half_float_linear_supported;\r\n    }\r\n    get textureHalfFloatLinear(): any {\r\n        return this.extension(this.OES_texture_half_float_linear, 'OES_texture_half_float_linear');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected OES_vertex_array_object: any;\r\n    protected OES_vertex_array_object_supported: boolean;\r\n    get supportsVertexArrayObject(): boolean {\r\n        return this.OES_vertex_array_object_supported;\r\n    }\r\n    get vertexArrayObject(): any {\r\n        return this.extension(this.OES_vertex_array_object, 'OES_vertex_array_object');\r\n    }\r\n\r\n    // WebGL1\r\n    protected WEBGL_color_buffer_float: any;\r\n    protected WEBGL_color_buffer_float_supported: boolean;\r\n    // WebGL2\r\n    protected EXT_color_buffer_float: any;\r\n    protected EXT_color_buffer_float_supported: boolean;\r\n    get supportsColorBufferFloat(): boolean | undefined {\r\n        switch (this._backend) {\r\n            case Context.BackendType.WebGL1:\r\n                return this.WEBGL_color_buffer_float_supported;\r\n            case Context.BackendType.WebGL2:\r\n                return this.EXT_color_buffer_float_supported;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n    get colorBufferFloat(): any | undefined {\r\n        switch (this._backend) {\r\n            case Context.BackendType.WebGL1:\r\n                return this.extension(this.WEBGL_color_buffer_float, 'WEBGL_color_buffer_float');\r\n            case Context.BackendType.WebGL2:\r\n                return this.extension(this.EXT_color_buffer_float, 'EXT_color_buffer_float');\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_astc: any;\r\n    protected WEBGL_compressed_texture_astc_supported: boolean;\r\n    get supportsCompressedTextureASTC(): boolean {\r\n        return this.WEBGL_compressed_texture_astc_supported;\r\n    }\r\n    get compressedTextureASTC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_astc, 'WEBGL_compressed_texture_astc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_atc: any;\r\n    protected WEBGL_compressed_texture_atc_supported: boolean;\r\n    get supportsCompressedTextureATC(): boolean {\r\n        return this.WEBGL_compressed_texture_atc_supported;\r\n    }\r\n    get compressedTextureATC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_atc, 'WEBGL_compressed_texture_atc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_etc: any;\r\n    protected WEBGL_compressed_texture_etc_supported: boolean;\r\n    get supportsCompressedTextureETC(): boolean {\r\n        return this.WEBGL_compressed_texture_etc_supported;\r\n    }\r\n    get compressedTextureETC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_etc, 'WEBGL_compressed_texture_etc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_etc1: any;\r\n    protected WEBGL_compressed_texture_etc1_supported: boolean;\r\n    get supportsCompressedTextureETC1(): boolean {\r\n        return this.WEBGL_compressed_texture_etc1_supported;\r\n    }\r\n    get compressedTextureETC1(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_etc1, 'WEBGL_compressed_texture_etc1');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_pvrtc: any;\r\n    protected WEBGL_compressed_texture_pvrtc_supported: boolean;\r\n    get supportsCompressedTexturePVRTC(): boolean {\r\n        return this.WEBGL_compressed_texture_pvrtc_supported;\r\n    }\r\n    get compressedTexturePVRTC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_pvrtc, 'WEBGL_compressed_texture_pvrtc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_s3tc: any;\r\n    protected WEBGL_compressed_texture_s3tc_supported: boolean;\r\n    get supportsCompressedTextureS3TC(): boolean {\r\n        return this.WEBGL_compressed_texture_s3tc_supported;\r\n    }\r\n    get compressedTextureS3TC(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_s3tc, 'WEBGL_compressed_texture_s3tc');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_compressed_texture_s3tc_srgb: any;\r\n    protected WEBGL_compressed_texture_s3tc_srgb_supported: boolean;\r\n    get supportsCompressedTextureS3TCSRGB(): boolean {\r\n        return this.WEBGL_compressed_texture_s3tc_srgb_supported;\r\n    }\r\n    get compressedTextureS3TCSRGB(): any {\r\n        return this.extension(this.WEBGL_compressed_texture_s3tc_srgb, 'WEBGL_compressed_texture_s3tc_srgb');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_debug_renderer_info: any;\r\n    protected WEBGL_debug_renderer_info_supported: boolean;\r\n    get supportsDebugRendererInfo(): boolean {\r\n        return this.WEBGL_debug_renderer_info_supported;\r\n    }\r\n    get debugRendererInfo(): any {\r\n        return this.extension(this.WEBGL_debug_renderer_info, 'WEBGL_debug_renderer_info');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_debug_shaders: any;\r\n    protected WEBGL_debug_shaders_supported: boolean;\r\n    get supportsDebugShaders(): boolean {\r\n        return this.WEBGL_debug_shaders_supported;\r\n    }\r\n    get debugShaders(): any {\r\n        return this.extension(this.WEBGL_debug_shaders, 'WEBGL_debug_shaders');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected WEBGL_depth_texture: any;\r\n    protected WEBGL_depth_texture_supported: boolean;\r\n    get supportsDepthTexture(): boolean {\r\n        return this.WEBGL_depth_texture_supported;\r\n    }\r\n    get depthTexture(): any {\r\n        return this.extension(this.WEBGL_depth_texture, 'WEBGL_depth_texture');\r\n    }\r\n\r\n    // WebGL1, WebGL2-default\r\n    protected WEBGL_draw_buffers: any;\r\n    protected WEBGL_draw_buffers_supported: boolean;\r\n    get supportsDrawBuffers(): boolean {\r\n        return this.WEBGL_draw_buffers_supported;\r\n    }\r\n    get drawBuffers(): any {\r\n        return this.extension(this.WEBGL_draw_buffers, 'WEBGL_draw_buffers');\r\n    }\r\n\r\n    // WebGL1, WebGL2\r\n    protected WEBGL_lose_context: any;\r\n    protected WEBGL_lose_context_supported: boolean;\r\n    get supportsLoseContext(): boolean {\r\n        return this.WEBGL_lose_context_supported;\r\n    }\r\n    get loseContext(): any {\r\n        return this.extension(this.WEBGL_lose_context, 'WEBGL_lose_context');\r\n    }\r\n\r\n    // FUNCTION QUERIES\r\n\r\n    /**\r\n     * True if WebGL2 blitFramebuffer is supported, false otherwise. This is experimental technology.\r\n     */\r\n    get supportsBlitFramebuffer(): boolean {\r\n        return this._context.blitFramebuffer !== undefined;\r\n    }\r\n\r\n    /**\r\n     * True if WebGL2 readBuffer is supported, false otherwise. This is experimental technology.\r\n     */\r\n    get supportsReadBuffer(): boolean {\r\n        return this._context.readBuffer !== undefined;\r\n    }\r\n\r\n    // PARAMETER QUERIES\r\n\r\n    /**\r\n     * Provides the context's extension hash. The hash can be used for context masquerade.\r\n     */\r\n    hash(): string {\r\n        return ExtensionsHash.encode(this._backend as Context.BackendType, this._extensions);\r\n    }\r\n\r\n    /**\r\n     * Queries various parameters (depending on the type of context and support of extensions) and returns them as\r\n     * formatted string.\r\n     * @returns - Array of 2-tuple containing (1) the queried enum as string and (2) the resulting parameter value.\r\n     */\r\n    about(): Array<[string, number | string]> {\r\n\r\n        const available = 'ok';\r\n        const unavailable = 'na';\r\n\r\n        if (this._backend === Context.BackendType.Invalid) {\r\n            return new Array<[string, number | string]>();\r\n        }\r\n\r\n        const pNamesAndValues = new Array<[string, number | string]>();\r\n\r\n        pNamesAndValues.push(['BACKEND (GLOPERATE)', this.backend as Context.BackendType]);\r\n        pNamesAndValues.push(['CONTEXT_HASH (GLOPERATE)', this.hash()]);\r\n\r\n        pNamesAndValues.push(['RENDERER',\r\n            this._context.getParameter(this._context.RENDERER)]);\r\n        pNamesAndValues.push(['VENDOR',\r\n            this._context.getParameter(this._context.VENDOR)]);\r\n        pNamesAndValues.push(['VERSION',\r\n            this._context.getParameter(this._context.VERSION)]);\r\n        pNamesAndValues.push(['SHADING_LANGUAGE_VERSION',\r\n            this._context.getParameter(this._context.SHADING_LANGUAGE_VERSION)]);\r\n\r\n        /* Debug Render Info Extension - Unmasked Vendor and Renderer. */\r\n        pNamesAndValues.push(['UNMASKED_VENDOR_WEBGL', !this.supportsDebugRendererInfo ? unavailable :\r\n            this._context.getParameter(this.debugRendererInfo.UNMASKED_VENDOR_WEBGL)]);\r\n        pNamesAndValues.push(['UNMASKED_RENDERER_WEBGL', !this.supportsDebugRendererInfo ? unavailable :\r\n            this._context.getParameter(this.debugRendererInfo.UNMASKED_RENDERER_WEBGL)]);\r\n\r\n        /* Actual Context Attributes. */\r\n        pNamesAndValues.push(['ALPHA (ATTRIBUTE)', String(this.alpha)]);\r\n        pNamesAndValues.push(['ANTIALIAS (ATTRIBUTE)', String(this.antialias)]);\r\n        pNamesAndValues.push(['DEPTH (ATTRIBUTE)', String(this.depth)]);\r\n        pNamesAndValues.push(['FAIL_IF_MAJOR_PERFORMANCE_CAVEAT (ATTRIBUTE)',\r\n            String(this.failIfMajorPerformanceCaveat)]);\r\n        pNamesAndValues.push(['PREMULTIPLIED_ALPHA (ATTRIBUTE)', String(this.premultipliedAlpha)]);\r\n        pNamesAndValues.push(['PRESERVE_DRAWING_BUFFER (ATTRIBUTE)', String(this.preserveDrawingBuffer)]);\r\n        pNamesAndValues.push(['STENCIL (ATTRIBUTE)', String(this.stencil)]);\r\n\r\n        /* Window Info. */\r\n        pNamesAndValues.push(['DEVICE_PIXEL_RATIO (WINDOW)', window.devicePixelRatio]);\r\n\r\n        /* Navigator Info. */\r\n        pNamesAndValues.push(['APP_CODE_NAME (NAVIGATOR)', window.navigator.appCodeName]);\r\n        pNamesAndValues.push(['APP_NAME (NAVIGATOR)', window.navigator.appName]);\r\n        pNamesAndValues.push(['APP_VERSION (NAVIGATOR)', window.navigator.appVersion]);\r\n        pNamesAndValues.push(['PLATFORM (NAVIGATOR)', window.navigator.platform]);\r\n        pNamesAndValues.push(['HARDWARE_CONCURRENCY (NAVIGATOR)', window.navigator.appCodeName]);\r\n        pNamesAndValues.push(['VENDOR (NAVIGATOR)', window.navigator.vendor]);\r\n        pNamesAndValues.push(['VENDOR_SUB (NAVIGATOR)', window.navigator.vendorSub]);\r\n\r\n        /* Max and min queries - context limitations. */\r\n        pNamesAndValues.push(['MAX_COMBINED_TEXTURE_IMAGE_UNITS',\r\n            this._context.getParameter(this._context.MAX_COMBINED_TEXTURE_IMAGE_UNITS)]);\r\n        pNamesAndValues.push(['MAX_CUBE_MAP_TEXTURE_SIZE',\r\n            this._context.getParameter(this._context.MAX_CUBE_MAP_TEXTURE_SIZE)]);\r\n        pNamesAndValues.push(['MAX_FRAGMENT_UNIFORM_VECTORS',\r\n            this._context.getParameter(this._context.MAX_FRAGMENT_UNIFORM_VECTORS)]);\r\n        pNamesAndValues.push(['MAX_RENDERBUFFER_SIZE',\r\n            this._context.getParameter(this._context.MAX_RENDERBUFFER_SIZE)]);\r\n        pNamesAndValues.push(['MAX_TEXTURE_IMAGE_UNITS',\r\n            this._context.getParameter(this._context.MAX_TEXTURE_IMAGE_UNITS)]);\r\n        pNamesAndValues.push(['MAX_TEXTURE_SIZE',\r\n            this._context.getParameter(this._context.MAX_TEXTURE_SIZE)]);\r\n        pNamesAndValues.push(['MAX_VARYING_VECTORS',\r\n            this._context.getParameter(this._context.MAX_VARYING_VECTORS)]);\r\n        pNamesAndValues.push(['MAX_VERTEX_ATTRIBS',\r\n            this._context.getParameter(this._context.MAX_VERTEX_ATTRIBS)]);\r\n        pNamesAndValues.push(['MAX_VERTEX_TEXTURE_IMAGE_UNITS',\r\n            this._context.getParameter(this._context.MAX_VERTEX_TEXTURE_IMAGE_UNITS)]);\r\n        pNamesAndValues.push(['MAX_VERTEX_UNIFORM_VECTORS',\r\n            this._context.getParameter(this._context.MAX_VERTEX_UNIFORM_VECTORS)]);\r\n\r\n        const MAX_VIEWPORT_DIMS = this._context.getParameter(this._context.MAX_VIEWPORT_DIMS);\r\n        pNamesAndValues.push(['MAX_VIEWPORT_DIMS (WIDTH)', MAX_VIEWPORT_DIMS[0]]);\r\n        pNamesAndValues.push(['MAX_VIEWPORT_DIMS (HEIGHT)', MAX_VIEWPORT_DIMS[1]]);\r\n\r\n\r\n        if (this.isWebGL2) {\r\n            pNamesAndValues.push(['MAX_3D_TEXTURE_SIZE',\r\n                this._context.getParameter(this._context.MAX_3D_TEXTURE_SIZE)]);\r\n            pNamesAndValues.push(['MAX_ARRAY_TEXTURE_LAYERS',\r\n                this._context.getParameter(this._context.MAX_ARRAY_TEXTURE_LAYERS)]);\r\n            pNamesAndValues.push(['MAX_CLIENT_WAIT_TIMEOUT_WEBGL',\r\n                this._context.getParameter(this._context.MAX_CLIENT_WAIT_TIMEOUT_WEBGL)]);\r\n            pNamesAndValues.push(['MAX_COLOR_ATTACHMENTS',\r\n                this._context.getParameter(this._context.MAX_COLOR_ATTACHMENTS)]);\r\n            pNamesAndValues.push(['MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS',\r\n                this._context.getParameter(this._context.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_COMBINED_UNIFORM_BLOCKS',\r\n                this._context.getParameter(this._context.MAX_COMBINED_UNIFORM_BLOCKS)]);\r\n            pNamesAndValues.push(['MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS',\r\n                this._context.getParameter(this._context.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_DRAW_BUFFERS',\r\n                this._context.getParameter(this._context.MAX_DRAW_BUFFERS)]);\r\n            pNamesAndValues.push(['MAX_ELEMENT_INDEX',\r\n                this._context.getParameter(this._context.MAX_ELEMENT_INDEX)]);\r\n            pNamesAndValues.push(['MAX_ELEMENTS_INDICES',\r\n                this._context.getParameter(this._context.MAX_ELEMENTS_INDICES)]);\r\n            pNamesAndValues.push(['MAX_ELEMENTS_VERTICES',\r\n                this._context.getParameter(this._context.MAX_ELEMENTS_VERTICES)]);\r\n            pNamesAndValues.push(['MAX_FRAGMENT_INPUT_COMPONENTS',\r\n                this._context.getParameter(this._context.MAX_FRAGMENT_INPUT_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_FRAGMENT_UNIFORM_BLOCKS',\r\n                this._context.getParameter(this._context.MAX_FRAGMENT_UNIFORM_BLOCKS)]);\r\n            pNamesAndValues.push(['MAX_FRAGMENT_UNIFORM_COMPONENTS',\r\n                this._context.getParameter(this._context.MAX_FRAGMENT_UNIFORM_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_PROGRAM_TEXEL_OFFSET',\r\n                this._context.getParameter(this._context.MAX_PROGRAM_TEXEL_OFFSET)]);\r\n            pNamesAndValues.push(['MAX_SAMPLES',\r\n                this._context.getParameter(this._context.MAX_SAMPLES)]);\r\n            pNamesAndValues.push(['MAX_SERVER_WAIT_TIMEOUT',\r\n                this._context.getParameter(this._context.MAX_SERVER_WAIT_TIMEOUT)]);\r\n            pNamesAndValues.push(['MAX_TEXTURE_LOD_BIAS',\r\n                this._context.getParameter(this._context.MAX_TEXTURE_LOD_BIAS)]);\r\n            pNamesAndValues.push(['MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS',\r\n                this._context.getParameter(this._context.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS',\r\n                this._context.getParameter(this._context.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)]);\r\n            pNamesAndValues.push(['MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS',\r\n                this._context.getParameter(this._context.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_UNIFORM_BLOCK_SIZE',\r\n                this._context.getParameter(this._context.MAX_UNIFORM_BLOCK_SIZE)]);\r\n            pNamesAndValues.push(['MAX_UNIFORM_BUFFER_BINDINGS',\r\n                this._context.getParameter(this._context.MAX_UNIFORM_BUFFER_BINDINGS)]);\r\n            pNamesAndValues.push(['MAX_VARYING_COMPONENTS',\r\n                this._context.getParameter(this._context.MAX_VARYING_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_VERTEX_OUTPUT_COMPONENTS',\r\n                this._context.getParameter(this._context.MAX_VERTEX_OUTPUT_COMPONENTS)]);\r\n            pNamesAndValues.push(['MAX_VERTEX_UNIFORM_BLOCKS',\r\n                this._context.getParameter(this._context.MAX_VERTEX_UNIFORM_BLOCKS)]);\r\n            pNamesAndValues.push(['MAX_VERTEX_UNIFORM_COMPONENTS',\r\n                this._context.getParameter(this._context.MAX_VERTEX_UNIFORM_COMPONENTS)]);\r\n            pNamesAndValues.push(['MIN_PROGRAM_TEXEL_OFFSET',\r\n                this._context.getParameter(this._context.MIN_PROGRAM_TEXEL_OFFSET)]);\r\n        }\r\n\r\n        if (this.isWebGL1) {\r\n            for (const extension of WEBGL1_EXTENSIONS) {\r\n                pNamesAndValues.push([extension, this.supports(extension) ? available : unavailable]);\r\n            }\r\n        } else if (this.isWebGL2) {\r\n            for (const extension of WEBGL2_DEFAULT_EXTENSIONS) {\r\n                pNamesAndValues.push([`${extension} (default)`, available]);\r\n            }\r\n            for (const extension of WEBGL2_EXTENSIONS) {\r\n                pNamesAndValues.push([extension, this.supports(extension) ? available : unavailable]);\r\n            }\r\n        }\r\n\r\n        return pNamesAndValues;\r\n    }\r\n\r\n    /**\r\n     * Creates a well formated about string, e.g., for logging.\r\n     */\r\n    aboutString(): string {\r\n        const about = this.about();\r\n\r\n        let maxPNameLength = 0;\r\n        for (const tuple of about) {\r\n            maxPNameLength = Math.max(tuple[0].length, maxPNameLength);\r\n        }\r\n\r\n        let index = 0;\r\n        let message = ``;\r\n\r\n        const extensionSeparator = this.isWebGL2 ? 63 + WEBGL2_DEFAULT_EXTENSIONS.length : -1;\r\n        for (const tuple of about) {\r\n            /* Provide some semantic grouping: Core, Limits, Extensions, ... */\r\n            switch (index) {\r\n                case 2:  // End of Backend and Context Hash\r\n                case 6:  // End of Core Context Info\r\n                case 8:  // End of unmasked vendor and renderer\r\n                case 15: // End of context attributes\r\n                case 16: // End of window attributes\r\n                case 23: // End of navigator attributes\r\n                case 35: // End of WebGL 1 specific Limits\r\n                case 63: // End of WebGL 2 specific Limit, start of extensions\r\n                case extensionSeparator: // End of default Extensions (in case of WebGL2) or -1\r\n                    message += `\\n`;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            message += `  ${tuple[0]} ${'-'.repeat(maxPNameLength - tuple[0].length)}-- ${tuple[1]}\\n`;\r\n            ++index;\r\n        }\r\n        message += `\\n`;\r\n\r\n        return message;\r\n    }\r\n\r\n    /**\r\n     * Logs a well formated list of all queried about params (names and associated values).\r\n     * @param verbosity - Log verbosity that is to be used for logging.\r\n     */\r\n    logAbout(verbosity: LogLevel = LogLevel.Info): void {\r\n        log(verbosity, `context.about\\n\\n` + this.aboutString());\r\n    }\r\n\r\n    /**\r\n     * Invokes `logAbout` @see{@link logAbout}) iff the given statement has resolved to true.\r\n     * @param statement - Result of an expression expected to be true in order to invoke logPerformanceStop.\r\n     * @param verbosity - Log verbosity that is to be used for logging.\r\n     */\r\n    logAboutIf(statement: boolean, verbosity: LogLevel = LogLevel.Info): void {\r\n        logIf(statement, verbosity, `context.about\\n\\n` + this.aboutString());\r\n    }\r\n\r\n}\r\n\r\nexport namespace Context {\r\n\r\n    /**\r\n     * Supported OpenGL backend types.\r\n     */\r\n    export enum BackendType {\r\n        Invalid = 'invalid',\r\n        WebGL1 = 'webgl1',\r\n        WebGL2 = 'webgl2',\r\n    }\r\n\r\n    /**\r\n     * The list of valid backend identifiers that can be requested and matched to backend types.\r\n     * List adopted from https://developer.mozilla.org/de/docs/Web/API/HTMLCanvasElement/getContext.\r\n     */\r\n    export enum BackendRequestType {\r\n        auto = 'auto',\r\n        webgl = 'webgl',\r\n        experimental = 'experimental-webgl',\r\n        webgl1 = 'webgl1',\r\n        experimental1 = 'experimental-webgl1',\r\n        webgl2 = 'webgl2',\r\n        experimental2 = 'experimental-webgl2',\r\n    }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\nimport { WEBGL1_EXTENSIONS, WEBGL2_EXTENSIONS } from './extensions';\r\n\r\nexport class ExtensionsHash {\r\n\r\n    protected static readonly WEBGL_BACKENDS: Array<string> = ['webgl1', 'webgl2'];\r\n\r\n    protected static readonly WEBGL_EXTENSIONS_BY_BACKEND = new Map<number, Array<string>>([\r\n        [0, WEBGL1_EXTENSIONS],\r\n        [1, WEBGL2_EXTENSIONS],\r\n    ]);\r\n\r\n    /**\r\n     * All known WebGL extensions (regardless of WebGL version). When new extensions become known, a new internal\r\n     * version has to be created, comprising all extensions again (some removed, some added w.r.t. previous versions).\r\n     */\r\n    protected static readonly EXTENSIONS_BY_VERSION = new Map<number, Array<string>>([[\r\n        0b000, [\r\n            'ANGLE_instanced_arrays',\r\n            'EXT_blend_minmax',\r\n            'EXT_color_buffer_float',\r\n            'EXT_color_buffer_half_float',\r\n            'EXT_disjoint_timer_query',\r\n            'EXT_disjoint_timer_query_webgl2',\r\n            'EXT_frag_depth',\r\n            'EXT_shader_texture_lod',\r\n            'EXT_sRGB',\r\n            'EXT_texture_filter_anisotropic',\r\n            'OES_element_index_uint',\r\n            'OES_standard_derivatives',\r\n            'OES_texture_float',\r\n            'OES_texture_float_linear',\r\n            'OES_texture_half_float',\r\n            'OES_texture_half_float_linear',\r\n            'OES_vertex_array_object',\r\n            'WEBGL_color_buffer_float',\r\n            'WEBGL_compressed_texture_astc',\r\n            'WEBGL_compressed_texture_atc',\r\n            'WEBGL_compressed_texture_etc',\r\n            'WEBGL_compressed_texture_etc1',\r\n            'WEBGL_compressed_texture_pvrtc',\r\n            'WEBGL_compressed_texture_s3tc',\r\n            'WEBGL_compressed_texture_s3tc_srgb',\r\n            'WEBGL_debug_renderer_info',\r\n            'WEBGL_debug_shaders',\r\n            'WEBGL_depth_texture',\r\n            'WEBGL_draw_buffers',\r\n            'WEBGL_lose_context',\r\n        ]],\r\n    ]);\r\n\r\n    /**\r\n     * Hash versioning is used to account for future, yet unknown/unpublished extensions while maintaining support for\r\n     * existing hashes.\r\n     */\r\n    protected static readonly LATEST_VERSION = 0b000;\r\n\r\n    protected static readonly BASE64_ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-+';\r\n\r\n    /**\r\n     * Encodes a number of bitfield semantics (of 6 bits) into a base64 character.\r\n     * @param base64 - Bitfield of 6 bits (as number).\r\n     */\r\n    protected static encode64(bitfield: number): string {\r\n        assert(bitfield >= 0b000000 && bitfield <= 0b111111,\r\n            `expected bitfield in range [ 0b000000, 0b111111 ], given ${bitfield}`);\r\n        return ExtensionsHash.BASE64_ALPHABET[bitfield];\r\n    }\r\n\r\n    /**\r\n     * Decodes a single base64 encoded character to a number of bitfield semantics.\r\n     * @param base64 - Single base64 encoded character (string).\r\n     */\r\n    protected static decode64(base64: string): number {\r\n        assert(base64.length === 1, `expected single base64 character, given '${base64}'`);\r\n        const bitfield = ExtensionsHash.BASE64_ALPHABET.indexOf(base64);\r\n        assert(bitfield > -1, `unknown base64 character, given '${base64}'`);\r\n        return bitfield;\r\n    }\r\n\r\n    /**\r\n     * Generates a hash that encodes the contexts webgl backend and extension support. This is intended to be queried\r\n     * whenever support for a given context on a foreign client is due. The hash can be used as masquerade input.\r\n     * @param backend - WebGL backend: 'webgl1' or 'webgl2'.\r\n     * @param supported - Array of supported extensions to be encoded.\r\n     */\r\n    static encode(backend: Context.BackendType, supported: Array<string>): string {\r\n        const version = ExtensionsHash.LATEST_VERSION; // should always be set to the latest version\r\n        const extensions = ExtensionsHash.EXTENSIONS_BY_VERSION.get(version) as Array<string>;\r\n\r\n        const backendIndex = ExtensionsHash.WEBGL_BACKENDS.indexOf(backend);\r\n        assert(backendIndex > -1, `expected valid backend ${ExtensionsHash.WEBGL_BACKENDS}, given ${backend} `);\r\n\r\n        let hash: string = ExtensionsHash.encode64((version << 3) | (backendIndex + 1));\r\n        if (supported.length === 0) {\r\n            return hash;\r\n        }\r\n\r\n        let support = 0b000000;\r\n        for (let i = 0; i < extensions.length; ++i) {\r\n            support |= (supported.indexOf(extensions[i]) > -1 ? 0b100000 >> (i % 6) : 0b0);\r\n            if (i % 6 < 5 && i < extensions.length - 1) {\r\n                continue;\r\n            }\r\n            /* Convert every pack of 6 bits into a base64 encoded string and append it to the hash. */\r\n            hash += ExtensionsHash.encode64(support);\r\n            support = 0b000000;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    /**\r\n     * Decodes a hash into a WebGL backend and supported extensions.\r\n     * @param hash - Versioned extension hash.\r\n     * @returns - Tuple of webgl backend and an array of extensions.\r\n     */\r\n    static decode(hash: string): [string, Array<string>] {\r\n\r\n        const hashHead = ExtensionsHash.decode64(hash[0]);\r\n        const version = hashHead >> 3;\r\n\r\n        const backendIndex = (hashHead & 0b000111) - 1;\r\n        assert(backendIndex < ExtensionsHash.WEBGL_BACKENDS.length,\r\n            `expected valid backend index, given ${backendIndex}`);\r\n\r\n        const backend = ExtensionsHash.WEBGL_BACKENDS[backendIndex];\r\n\r\n        assert(ExtensionsHash.EXTENSIONS_BY_VERSION.has(version), `expected valid hash version, given ${version}`);\r\n        const extensions = ExtensionsHash.EXTENSIONS_BY_VERSION.get(version) as Array<string>;\r\n\r\n        const expectedHashLength = Math.ceil(extensions.length / 6) + 1;\r\n        assert(hash.length === expectedHashLength,\r\n            `expected hash of version ${version} to have a length of ${expectedHashLength}, given ${hash}`);\r\n\r\n        const supported = new Array<string>();\r\n        for (let i = 1; i < hash.length; ++i) {\r\n            const bitfield = ExtensionsHash.decode64(hash[i]);\r\n            const offset = (i - 1) * 6;\r\n\r\n            /* loop explicitly unrolled */\r\n            if (bitfield & 0b100000) {\r\n                supported.push(extensions[offset + 0]);\r\n            }\r\n            if (bitfield & 0b010000) {\r\n                supported.push(extensions[offset + 1]);\r\n            }\r\n            if (bitfield & 0b001000) {\r\n                supported.push(extensions[offset + 2]);\r\n            }\r\n            if (bitfield & 0b000100) {\r\n                supported.push(extensions[offset + 3]);\r\n            }\r\n            if (bitfield & 0b000010) {\r\n                supported.push(extensions[offset + 4]);\r\n            }\r\n            if (bitfield & 0b000001) {\r\n                supported.push(extensions[offset + 5]);\r\n            }\r\n        }\r\n        return [backend, supported];\r\n    }\r\n\r\n    /**\r\n     * For a given set of extensions, this generates the complementary set of extensions for a given backend.\r\n     * @param backend - WebGL backend: 'webgl1' or 'webgl2'.\r\n     * @param extensions - Array of extensions to be complemented to all extensions available to the backend.\r\n     */\r\n    static complement(backend: string, extensions: Array<string>): Array<string> {\r\n        const backendIndex = ExtensionsHash.WEBGL_BACKENDS.indexOf(backend);\r\n        assert(backendIndex > -1, `expected valid backend ${ExtensionsHash.WEBGL_BACKENDS}, given ${backend} `);\r\n\r\n        const webglExtensions = ExtensionsHash.WEBGL_EXTENSIONS_BY_BACKEND.get(backendIndex) as Array<string>;\r\n        return webglExtensions.filter((ext) => extensions.indexOf(ext) < 0);\r\n    }\r\n\r\n}\r\n","\r\nimport { vec4 } from 'gl-matrix';\r\nimport { clamp, mix } from './gl-matrix-extensions';\r\n\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\nimport { clampf, clampf3, clampf4, duplicate4, equals4, GLclampf3, GLclampf4, GLclampf5 } from './tuples';\r\n\r\n\r\n/**\r\n * Color class that allows for specification and conversion of colors in various color spaces. Please not that most of\r\n * the color conversion math is based on  {@link https://www.easyrgb.com/en/math.php}. The internal color representation\r\n * is a 4-tuple of GLclampf components in RGB color space and additional alpha. All color conversion, e.g., getters is\r\n * computed on the fly, not cached, and is not optimized for, e.g., massive pixel processing.\r\n */\r\nexport class Color {\r\n\r\n    protected static readonly DEFAULT_ALPHA: GLclampf = 1.0;\r\n    protected static readonly HEX_FORMAT_REGEX = new RegExp(/^(#|0x)?(([0-9a-f]{3}){1,2}|([0-9a-f]{4}){1,2})$/i);\r\n\r\n    protected _rgba: GLclampf4 = [0.0, 0.0, 0.0, Color.DEFAULT_ALPHA];\r\n\r\n\r\n    /** @see {@link altered} */\r\n    protected _altered = false;\r\n\r\n\r\n    /**\r\n     * Converts a hue value into an rgb value.\r\n     */\r\n    protected static hue2rgb(p: GLfloat, q: GLfloat, t: GLfloat): GLfloat {\r\n        assert(t >= -1.0 && t <= 2.0, `t is expected to be between -1 and 2`);\r\n        if (t < 0.0) {\r\n            t += 1.0;\r\n        } else if (t > 1.0) {\r\n            t -= 1.0;\r\n        }\r\n\r\n        if ((6.0 * t) < 1.0) {\r\n            return p + (q - p) * 6.0 * t;\r\n        }\r\n        if ((2.0 * t) < 1.0) {\r\n            return q;\r\n        }\r\n        if ((3.0 * t) < 2.0) {\r\n            return p + (q - p) * 6.0 * (2.0 / 3.0 - t);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * Converts a float value to two-character HEX code.\r\n     * @param value - A float value in [0.0, 1.0].\r\n     * @returns - Two-character hexadecimal representation in [00, FF].\r\n     */\r\n    protected static to2CharHexCode(value: number): string {\r\n        return (value < 15.5 / 255.0 ? '0' : '') + Math.round(value * 255.0).toString(16);\r\n    }\r\n\r\n    /**\r\n     * Converts a color from HSL space to RGB space.\r\n     * @param hsl - HSL color tuple: hue, saturation, and lightness, each in [0.0, 1.0].\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0].\r\n     */\r\n    static hsl2rgb(hsl: GLclampf3): GLclampf3 {\r\n        const hslF = clampf3(hsl, 'HSL input');\r\n\r\n        if (hslF[1] === 0.0) {\r\n            return [hslF[2], hslF[2], hslF[2]];\r\n        }\r\n\r\n        const q = hslF[2] < 0.5 ? hslF[2] * (1.0 + hslF[1]) : (hslF[2] + hslF[1]) - (hslF[1] * hslF[2]);\r\n        const p = 2.0 * hslF[2] - q;\r\n\r\n        return [Color.hue2rgb(p, q, hslF[0] + (1.0 / 3.0))\r\n            , Color.hue2rgb(p, q, hslF[0]), Color.hue2rgb(p, q, hslF[0] - (1.0 / 3.0))];\r\n    }\r\n\r\n    /**\r\n     * Converts a color from HSL space to RGB space.\r\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0].\r\n     * @returns - HSL color tuple: hue, saturation, and lightness, each in [0.0, 1.0].\r\n     */\r\n    static rgb2hsl(rgb: GLclampf3): GLclampf3 {\r\n        const rgbF = clampf3(rgb, 'RGB input');\r\n        const hsl: GLclampf3 = [0.0, 0.0, 0.0];\r\n\r\n        const min = Math.min(rgbF[0], rgbF[1], rgbF[2]);\r\n        const max = Math.max(rgbF[0], rgbF[1], rgbF[2]);\r\n        const delta = max - min;\r\n\r\n        hsl[2] = (max + min) * 0.5;\r\n\r\n        if (delta === 0.0) {\r\n            return hsl;\r\n        }\r\n\r\n        hsl[1] = hsl[2] < 0.5 ? delta / (max + min) : delta / (2.0 - max - min);\r\n\r\n        const deltaR = (((max - rgbF[0]) / 6.0) + (delta / 2.0)) / delta;\r\n        const deltaG = (((max - rgbF[1]) / 6.0) + (delta / 2.0)) / delta;\r\n        const deltaB = (((max - rgbF[2]) / 6.0) + (delta / 2.0)) / delta;\r\n\r\n        if (rgbF[0] === max) {\r\n            hsl[0] = deltaB - deltaG;\r\n        } else if (rgbF[1] === max) {\r\n            hsl[0] = deltaR - deltaB + (1.0 / 3.0);\r\n        } else { // if (rgbF[2] === max) {\r\n            hsl[0] = deltaG - deltaR + (2.0 / 3.0);\r\n        }\r\n        return hsl;\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a color from LAB space to XYZ space.\r\n     * @param lab - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\r\n     * @returns - XYZ color tuple: x, y, and z, each in [0.0, 1.0].\r\n     */\r\n    static lab2xyz(lab: GLclampf3): GLclampf3 {\r\n        const labF = clampf3(lab, 'LAB input');\r\n\r\n        const yr = (labF[0] * 100.0 + 16.0) / 116.0;\r\n        const xr = labF[1] * 100 / 500.0 + yr;\r\n        const zr = yr - labF[2] * 100 / 200.0;\r\n\r\n        const yr3 = yr * yr * yr;\r\n        const xr3 = xr * xr * xr;\r\n        const zr3 = zr * zr * zr;\r\n\r\n        /* D65/2° illuminant for XYZ conversion */\r\n        const y = 1.00000 * (yr3 > 0.008856 ? yr3 : (yr - 16.0 / 116.0) / 7.787);\r\n        const x = 0.95047 * (xr3 > 0.008856 ? xr3 : (xr - 16.0 / 116.0) / 7.787);\r\n        const z = 1.08883 * (zr3 > 0.008856 ? zr3 : (zr - 16.0 / 116.0) / 7.787);\r\n\r\n        return [x, y, z];\r\n    }\r\n\r\n    /**\r\n     * Converts a color from XYZ space to LAB space.\r\n     * @param xyz - XYZ color tuple: x, y, and z, each in [0.0, 1.0].\r\n     * @returns - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\r\n     */\r\n    static xyz2lab(xyz: GLclampf3): GLclampf3 {\r\n        // DO NOT CLAMP! const xyzF = clampf3(xyz, 'XYZ input');\r\n        const xyzF = [xyz[0] / 0.95047, xyz[1] * 1.00000, xyz[2] / 1.08883];\r\n\r\n        /* implicit illuminant of [1.0, 1.0, 1.0] assumed */\r\n        const x = xyzF[0] > 0.008856 ? Math.pow(xyzF[0], 1.0 / 3.0) : (7.787 * xyzF[0]) + (16.0 / 116.0);\r\n        const y = xyzF[1] > 0.008856 ? Math.pow(xyzF[1], 1.0 / 3.0) : (7.787 * xyzF[1]) + (16.0 / 116.0);\r\n        const z = xyzF[2] > 0.008856 ? Math.pow(xyzF[2], 1.0 / 3.0) : (7.787 * xyzF[2]) + (16.0 / 116.0);\r\n\r\n        return clampf3([\r\n            0.01 * (116.0 * y - 16.0),\r\n            0.01 * (500.0 * (x - y)),\r\n            0.01 * (200.0 * (y - z))]);\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a color from XYZ space to Adobe-RGB space.\r\n     * @param xyz - XYZ color tuple: x, y, and z, and refer to the D65/2° illuminant.\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     */\r\n    static xyz2rgb(xyz: GLclampf3): GLclampf3 {\r\n        // DO NOT CLAMP! const xyzF = clampf3(xyz, 'XYZ input');\r\n\r\n        const r = xyz[0] * +2.04159 + xyz[1] * -0.56501 + xyz[2] * -0.34473;\r\n        const g = xyz[0] * -0.96924 + xyz[1] * +1.87597 + xyz[2] * +0.04156;\r\n        const b = xyz[0] * +0.01344 + xyz[1] * -0.11836 + xyz[2] * +1.01517;\r\n\r\n        return clampf3([\r\n            Math.pow(r, 1.0 / 2.19921875),\r\n            Math.pow(g, 1.0 / 2.19921875),\r\n            Math.pow(b, 1.0 / 2.19921875)]);\r\n\r\n        // Standard-RGB\r\n        // let r = xyz[0] * +3.2406 + xyz[1] * -1.5372 + xyz[2] * -0.4986;\r\n        // let g = xyz[0] * -0.9689 + xyz[1] * +1.8758 + xyz[2] * +0.0415;\r\n        // let b = xyz[0] * +0.0557 + xyz[1] * -0.2040 + xyz[2] * +1.0570;\r\n\r\n        // r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : 12.92 * r;\r\n        // g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : 12.92 * g;\r\n        // b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : 12.92 * b;\r\n        // return [r, g, b];\r\n    }\r\n\r\n    /**\r\n     * Converts a color from Adobe-RGB space to XYZ space.\r\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     * @returns - XYZ color tuple: x, y, and z, each in [0.0, 1.0].\r\n     */\r\n    static rgb2xyz(rgb: GLclampf3): GLclampf3 {\r\n        const rgbF = clampf3(rgb, 'RGB input');\r\n\r\n        const r = Math.pow(rgbF[0], 2.19921875);\r\n        const g = Math.pow(rgbF[1], 2.19921875);\r\n        const b = Math.pow(rgbF[2], 2.19921875);\r\n\r\n        const x = r * 0.57667 + g * 0.18556 + b * 0.18823;\r\n        const y = r * 0.29734 + g * 0.62736 + b * 0.07529;\r\n        const z = r * 0.02703 + g * 0.07069 + b * 0.99134;\r\n        return [x, y, z];\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a color from LAB space to RGB space.\r\n     * @param lab - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     */\r\n    static lab2rgb(lab: GLclampf3): GLclampf3 {\r\n        return Color.xyz2rgb(Color.lab2xyz(lab));\r\n    }\r\n\r\n    /**\r\n     * Converts a color from RGB space to LAB space.\r\n     * @param lab - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     */\r\n    static rgb2lab(rgb: GLclampf3): GLclampf3 {\r\n        return Color.xyz2lab(Color.rgb2xyz(rgb));\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a color from CMYK space to RGB space.\r\n     * @param cmyk - CMYK color tuple: cyan, magenta, yellow, and key, each in [0.0, 1.0].\r\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     */\r\n    static cmyk2rgb(cmyk: GLclampf4): GLclampf3 {\r\n        const cmykF = clampf4(cmyk, 'CMYK input');\r\n\r\n        const k = 1.0 - cmykF[3];\r\n        return [(1.0 - cmykF[0]) * k, (1.0 - cmykF[1]) * k, (1.0 - cmykF[2]) * k];\r\n    }\r\n\r\n    /**\r\n     * Converts a color from RGB space to CMYK space.\r\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     * @returns - CMYK color tuple: cyan, magenta, yellow, and key, each in [0.0, 1.0].\r\n     */\r\n    static rgb2cmyk(rgb: GLclampf3): GLclampf4 {\r\n        const rgbF = clampf3(rgb, 'RGB input');\r\n\r\n        const k1 = 1.0 - Math.max(rgbF[0], rgbF[1], rgbF[2]);\r\n        const k2 = 1.0 - k1;\r\n        const k3 = k2 === 0.0 ? 0.0 : 1.0 / k2;\r\n        return [(k2 - rgbF[0]) * k3, (k2 - rgbF[1]) * k3, (k2 - rgbF[2]) * k3, k1];\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts a color from HEX string to RGBA space. The hex string can start with '#' or '0x' or neither of these.\r\n     * @param hex - Hexadecimal color string: red, green, and blue, each in ['00', 'ff'].\r\n     * @returns - RGBA color tuple: red, green, blue, and alpha, each in [0.0, 1.0]. On error [0, 0, 0, 0] is returned.\r\n     */\r\n    static hex2rgba(hex: string): GLclampf4 {\r\n        const rgba: GLclampf4 = [0.0, 0.0, 0.0, Color.DEFAULT_ALPHA];\r\n\r\n        if (!Color.HEX_FORMAT_REGEX.test(hex)) {\r\n            log(LogLevel.Warning, `hexadecimal RGBA color string must conform to either \\\r\n'0x0000', '#0000', '0000', '0x00000000', '#00000000', or '00000000', given '${hex}'`);\r\n            return rgba;\r\n        }\r\n\r\n        const offset = hex.startsWith('0x') ? 2 : hex.startsWith('#') ? 1 : 0;\r\n        const length = Math.floor((hex.length - offset) / 3);\r\n        const stride = length - 1;\r\n\r\n        rgba[0] = parseInt(hex[offset + 0 * length] + hex[offset + 0 * length + stride], 16) / 255.0;\r\n        rgba[1] = parseInt(hex[offset + 1 * length] + hex[offset + 1 * length + stride], 16) / 255.0;\r\n        rgba[2] = parseInt(hex[offset + 2 * length] + hex[offset + 2 * length + stride], 16) / 255.0;\r\n        if ((hex.length - offset) === 4 || (hex.length - offset) === 8) {\r\n            rgba[3] = parseInt(hex[offset + 3 * length] + hex[offset + 3 * length + stride], 16) / 255.0;\r\n        }\r\n\r\n        assert(!isNaN(rgba[0]) && !isNaN(rgba[1]) && !isNaN(rgba[2]) && !isNaN(rgba[3]),\r\n            `expected well formated hexadecimal RGBA string, given '${hex}'`);\r\n        return rgba;\r\n    }\r\n\r\n    /**\r\n     * Converts a color from RGB space to HEX string.\r\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\r\n     * @returns - Hexadecimal color string: red, green, and blue, each in ['00', 'ff'], with '#' prefix\r\n     */\r\n    static rgb2hex(rgb: GLclampf3): string {\r\n        const rgbF = clampf3(rgb, 'RGB input');\r\n\r\n        const r = Color.to2CharHexCode(rgbF[0]);\r\n        const g = Color.to2CharHexCode(rgbF[1]);\r\n        const b = Color.to2CharHexCode(rgbF[2]);\r\n        return '#' + r + g + b;\r\n    }\r\n\r\n    /**\r\n     * Converts a color from RGBA space to HEX string.\r\n     * @param rgba - RGBA color tuple: red, green, blue, and alpha, each in [0.0, 1.0]\r\n     * @returns - Hexadecimal color string: red, green, blue, and alpha, each in ['00', 'ff'], with '#' prefix\r\n     */\r\n    static rgba2hex(rgba: GLclampf4): string {\r\n        const rgbaF = clampf4(rgba, 'RGBA input');\r\n\r\n        const r = Color.to2CharHexCode(rgbaF[0]);\r\n        const g = Color.to2CharHexCode(rgbaF[1]);\r\n        const b = Color.to2CharHexCode(rgbaF[2]);\r\n        const a = Color.to2CharHexCode(rgbaF[3]);\r\n        return '#' + r + g + b + a;\r\n    }\r\n\r\n    /**\r\n     * Performs a linear interpolation between x and y using a to weight between them within the specified color space.\r\n     * @param x - First color stop for mix/linear interpolation.\r\n     * @param y - Second color stop for mix/linear interpolation.\r\n     * @param a - Specify the value to use to interpolate between x and y.\r\n     * @param space - The color space that is to be used for linear interpolation of two colors.\r\n     */\r\n    static mix(x: Color, y: Color, a: number, space: Color.Space = Color.Space.LAB): Color {\r\n        if (a === 0.0) {\r\n            return new Color(x.rgba);\r\n        } else if (a === 1.0) {\r\n            return new Color(y.rgba);\r\n        }\r\n\r\n        const result = vec4.create();\r\n        /* tslint:disable-next-line:switch-default */\r\n        switch (space) {\r\n            case Color.Space.CMYK:\r\n                vec4.lerp(result, x.cmyk, y.cmyka, a);\r\n                const alpha = mix(x.a, y.a, a);\r\n                return new Color().fromCMYK(result[0], result[1], result[2], result[3], alpha);\r\n\r\n            case Color.Space.LAB:\r\n                vec4.lerp(result, x.laba, y.laba, a);\r\n                return new Color().fromLAB(result[0], result[1], result[2], result[3]);\r\n\r\n            case Color.Space.HSL:\r\n                vec4.lerp(result, x.hsla, y.hsla, a);\r\n                return new Color().fromHSL(result[0], result[1], result[2], result[3]);\r\n\r\n            case Color.Space.RGB:\r\n                vec4.lerp(result, x.rgba, y.rgba, a);\r\n                return new Color().fromRGB(result[0], result[1], result[2], result[3]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of color (a 4-tuple in RGBA space).\r\n     * @param rgba - Either RGB tuple or RGBA tuple. If none is provided, default will be kept.\r\n     * @param alpha - If RGB tuple is provided an additional alpha value can be specified.\r\n     */\r\n    constructor(rgba?: GLclampf3 | GLclampf4, alpha?: GLclampf) {\r\n        if (rgba === undefined) {\r\n            return;\r\n        }\r\n        if (rgba.length === 3 && alpha !== undefined) {\r\n            this.fromF32(rgba[0], rgba[1], rgba[2], alpha);\r\n        } else if (rgba.length === 4) {\r\n            this.fromF32(rgba[0], rgba[1], rgba[2], rgba[3]);\r\n            assert(alpha === undefined, `expected alpha to be undefined when given an 4-tuple in RGBA`);\r\n        } else {\r\n            this.fromF32(rgba[0], rgba[1], rgba[2]);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks whether or not this color matches a second color (based on internal rgba floating representation).\r\n     * @param other - Color to compare color values to.\r\n     * @returns - True iff both colors have the exact same rgba floating point values.\r\n     */\r\n    equals(other: Color): boolean {\r\n        return equals4<GLclampf>(this._rgba, other._rgba);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in float (32bit) RGBA colors.\r\n     * @param red - Red color component in [0.0, 1.0]\r\n     * @param green - Green color component in [0.0, 1.0]\r\n     * @param blue - Blue color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromF32(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        this._rgba[0] = clampf(red, `red value`);\r\n        this._rgba[1] = clampf(green, `green value`);\r\n        this._rgba[2] = clampf(blue, `blue value`);\r\n        this._rgba[3] = clampf(alpha, `alpha value`);\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in unsigned int (8bit) RGBA colors.\r\n     * @param red - Red color component in [0, 255]\r\n     * @param green - Green color component in [0, 255]\r\n     * @param blue - Blue color component in [0, 255]\r\n     * @param alpha - Alpha color component in [0, 255]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromUI8(red: GLubyte, green: GLubyte, blue: GLubyte,\r\n        alpha: GLubyte = Math.floor(Color.DEFAULT_ALPHA * 255)): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        this._rgba[0] = clamp(red, 0, 255) / 255.0;\r\n        this._rgba[1] = clamp(green, 0, 255) / 255.0;\r\n        this._rgba[2] = clamp(blue, 0, 255) / 255.0;\r\n        this._rgba[3] = clamp(alpha, 0, 255) / 255.0;\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in RGB color space.\r\n     * @param red - Red color component in [0.0, 1.0]\r\n     * @param green - Green color component in [0.0, 1.0]\r\n     * @param blue - Blue color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromRGB(red: GLclampf, green: GLclampf, blue: GLclampf,\r\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        this._rgba = clampf4([red, green, blue, alpha], 'RGBA input');\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in HSL color space.\r\n     * @param hue - Hue color component in [0.0, 1.0]\r\n     * @param saturation - Saturation color component in [0.0, 1.0]\r\n     * @param lightness - Lightness color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromHSL(hue: GLclampf, saturation: GLclampf, lightness: GLclampf,\r\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        const rgb = Color.hsl2rgb([hue, saturation, lightness]);\r\n        const alphaf = clampf(alpha, 'ALPHA input');\r\n\r\n        this._rgba = [rgb[0], rgb[1], rgb[2], alphaf];\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in CIE-Lab color space.\r\n     * @param lightness - Lightness color component in [0.0, 1.0]\r\n     * @param greenRed - Green-Red/a color component in [0.0, 1.0]\r\n     * @param blueYellow - Blue-Yellow/b color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromLAB(lightness: GLclampf, greenRed: GLclampf, blueYellow: GLclampf,\r\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        const rgb = Color.lab2rgb([lightness, greenRed, blueYellow]);\r\n        const alphaf = clampf(alpha, 'ALPHA input');\r\n\r\n        this._rgba = [rgb[0], rgb[1], rgb[2], alphaf];\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a color in CMYK color space.\r\n     * @param cyan - Cyan color component in [0.0, 1.0]\r\n     * @param magenta - Magenta color component in [0.0, 1.0]\r\n     * @param yellow - Yellow color component in [0.0, 1.0]\r\n     * @param key - Key/Black color component in [0.0, 1.0]\r\n     * @param alpha - Alpha color component in [0.0, 1.0]\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromCMYK(cyan: GLclampf, magenta: GLclampf, yellow: GLclampf, key: GLclampf,\r\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        const rgb = Color.cmyk2rgb([cyan, magenta, yellow, key]);\r\n        const alphaf = clampf(alpha, 'ALPHA input');\r\n\r\n        this._rgba = [rgb[0], rgb[1], rgb[2], alphaf];\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Specifies the internal rgba store using a hexadecimal color string.\r\n     * @param hex - Hexadecimal color string: red, green, blue, and alpha (optional) each in ['00', 'ff'].\r\n     * @returns - The color instance (this).\r\n     */\r\n    fromHex(hex: string): Color {\r\n        const previous = duplicate4<GLclampf>(this._rgba);\r\n\r\n        this._rgba = Color.hex2rgba(hex);\r\n\r\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Converts the color to a gray value using the specified algorithm.\r\n     * @param algorithm - The algorithm used for color to gray conversion.\r\n     */\r\n    gray(algorithm: Color.GrayscaleAlgorithm = Color.GrayscaleAlgorithm.LinearLuminance): GLclampf {\r\n\r\n        /* tslint:disable-next-line:switch-default */\r\n        switch (algorithm) {\r\n\r\n            /* Does not represent shades of grayscale w.r.t. human perception of luminosity. */\r\n            case Color.GrayscaleAlgorithm.Average:\r\n                return (this._rgba[0] + this._rgba[1] + this._rgba[2]) / 3.0;\r\n\r\n            /* flat (reduced contrast) and dark grayscale */\r\n            case Color.GrayscaleAlgorithm.LeastSaturatedVariant:\r\n                return (Math.max(this._rgba[0], this._rgba[1], this._rgba[2])\r\n                    - Math.min(this._rgba[0], this._rgba[1], this._rgba[2])) * 0.5;\r\n\r\n            /* provides a darker grayscale */\r\n            case Color.GrayscaleAlgorithm.MinimumDecomposition:\r\n                return Math.min(this._rgba[0], this._rgba[1], this._rgba[2]);\r\n\r\n            /* provides a brighter grayscale */\r\n            case Color.GrayscaleAlgorithm.MaximumDecomposition:\r\n                return Math.max(this._rgba[0], this._rgba[1], this._rgba[2]);\r\n\r\n            case Color.GrayscaleAlgorithm.LinearLuminance:\r\n                return this._rgba[0] * 0.2126 + this._rgba[1] * 0.7152 + this._rgba[2] * 0.0722;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enables generic color access within a specified color space.\r\n     * @param space - Expected color space of the requested color values.\r\n     * @param alpha - Whether or not alpha channel should be provided as well.\r\n     */\r\n    tuple(space: Color.Space, alpha: boolean = true): GLclampf3 | GLclampf4 | GLclampf5 {\r\n        /* tslint:disable-next-line:switch-default */\r\n        switch (space) {\r\n            case Color.Space.RGB:\r\n                return alpha ? this.rgba : this.rgb;\r\n            case Color.Space.LAB:\r\n                return alpha ? this.laba : this.lab;\r\n            case Color.Space.CMYK:\r\n                return alpha ? this.cmyka : this.cmyk;\r\n            case Color.Space.HSL:\r\n                return alpha ? this.hsla : this.hsl;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGB components as floating point 3-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get rgb(): GLclampf3 {\r\n        return [this._rgba[0], this._rgba[1], this._rgba[2]];\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGB components as array of three bytes (8bit unsigned int), each in range [0, 255].\r\n     */\r\n    get rgbUI8(): Uint8Array {\r\n        const ui8Array = new Uint8Array(3);\r\n        ui8Array[0] = Math.round(this._rgba[0] * 255.0);\r\n        ui8Array[1] = Math.round(this._rgba[1] * 255.0);\r\n        ui8Array[2] = Math.round(this._rgba[2] * 255.0);\r\n        return ui8Array;\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGB components as array of three 32bit floats, each in range [0.0, 1.0].\r\n     */\r\n    get rgbF32(): Float32Array {\r\n        const f32Array = new Float32Array(3);\r\n        f32Array[0] = this._rgba[0];\r\n        f32Array[1] = this._rgba[1];\r\n        f32Array[2] = this._rgba[2];\r\n        return f32Array;\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGBA components as floating point 4-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get rgba(): GLclampf4 {\r\n        return this._rgba;\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGBA components as array of four bytes (8bit unsigned int), each in range [0, 255].\r\n     */\r\n    get rgbaUI8(): Uint8Array {\r\n        const ui8Array = new Uint8Array(4);\r\n        ui8Array[0] = Math.round(this._rgba[0] * 255.0);\r\n        ui8Array[1] = Math.round(this._rgba[1] * 255.0);\r\n        ui8Array[2] = Math.round(this._rgba[2] * 255.0);\r\n        ui8Array[3] = Math.round(this._rgba[3] * 255.0);\r\n        return ui8Array;\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGBA components as array of four 32bit floats, each in range [0.0, 1.0].\r\n     */\r\n    get rgbaF32(): Float32Array {\r\n        return new Float32Array(this._rgba);\r\n    }\r\n\r\n    /**\r\n     * Read access to the Red component as float value in range [0.0, 1.0].\r\n     */\r\n    get r(): GLclampf {\r\n        return this._rgba[0];\r\n    }\r\n\r\n    /**\r\n     * Read access to the Green component as float value in range [0.0, 1.0].\r\n     */\r\n    get g(): GLclampf {\r\n        return this._rgba[1];\r\n    }\r\n\r\n    /**\r\n     * Read access to the Blue component as float value in range [0.0, 1.0].\r\n     */\r\n    get b(): GLclampf {\r\n        return this._rgba[2];\r\n    }\r\n\r\n    /**\r\n     * Read access to the Alpha component as float value in range [0.0, 1.0].\r\n     */\r\n    get a(): GLclampf {\r\n        return this._rgba[3];\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGB components as hexadecimal string.\r\n     */\r\n    get hexRGB(): string {\r\n        return Color.rgb2hex(this.rgb);\r\n    }\r\n\r\n    /**\r\n     * Read access to the RGBA components as hexadecimal string.\r\n     */\r\n    get hexRGBA(): string {\r\n        return Color.rgba2hex(this._rgba);\r\n    }\r\n\r\n    /**\r\n     * Read access to the HSL components as floating point 3-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get hsl(): GLclampf3 {\r\n        return Color.rgb2hsl(this.rgb);\r\n    }\r\n\r\n    /**\r\n     * Read access to the HSLA components as floating point 4-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get hsla(): GLclampf4 {\r\n        const hsl = Color.rgb2hsl(this.rgb);\r\n        return [hsl[0], hsl[1], hsl[2], this._rgba[3]];\r\n    }\r\n\r\n    /**\r\n     * Read access to the LAB components as floating point 3-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get lab(): GLclampf3 {\r\n        return Color.rgb2lab(this.rgb);\r\n    }\r\n\r\n    /**\r\n     * Read access to the LABA components as floating point 4-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get laba(): GLclampf4 {\r\n        const lab = Color.rgb2lab(this.rgb);\r\n        return [lab[0], lab[1], lab[2], this._rgba[3]];\r\n    }\r\n\r\n    /**\r\n     * Read access to the CMYK components as floating point 4-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get cmyk(): GLclampf4 {\r\n        return Color.rgb2cmyk(this.rgb);\r\n    }\r\n\r\n    /**\r\n     * Read access to the CMYKA components as floating point 5-tuple, each value in range [0.0, 1.0].\r\n     */\r\n    get cmyka(): GLclampf5 {\r\n        const cmyk = Color.rgb2cmyk(this.rgb);\r\n        return [cmyk[0], cmyk[1], cmyk[2], cmyk[3], this._rgba[3]];\r\n    }\r\n\r\n    /**\r\n     * Whether or not color value has changed.\r\n     */\r\n    get altered(): boolean {\r\n        return this._altered;\r\n    }\r\n\r\n    /**\r\n     * Intended for resetting alteration status.\r\n     */\r\n    set altered(status: boolean) {\r\n        this._altered = status;\r\n    }\r\n\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport namespace Color {\r\n\r\n    export enum GrayscaleAlgorithm {\r\n        Average = 'average',\r\n        LinearLuminance = 'linear-luminance', /* CIE1931 */\r\n        LeastSaturatedVariant = 'least-saturated-variant',\r\n        MinimumDecomposition = 'minimum-decomposition',\r\n        MaximumDecomposition = 'maximum-decomposition',\r\n    }\r\n\r\n    /**\r\n     * Color spaces covered by this class.\r\n     */\r\n    export enum Space {\r\n        RGB = 'rgb',\r\n        HSL = 'hsl',\r\n        LAB = 'lab',\r\n        CMYK = 'cmyk',\r\n    }\r\n\r\n}\r\n","\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { assert, bitInBitfield } from './auxiliaries';\r\n\r\nimport { PointerLock } from './pointerlock';\r\n\r\n\r\nexport class MouseEventProvider {\r\n\r\n    /**\r\n     * HTML canvas element within the HTML5 document to register event listeners to.\r\n     */\r\n    protected _element: HTMLCanvasElement;\r\n\r\n    /**\r\n     * Time frame for events to be buffered (windowTime in rxjs per ReplaySubject).\r\n     */\r\n    protected _timeframe: number | undefined;\r\n\r\n    protected _clickListener: { (event: MouseEvent): void };\r\n    protected _clickSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _enterListener: { (event: MouseEvent): void };\r\n    protected _enterSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _leaveListener: { (event: MouseEvent): void };\r\n    protected _leaveSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _downListener: { (event: MouseEvent): void };\r\n    protected _downSubject: ReplaySubject<MouseEvent>;\r\n    protected _upListener: { (event: MouseEvent): void };\r\n    protected _upSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _moveListener: { (event: MouseEvent): void };\r\n    protected _moveSubject: ReplaySubject<MouseEvent>;\r\n\r\n    protected _wheelListener: { (event: WheelEvent): void };\r\n    protected _wheelSubject: ReplaySubject<WheelEvent>;\r\n\r\n    /** @see {@link pointerLock} */\r\n    protected _pointerLockRequestPending = false;\r\n\r\n    /**\r\n     * This mask saves for which types of events, event.preventDefault should be called. This is useful to disallow\r\n     * some kinds of standard events like scrolling or clicking on links.\r\n     */\r\n    protected _preventDefaultMask: MouseEventProvider.Type;\r\n\r\n    constructor(element: HTMLCanvasElement, timeframe?: number) {\r\n        assert(element !== undefined, `expected valid canvas element on initialization, given ${element}`);\r\n        this._element = element;\r\n        this._timeframe = timeframe;\r\n\r\n        this._element.addEventListener('click', () => this.processPointerLockRequests());\r\n    }\r\n\r\n    /**\r\n     * The pointer lock API requires a little workaround in order to avoid something like '... not called from inside a\r\n     * short running user-generated event handler'. A click event listener is registered and whenever a pointer lock is\r\n     * requested, e.g., from an event handler (which in turn exposes this interface to, e.g., a navigation), the next\r\n     * click will result in a probably more successful pointer lock.\r\n     */\r\n    protected processPointerLockRequests(): void {\r\n        if (!this._pointerLockRequestPending) {\r\n            return;\r\n        }\r\n        PointerLock.request(this._element);\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not to prevent the default handling of the given event. This depends on the internal\r\n     * `preventDefaultMask` which can be modified using `preventDefault` function @see{@link prevenDefault}.\r\n     * @param type - Internal event type of the incoming event.\r\n     * @param event - Actual event to prevent default handling on (if masked).\r\n     */\r\n    protected preventDefaultOnEvent(type: MouseEventProvider.Type, event: MouseEvent): void {\r\n        if (bitInBitfield(this._preventDefaultMask, type)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevent default event handling on specific event types (using prevenDefault on the event).\r\n     * @param types - Event types to prevent default handling on.\r\n     */\r\n    preventDefault(...types: MouseEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (!bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask |= type;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allow default event handling on specific event types (not calling preventDefault on the event).\r\n     * @param types - Event types to allow default handling on.\r\n     */\r\n    allowDefault(...types: MouseEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask &= ~type;\r\n            }\r\n        }\r\n    }\r\n\r\n    observable(type: MouseEventProvider.Type): Observable<MouseEvent> | Observable<WheelEvent> | undefined {\r\n        switch (type) {\r\n            case MouseEventProvider.Type.Click:\r\n                return this.click$;\r\n            case MouseEventProvider.Type.Enter:\r\n                return this.enter$;\r\n            case MouseEventProvider.Type.Leave:\r\n                return this.leave$;\r\n            case MouseEventProvider.Type.Down:\r\n                return this.down$;\r\n            case MouseEventProvider.Type.Up:\r\n                return this.up$;\r\n            case MouseEventProvider.Type.Move:\r\n                return this.move$;\r\n            case MouseEventProvider.Type.Wheel:\r\n                return this.wheel$;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable/disable pointer lock on click. If true, the next click on this event provider's canvas will invoke a\r\n     * pointer lock request on the canvas element.\r\n     */\r\n    set pointerLock(lock: boolean) {\r\n        this._pointerLockRequestPending = lock;\r\n        if (lock === false) {\r\n            this._pointerLockRequestPending = false;\r\n            PointerLock.exit();\r\n        }\r\n    }\r\n    get pointerLock(): boolean {\r\n        return PointerLock.active(this._element);\r\n    }\r\n\r\n    get click$(): Observable<MouseEvent> {\r\n        if (this._clickSubject === undefined) {\r\n            this._clickSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._clickListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Click, event);\r\n                this._clickSubject.next(event);\r\n            };\r\n            this._element.addEventListener('click', this._clickListener);\r\n        }\r\n        return this._clickSubject.asObservable();\r\n    }\r\n\r\n    get enter$(): Observable<MouseEvent> {\r\n        if (this._enterSubject === undefined) {\r\n            this._enterSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._enterListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Enter, event);\r\n                this._enterSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mouseenter', this._enterListener);\r\n        }\r\n        return this._enterSubject.asObservable();\r\n    }\r\n\r\n    get leave$(): Observable<MouseEvent> {\r\n        if (this._leaveSubject === undefined) {\r\n            this._leaveSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._leaveListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Leave, event);\r\n                this._leaveSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mouseleave', this._leaveListener);\r\n        }\r\n        return this._leaveSubject.asObservable();\r\n    }\r\n\r\n    get down$(): Observable<MouseEvent> {\r\n        if (this._downSubject === undefined) {\r\n            this._downSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._downListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Down, event);\r\n                this._downSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mousedown', this._downListener);\r\n        }\r\n        return this._downSubject.asObservable();\r\n    }\r\n\r\n    get up$(): Observable<MouseEvent> {\r\n        if (this._upSubject === undefined) {\r\n            this._upSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._upListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Up, event);\r\n                this._upSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mouseup', this._upListener);\r\n        }\r\n        return this._upSubject.asObservable();\r\n    }\r\n\r\n    get move$(): Observable<MouseEvent> {\r\n        if (this._moveSubject === undefined) {\r\n            this._moveSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\r\n            this._moveListener = (event: MouseEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Move, event);\r\n                this._moveSubject.next(event);\r\n            };\r\n            this._element.addEventListener('mousemove', this._moveListener);\r\n        }\r\n        return this._moveSubject.asObservable();\r\n    }\r\n\r\n    get wheel$(): Observable<WheelEvent> {\r\n        if (this._wheelSubject === undefined) {\r\n            this._wheelSubject = new ReplaySubject<WheelEvent>(undefined, this._timeframe);\r\n            this._wheelListener = (event: WheelEvent) => {\r\n                this.preventDefaultOnEvent(MouseEventProvider.Type.Wheel, event);\r\n                this._wheelSubject.next(event);\r\n            };\r\n            this._element.addEventListener('wheel', this._wheelListener);\r\n        }\r\n        return this._wheelSubject.asObservable();\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace MouseEventProvider {\r\n\r\n    export enum Type {\r\n        Click = 1 << 0,\r\n        Wheel = 1 << 1,\r\n        Enter = 1 << 2,\r\n        Leave = 1 << 3,\r\n        Move = 1 << 4,\r\n        Down = 1 << 5,\r\n        Up = 1 << 6,\r\n    }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\n\r\n\r\n/**\r\n * Utility class providing simplified access to the clients pointer lock API.\r\n */\r\nexport class PointerLock {\r\n\r\n    /**\r\n     * Cached exit call of the clients specific pointer lock API.\r\n     */\r\n    protected static _exit: () => void;\r\n\r\n    /**\r\n     * Cached request call of the clients specific pointer API.\r\n     */\r\n    protected static _request: (element: HTMLElement) => void;\r\n\r\n    /**\r\n     * Cached element call returning the fullscreen element specific to the clients fullscreen API.\r\n     */\r\n    protected static _element: () => HTMLElement;\r\n\r\n\r\n    /**\r\n     * Query and cache the client specific pointer lock API.\r\n     */\r\n    protected static queryAndCacheAPI(): void {\r\n        if (PointerLock._exit !== undefined) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Shadow global document declaration with an untyped one. This is done in order to use vendor specific\r\n         * properties without a compile error.\r\n         */\r\n        const document = window.document as any;\r\n\r\n        // Query the API to use.\r\n        const exits = [\r\n            document.exitPointerLock,\r\n            document.mozExitPointerLock,\r\n            document.webkitExitPointerLock,\r\n            undefined];\r\n\r\n        let api = 0;\r\n        for (; api < exits.length; ++api) {\r\n            if (exits[api] === undefined) {\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n\r\n        switch (api) {\r\n            case 0: // native\r\n                PointerLock._exit = () => document.exitPointerLock();\r\n                PointerLock._request = (element: HTMLElement) => element.requestPointerLock();\r\n                PointerLock._element = () => document.pointerLockElement;\r\n                break;\r\n\r\n            case 1: // mozilla\r\n                PointerLock._exit = () => document.mozCancelPointerLock();\r\n                PointerLock._request = (element: HTMLElement) => (element as any).mozRequestPointerLock();\r\n                PointerLock._element = () => document.mozPointerLockElement;\r\n                break;\r\n\r\n            case 2: // webkit\r\n                PointerLock._exit = () => document.webkitExitPointerLock();\r\n                PointerLock._request = (element: HTMLElement) => (element as any).webkitRequestPointerLock();\r\n                PointerLock._element = () => document.webkitPointerLockElement;\r\n                break;\r\n\r\n            default:\r\n                assert(false, `none of the following pointer lock apis was found: native, moz, or webkit`);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns whether or not a pointer lock element exists, indicating if pointer lock is active or not.\r\n     */\r\n    static active(element?: HTMLElement): boolean {\r\n        if (this._element === undefined) {\r\n            return false;\r\n        }\r\n        return (element !== undefined && PointerLock._element() === element) || (element === undefined &&\r\n            /* tslint:disable-next-line:no-null-keyword */\r\n            PointerLock._element() !== undefined && PointerLock._element() !== null);\r\n    }\r\n\r\n    /**\r\n     * Requests pointer lock for a given element. If another element is already in pointer lock, it is unlocked\r\n     * first. The function considers various platform specific pointer lock interfaces, i.e., native, moz, and webkit.\r\n     * @param element - Element to toggle pointer lock state of.\r\n     */\r\n    static request(element: HTMLElement, callback?: () => void): void {\r\n        if (element === undefined) {\r\n            return;\r\n        }\r\n        PointerLock.queryAndCacheAPI();\r\n\r\n        if (PointerLock.active() && PointerLock._element() !== element) {\r\n            PointerLock._exit();\r\n        }\r\n\r\n        if (!PointerLock.active()) {\r\n            PointerLock._request(element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Exit pointer lock. The function considers various platform specific pointer lock interfaces, i.e., native, moz,\r\n     * and webkit.\r\n     */\r\n    static exit(): void {\r\n        if (PointerLock._exit) {\r\n            PointerLock._exit();\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { assert, bitInBitfield } from './auxiliaries';\r\n\r\n\r\nexport class TouchEventProvider {\r\n\r\n    /**\r\n     * HTML canvas element within the HTML5 document to register event listeners to.\r\n     */\r\n    protected _element: HTMLCanvasElement;\r\n\r\n    /**\r\n     * Time frame for events to be buffered (windowTime in rxjs per ReplaySubject).\r\n     */\r\n    protected _timeframe: number | undefined;\r\n\r\n    protected _startListener: { (event: TouchEvent): void };\r\n    protected _startSubject: ReplaySubject<TouchEvent>;\r\n\r\n    protected _endListener: { (event: TouchEvent): void };\r\n    protected _endSubject: ReplaySubject<TouchEvent>;\r\n\r\n    protected _moveListener: { (event: TouchEvent): void };\r\n    protected _moveSubject: ReplaySubject<TouchEvent>;\r\n\r\n    protected _cancelListener: { (event: TouchEvent): void };\r\n    protected _cancelSubject: ReplaySubject<TouchEvent>;\r\n\r\n    /**\r\n     * This mask saves for which types of events, event.preventDefault should be called.\r\n     * This is useful to disallow some kinds of standard events like scrolling or clicking on links.\r\n     */\r\n    protected _preventDefaultMask: TouchEventProvider.Type;\r\n\r\n\r\n    constructor(element: HTMLCanvasElement, timeframe?: number) {\r\n        assert(element !== undefined, `expected valid canvas element on initialization, given ${element}`);\r\n        this._element = element;\r\n        this._timeframe = timeframe;\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not to prevent the default handling of the given event. This depends on the internal\r\n     * `preventDefaultMask` which can be modified using `preventDefault` function @see{@link prevenDefault}.\r\n     * @param type - Internal event type of the incoming event.\r\n     * @param event - Actual event to prevent default handling on (if masked).\r\n     */\r\n    protected preventDefaultOnEvent(type: TouchEventProvider.Type, event: TouchEvent): void {\r\n        if (bitInBitfield(this._preventDefaultMask, type)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevent default event handling on specific event type (using prevenDefault on the event).\r\n     * @param types - Event types to prevent default handling on.\r\n     */\r\n    preventDefault(...types: TouchEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (!bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask |= type;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allow default event handling on specific event type (not calling preventDefault on the event).\r\n     * @param types - Event types to allow default handling on.\r\n     */\r\n    allowDefault(...types: TouchEventProvider.Type[]): void {\r\n        for (const type of types) {\r\n            if (bitInBitfield(this._preventDefaultMask, type)) {\r\n                this._preventDefaultMask &= ~type;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    observable(type: TouchEventProvider.Type): Observable<TouchEvent> {\r\n        /* tslint:disable-next-line:switch-default */\r\n        switch (type) {\r\n            case TouchEventProvider.Type.Start:\r\n                return this.start$;\r\n            case TouchEventProvider.Type.End:\r\n                return this.end$;\r\n            case TouchEventProvider.Type.Move:\r\n                return this.move$;\r\n            case TouchEventProvider.Type.Cancel:\r\n                return this.cancel$;\r\n        }\r\n\r\n        assert(false, 'Encountered unknown touch event.');\r\n        return new Observable<TouchEvent>();\r\n    }\r\n\r\n    get start$(): Observable<TouchEvent> {\r\n        if (this._startSubject === undefined) {\r\n            this._startSubject = new ReplaySubject<TouchEvent>(undefined, this._timeframe);\r\n            this._startListener = (event: TouchEvent) => {\r\n                this.preventDefaultOnEvent(TouchEventProvider.Type.Start, event);\r\n                this._startSubject.next(event);\r\n            };\r\n            this._element.addEventListener('touchstart', this._startListener);\r\n        }\r\n        return this._startSubject.asObservable();\r\n    }\r\n\r\n    get end$(): Observable<TouchEvent> {\r\n        if (this._endSubject === undefined) {\r\n            this._endSubject = new ReplaySubject<TouchEvent>(undefined, this._timeframe);\r\n            this._endListener = (event: TouchEvent) => {\r\n                this.preventDefaultOnEvent(TouchEventProvider.Type.End, event);\r\n                this._endSubject.next(event);\r\n            };\r\n            this._element.addEventListener('touchend', this._endListener);\r\n        }\r\n        return this._endSubject.asObservable();\r\n    }\r\n\r\n    get move$(): Observable<TouchEvent> {\r\n        if (this._moveSubject === undefined) {\r\n            this._moveSubject = new ReplaySubject<TouchEvent>(undefined, this._timeframe);\r\n            this._moveListener = (event: TouchEvent) => {\r\n                this.preventDefaultOnEvent(TouchEventProvider.Type.Move, event);\r\n                this._moveSubject.next(event);\r\n            };\r\n            this._element.addEventListener('touchmove', this._moveListener);\r\n        }\r\n        return this._moveSubject.asObservable();\r\n    }\r\n\r\n    get cancel$(): Observable<TouchEvent> {\r\n        if (this._cancelSubject === undefined) {\r\n            this._cancelSubject = new ReplaySubject<TouchEvent>(undefined, this._timeframe);\r\n            this._cancelListener = (event: TouchEvent) => {\r\n                this.preventDefaultOnEvent(TouchEventProvider.Type.Cancel, event);\r\n                this._cancelSubject.next(event);\r\n            };\r\n            this._element.addEventListener('touchcancel', this._cancelListener);\r\n        }\r\n        return this._cancelSubject.asObservable();\r\n    }\r\n}\r\n\r\n\r\nexport namespace TouchEventProvider {\r\n\r\n    export enum Type {\r\n        Start = 1 << 0,\r\n        End = 1 << 1,\r\n        Move = 1 << 2,\r\n        Cancel = 1 << 3,\r\n    }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\n\r\n\r\n/**\r\n * Utility class to replicate the structure of all alterable properties of a class to. This was initially designed\r\n * to be used in combination with an `alterable` decorator (but instance-based property decoration does not work\r\n * yet). For now though, this is used for explicit alterable structure replication and management.\r\n * ```\r\n * const alterable = {\r\n *     any: false,\r\n *     data: { any: false, alpha: false, beta: false },\r\n *     modifier: false };\r\n *\r\n * const altered = Object.assign(new ChangeLookup(), alterable);\r\n * altered.alter('data.beta');\r\n * if(altered.data.any) { ... }\r\n * ```\r\n */\r\nexport class ChangeLookup {\r\n\r\n    /**\r\n     * Also allow for string-based index access in TypeScript.\r\n     */\r\n    [index: string]: boolean | any;\r\n\r\n\r\n    /**\r\n     * One step of the recursive traversal of a given properties path in order to invalidate the alteration states.\r\n     * Please note, that this is design is not intended for very large structures since no caching is applied.\r\n     * @param path - Relative path w.r.t. to the given property.\r\n     * @param property - Property to continue traversal of the given relative path on.\r\n     */\r\n    protected static alter(path: string, property: any): void {\r\n\r\n        assert(property.hasOwnProperty('any'), `expected alterable object to provide 'any' key`);\r\n        property.any = true;\r\n\r\n        const names = path.split('.');\r\n        const name = names.shift()!;\r\n\r\n        assert(name === '' || property.hasOwnProperty(name),\r\n            `expected object to have key '${name}' in order to capture alterations`);\r\n\r\n        if (name !== '' && typeof property[name] !== 'object') {\r\n            property[name] = true;\r\n            return;\r\n        }\r\n\r\n        if (name !== '' && names.length > 0) {\r\n            ChangeLookup.alter(names.join('.'), property[name]);\r\n            return;\r\n        }\r\n\r\n        const parent = name !== '' ? property[name] : property;\r\n        for (const child of Object.getOwnPropertyNames(parent)) {\r\n            if (child === 'any') {\r\n                continue;\r\n            }\r\n            ChangeLookup.alter(child, parent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resets all nested alteration states of a given parent property recursively. Children of object type are\r\n     * recursively reset. Every other child is directly set to false (including any).\r\n     * @param property - Property to reset alteration states of.\r\n     */\r\n    protected static reset(property: any): void {\r\n        for (const name of Object.getOwnPropertyNames(property)) {\r\n            if (typeof property[name] === 'object') {\r\n                ChangeLookup.reset(property[name]);\r\n                continue;\r\n            }\r\n            property[name] = false;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Alters the given key as well as the `any` element of all parent objects. For example, the key 'foo.bar' would\r\n     * cause `altered.foo.bar` and `altered.foo.any` as well as `altered.any` to be true. Note that the `altered`\r\n     * object should only be modified using this method to avoid erroneous states.\r\n     * @param path - Full object path to the altered key (keys joined using '.', e.g., 'foo.bar'). If the path is\r\n     * referring to an object, the alteration is propagated top-down to all children.\r\n     */\r\n    alter(path: string): void {\r\n        return ChangeLookup.alter(path, this);\r\n    }\r\n\r\n    /**\r\n     * Reset all alteration states to false.\r\n     */\r\n    reset(): void {\r\n        return ChangeLookup.reset(this);\r\n    }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n\r\n/**\r\n * Wrapper around an OpenGL array or element array buffer. This buffer may be used to be attached to multiple VAOs.\r\n */\r\nexport class Buffer extends AbstractObject<WebGLBuffer> implements Bindable {\r\n\r\n    /**\r\n     * Default buffer, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_BUFFER = undefined;\r\n\r\n\r\n    /** @see {@link target} */\r\n    protected _target: GLenum | undefined = Buffer.DEFAULT_BUFFER;\r\n\r\n    /**\r\n     * Create a buffer object on the GPU.\r\n     */\r\n    protected create(target: GLenum): WebGLBuffer | undefined {\r\n        const gl = this._context.gl;\r\n\r\n        this._object = gl.createBuffer();\r\n        /* note that gl.isBuffer requires the buffer to be bound */\r\n        this._valid = this._object instanceof WebGLBuffer;\r\n\r\n        if (this._valid) {\r\n            assert(target === gl.ARRAY_BUFFER || target === gl.ELEMENT_ARRAY_BUFFER,\r\n                `either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER expected as buffer target`);\r\n            this._target = target;\r\n        }\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the buffer object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLBuffer, `expected WebGLBuffer object`);\r\n        this._context.gl.deleteBuffer(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._target = Buffer.DEFAULT_BUFFER;\r\n    }\r\n\r\n    /**\r\n     * Binds the buffer object as buffer to predefined target.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        assert(this._target === this._context.gl.ARRAY_BUFFER || this._target === this._context.gl.ELEMENT_ARRAY_BUFFER,\r\n            `expected either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER as buffer target`);\r\n        this._context.gl.bindBuffer(this._target, this._object);\r\n    }\r\n\r\n    /**\r\n     * Binds null as current buffer to predefined target;\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this.context.gl.bindBuffer(this._target, Buffer.DEFAULT_BUFFER);\r\n    }\r\n\r\n    /**\r\n     * Creates the buffer object's data store and updates the objects status.\r\n     * @param data - Data that will be copied into the objects data store.\r\n     * @param usage - Usage pattern of the data store.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    data(data: ArrayBufferView | ArrayBuffer, usage: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.bufferData(this._target, data, usage);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n\r\n        this._valid = gl.isBuffer(this._object) && gl.getError() === gl.NO_ERROR;\r\n        const bytes: GLsizei = this._valid ? data.byteLength : 0;\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n    }\r\n\r\n    /**\r\n     * Specifies the memory layout of the buffer for a binding point.\r\n     * @param index - Index of the vertex attribute that is to be setup and enabled.\r\n     * @param size - Number of components per vertex attribute.\r\n     * @param type - Data type of each component in the array.\r\n     * @param normalized - Whether integer data values should be normalized when being casted to a float.\r\n     * @param stride - Offset in bytes between the beginning of consecutive vertex attributes.\r\n     * @param offset - Offset in bytes of the first component in the vertex attribute array.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    attribEnable(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean = false,\r\n        stride: GLsizei = 0, offset: GLintptr = 0, bind: boolean = true, unbind: boolean = true): void {\r\n\r\n        const gl = this.context.gl;\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\r\n        gl.enableVertexAttribArray(index);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disables a buffer binding point.\r\n     * @param index - Index of the vertex attribute that is to be disabled.\r\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    attribDisable(index: GLuint, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.disableVertexAttribArray(index);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU.\r\n     */\r\n    get bytes(): number {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Target to which the buffer object is bound (either GL_ARRAY_BUFFER or GL_ELEMENT_ARRAY_BUFFER).\r\n     * Readonly access to the target (as specified on initialization) the buffer will be bound to.\r\n     */\r\n    get target(): GLenum | undefined {\r\n        this.assertInitialized();\r\n        return this._target;\r\n    }\r\n\r\n}\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var ourBase = schema.id ? urilib.resolve(baseuri, schema.id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+schema+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', ((schema.items instanceof Array)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', ((schema.extends instanceof Array)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!(schemas instanceof Array)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  var schemaUri = base;\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n}\n","\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\n\r\n\r\n/**\r\n * Provides the size in bytes of certain WebGL format enumerator. Please note that some byte sizes might vary based on\r\n * context attributes or the bound render, thus, DEPTH_COMPONENT and DEPTH_STENCIL are not covered by this function.\r\n * This function does NOT cover data types that are usually on CPU side, not GPU, e.g., UNSIGNED_BYTE,\r\n * UNSIGNED_SHORT_5_6_5, HALF_FLOAT, UNSIGNED_SHORT, FLOAT, etc. and will assert when provided with types.\r\n * @param context - The OpenGL context.\r\n * @param format - Format identifier of the target internal OpenGL data type.\r\n * @return - The size in bytes of one type instance on the GPU.\r\n */\r\nexport function byteSizeOfFormat(context: Context, format: GLenum): number {\r\n    const gl = context.gl;\r\n    const gl2facade = context.gl2facade;\r\n\r\n\r\n    const UNSIGNED_INT_24_8_WEBGL = context.supportsDepthTexture ?\r\n        context.depthTexture.UNSIGNED_INT_24_8_WEBGL : undefined;\r\n\r\n    switch (format) {\r\n        case undefined: // must be first, in case any other format is not defined\r\n            break;\r\n        default:\r\n            break;\r\n\r\n        case gl.UNSIGNED_BYTE:\r\n        case gl.UNSIGNED_SHORT_5_6_5:\r\n        case gl.UNSIGNED_SHORT_4_4_4_4:\r\n        case gl.UNSIGNED_SHORT_5_5_5_1:\r\n        case gl.UNSIGNED_SHORT:\r\n        case gl.UNSIGNED_INT:\r\n        case UNSIGNED_INT_24_8_WEBGL:\r\n        case gl.FLOAT:\r\n        case gl2facade.HALF_FLOAT:\r\n        case gl.BYTE:\r\n        case gl.UNSIGNED_SHORT:\r\n        case gl.SHORT:\r\n        case gl.UNSIGNED_INT:\r\n        case gl.INT:\r\n        case gl.HALF_FLOAT:\r\n        case gl.FLOAT:\r\n        case gl.UNSIGNED_INT_2_10_10_10_REV:\r\n        case gl.UNSIGNED_INT_10F_11F_11F_REV:\r\n        case gl.UNSIGNED_INT_5_9_9_9_REV:\r\n        case gl.UNSIGNED_INT_24_8:\r\n        case gl.FLOAT_32_UNSIGNED_INT_24_8_REV:\r\n            assert(false, `expected format instead of type ${format}`);\r\n            return 0;\r\n    }\r\n\r\n\r\n    const SRGB8_ALPHA8_EXT = context.supportsSRGB ? context.sRGB.SRGB8_ALPHA8_EXT : undefined;\r\n    const SRGB_EXT = context.supportsSRGB ? context.sRGB.SRGB_EXT : undefined;\r\n    const SRGB_ALPHA_EXT = context.supportsSRGB ? context.sRGB.SRGB_ALPHA_EXT : undefined;\r\n\r\n    const RGB32F_EXT = context.supportsColorBufferFloat ? context.colorBufferFloat.RGB32F_EXT : undefined;\r\n    const RGBA32F_EXT = context.supportsColorBufferFloat ? context.colorBufferFloat.RGBA32F_EXT : undefined;\r\n\r\n    switch (format) {\r\n        case undefined: // must be first, in case any other format is not defined\r\n        /* falls through */\r\n        default:\r\n            assert(false, `size of format ${format} is unknown`);\r\n            return 0;\r\n\r\n        case gl.ALPHA:\r\n        case gl.LUMINANCE:\r\n        case gl.R8:\r\n        case gl.R8I:\r\n        case gl.R8UI:\r\n        case gl.STENCIL_INDEX8:\r\n            return 1;\r\n\r\n        case gl.DEPTH_COMPONENT16:\r\n        case gl.LUMINANCE_ALPHA:\r\n        case gl.R16F:\r\n        case gl.R16I:\r\n        case gl.R16UI:\r\n        case gl.RG8:\r\n        case gl.RG8I:\r\n        case gl.RG8UI:\r\n        case gl.RGB565:\r\n        case gl.RGB5_A1:\r\n        case gl.RGBA4:\r\n            return 2;\r\n\r\n        case gl.DEPTH_COMPONENT24:\r\n        case gl.RGB:\r\n        case gl.RGB8:\r\n        case gl.RGB8UI:\r\n        case gl.SRGB:\r\n        case SRGB_EXT:\r\n        case gl.SRGB8:\r\n            return 3;\r\n\r\n        case gl.DEPTH_STENCIL:\r\n        case gl.DEPTH24_STENCIL8:\r\n        case gl.DEPTH_COMPONENT32F:\r\n        case gl.R11F_G11F_B10F:\r\n        case gl.R32F:\r\n        case gl.R32I:\r\n        case gl.R32UI:\r\n        case gl.RG16F:\r\n        case gl.RG16I:\r\n        case gl.RG16UI:\r\n        case gl.RGB10_A2:\r\n        case gl.RGB10_A2UI:\r\n        case gl.RGB9_E5:\r\n        case gl.RGBA:\r\n        case gl.RGBA8:\r\n        case gl.RGBA8I:\r\n        case gl.RGBA8UI:\r\n        case gl.SRGB8_ALPHA8:\r\n        case SRGB8_ALPHA8_EXT:\r\n        case gl.SRGB_ALPHA:\r\n        case SRGB_ALPHA_EXT:\r\n        case gl.SRGB_ALPHA8:\r\n        case gl.SRGB_APLHA8: // https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/texStorage2D\r\n            return 4;\r\n\r\n        case gl.DEPTH32F_STENCIL8:\r\n            return 5;\r\n\r\n        case gl.RGB16F:\r\n            return 6;\r\n\r\n        case gl.RG32F:\r\n        case gl.RG32I:\r\n        case gl.RG32UI:\r\n        case gl.RGBA16F:\r\n        case gl.RGBA16I:\r\n        case gl.RGBA16UI:\r\n            return 8;\r\n\r\n        case gl.RGB32F:\r\n        case gl.RGB32F:\r\n        case RGB32F_EXT:\r\n            return 12;\r\n\r\n        case gl.RGBA32F:\r\n        case RGBA32F_EXT:\r\n        case gl.RGBA32I:\r\n        case gl.RGBA32UI:\r\n            return 16;\r\n\r\n        case gl.DEPTH_COMPONENT:\r\n        case gl.DEPTH_STENCIL:\r\n            assert(false, `byte size of DEPTH_COMPONENT or DEPTH_STENCIL formats depends on active render buffer`);\r\n            return 0;\r\n    }\r\n}\r\n","\r\nimport { Bindable } from './bindable';\r\nimport { Buffer } from './buffer';\r\nimport { Initializable } from './initializable';\r\n\r\nimport { Context } from './context';\r\nimport { VertexArray } from './vertexarray';\r\n\r\n\r\n/**\r\n * Geometry that extends Initializable and Bindable by a draw method, a getter for buffers, as well as a getter for the\r\n * vertex array object. This is used as generic interface for one or more buffer objects associated to a single vertex\r\n * array object intended for drawing (often also referred to as 'drawable').\r\n */\r\nexport abstract class Geometry extends Initializable implements Bindable {\r\n\r\n    /**\r\n     * Vertex array used for binding the rectangle's buffer(s).\r\n     */\r\n    protected _vertexArray: VertexArray;\r\n\r\n    /**\r\n     * Various buffers required for this geometry (e.g., vertex buffer).\r\n     */\r\n    protected _buffers = new Array<Buffer>();\r\n\r\n\r\n    /**\r\n     * Creates the geometry and a vertex array instance. Please note that inheritors are expected to create the buffer.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instances VAO and VBOs.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super();\r\n\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n        this._vertexArray = new VertexArray(context, identifier + 'VAO');\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds all buffer object(s) to their associated attribute binding points (pre-defined index/indices). This\r\n     * function is passed to the initialization of this geometries vertex array object.\r\n     * @param indices - Indices passed on geometry initialization by inheritor (sequence as in buffers).\r\n     */\r\n    protected abstract bindBuffers(indices: Array<GLuint>): void;\r\n\r\n    /**\r\n     * Unbinds all buffer objects and disables their binding points. This function is passed to the uninitialization\r\n     * of this geometries vertex array object.\r\n     * @param indices - Indices passed on geometry initialization by inheritor (sequence as in buffers).\r\n     */\r\n    protected abstract unbindBuffers(indices: Array<GLuint>): void;\r\n\r\n\r\n    /**\r\n     * Initializes all buffer objects and the vertex array. Please note that implicit arguments are used in order to\r\n     * enable custom initialization signatures for inheritors.\r\n     * @param targets - Targets to initialize the buffers for.\r\n     * @param indices - Binding points that are passed to the inheritors (un)bind buffer methods.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(...args: any[]): boolean {\r\n        const targets = args[0] as Array<GLenum>;\r\n        const indices = args[1] as Array<GLuint>;\r\n\r\n        let valid = true;\r\n        for (let i = 0; i < this._buffers.length; ++i) {\r\n            valid = this._buffers[i].initialize(targets[i]) && valid;\r\n        }\r\n\r\n        this._vertexArray.initialize(() => this.bindBuffers(indices), () => this.unbindBuffers(indices));\r\n        return this._vertexArray.valid && valid;\r\n    }\r\n\r\n    /**\r\n     * Uninitialize the vertex array object and the rectangle.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this._vertexArray.uninitialize();\r\n        this._buffers.forEach((buffer) => buffer.uninitialize());\r\n        for (const buffer of this._buffers) {\r\n            buffer.uninitialize();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the vertex array object.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        this._vertexArray.bind();\r\n    }\r\n\r\n    /**\r\n     * Unbinds the vertex array object.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this._vertexArray.unbind();\r\n    }\r\n\r\n\r\n    abstract draw(): void;\r\n\r\n\r\n    /**\r\n     * Read-only access to the buffer(s) associated to this instances vertex array object.\r\n     */\r\n    get buffers(): Array<Buffer> {\r\n        return this._buffers;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the buffers' and vertex array's context.\r\n     */\r\n    get context(): Context {\r\n        return this._vertexArray.context;\r\n    }\r\n\r\n    /**\r\n     * Read-only access to the vertex array.\r\n     */\r\n    get vertexArray(): VertexArray {\r\n        return this._vertexArray;\r\n    }\r\n\r\n}\r\n\r\n","\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { GLsizei3 } from './tuples';\r\n\r\n\r\n/* tslint:disable:max-classes-per-file */\r\n\r\nexport interface KernelJSON {\r\n    kernel: any;\r\n    size: {\r\n        width: number,\r\n        height: number,\r\n        depth: number,\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * Kernel class is based on the idea of glkernel {@link https://github.com/cginternals/glkernel} and is the basis for\r\n * various auxiliary kernels that are mainly intended for but not limited to GPU use. A kernel stores samples in a\r\n * three-dimensional structure. Each sample can have up to four components (vec4) and is strongly typed, e.g.,\r\n * {@link KernelF32}. The samples can be accessed and modified in various ways and easily passed to the GPU.\r\n */\r\nexport abstract class AbstractKernel<T extends Float32Array | Uint32Array | Int32Array | Uint8Array | Int8Array> {\r\n\r\n    protected _samples: T;\r\n\r\n    /** @see {@link width} */\r\n    protected _width: GLsizei;\r\n\r\n    /** @see {@link height} */\r\n    protected _height: GLsizei;\r\n\r\n    /** @see {@link depth} */\r\n    protected _depth: GLsizei;\r\n\r\n    /** @see {@link components} */\r\n    protected _components: 1 | 2 | 3 | 4;\r\n\r\n\r\n    constructor(components: 1 | 2 | 3 | 4, width: GLsizei, height: GLsizei = 1, depth: GLsizei = 1) {\r\n        this._components = components;\r\n        this._width = isNaN(width) ? 1 : Math.max(1, width);\r\n        this._height = Math.max(1, height);\r\n        this._depth = Math.max(1, depth);\r\n\r\n        this.resize();\r\n    }\r\n\r\n    /**\r\n     * Should resize the samples array w.r.t. to the typed array buffer.\r\n     * The resulting array buffer may be empty.\r\n     */\r\n    protected abstract resize(): void;\r\n\r\n\r\n    /**\r\n     * Returns the n-tuple/n-component element at index within the cached kernel.\r\n     * @param xPosOrIndex - If x is greater than width, this is interpreted as overall kernel index (requires y and z\r\n     * positions to be undefined). Position is clamped to the range [0, width - 1].\r\n     * @param yPos - Position along the y-axis to access the kernel element at (clamped to range [0, height - 1]).\r\n     * @param zPos - Position along the z-axis to access the kernel element at (clamped to range [0, depth  - 1]).\r\n     * @returns - Tuple of all components of the element at the requested index/position.\r\n     */\r\n    get(xPosOrIndex: GLsizei, yPos?: GLsizei, zPos?: GLsizei): number[] {\r\n\r\n        let i: number;\r\n        if (yPos === undefined && zPos === undefined) {\r\n            i = this._components * xPosOrIndex;\r\n        } else {\r\n            i = this.index(xPosOrIndex, yPos, zPos ? zPos : 0);\r\n        }\r\n        assert(i < this.length, `index expected to be in range [0, ${this.length - 1}], given ${i}`);\r\n\r\n        /* tslint:disable-next-line:switch-default */\r\n        switch (this._components) {\r\n            case 1:\r\n                return [this._samples[i]];\r\n            case 2:\r\n                return [this._samples[i], this._samples[i + 1]];\r\n            case 3:\r\n                return [this._samples[i], this._samples[i + 1], this._samples[i + 2]];\r\n            case 4:\r\n                return [this._samples[i], this._samples[i + 1], this._samples[i + 2], this._samples[i + 3]];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the n-tuple/n-component sample at index within the cached kernel.\r\n     * @param sample - Values to be set at specified index or position.\r\n     * @param xPosOrIndex - If x is greater than width, this is interpreted as overall kernel index (requires y and z\r\n     * positions to be undefined). Position is clamped to the range [0, width - 1].\r\n     * @param yPos - Position along the y-axis to access the kernel element at (clamped to range [0, height - 1]).\r\n     * @param zPos - Position along the z-axis to access the kernel element at (clamped to range [0, depth  - 1]).\r\n     */\r\n    set(sample: number[], xPosOrIndex: GLsizei, yPos?: GLsizei, zPos?: GLsizei): void {\r\n        assert(sample.length === this._components,\r\n            `number of components expected to be ${this._components}, given ${sample.length}`);\r\n\r\n        let i: number;\r\n        if (yPos === undefined && zPos === undefined) {\r\n            i = this._components * Math.min(this.elements, Math.max(0, xPosOrIndex));\r\n        } else {\r\n            i = this._components * this.index(xPosOrIndex, yPos, zPos ? zPos : 0);\r\n        }\r\n        assert(i < this.length, `index expected to be in range [0, ${this.length - 1}], given ${i}`);\r\n\r\n        /* tslint:disable-next-line:switch-default */\r\n        switch (this._components) {\r\n            /* falls through */\r\n            case 4:\r\n                this._samples[i + 3] = sample[3];\r\n            /* falls through */\r\n            case 3:\r\n                this._samples[i + 2] = sample[2];\r\n            /* falls through */\r\n            case 2:\r\n                this._samples[i + 1] = sample[1];\r\n            /* falls through */\r\n            case 1:\r\n                this._samples[i + 0] = sample[0];\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inheritor is expected to implement this in order to copy and type-convert a flat array.\r\n     * @param samples - Array of all sample components in a flat sequence.\r\n     */\r\n    abstract fromArray(samples: Array<number>): void;\r\n\r\n    /**\r\n     * Fully reconfigures, i.e., resizes and copies samples, the kernel.\r\n     * @param json - JSON object either from file, or set manually. These kernels can be generated using, e.g.,\r\n     * glkernel {@link https://github.com/cginternals/glkernel}.\r\n     */\r\n    fromJSON(json: KernelJSON): void {\r\n\r\n        assert(json.size && json.size.width !== undefined && json.size.height !== undefined &&\r\n            json.size.depth !== undefined, `expected kernel width, height, and depth to be set, given '${json.size}'`);\r\n\r\n        const flatten = (array: Array<number>): Array<number> => array.reduce(\r\n            (a: any, b: any) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\r\n\r\n        this._width = Math.max(1, json.size.width);\r\n        this._height = Math.max(1, json.size.height);\r\n        this._depth = Math.max(1, json.size.depth);\r\n\r\n        const array = flatten(json.kernel);\r\n        this._components = Math.floor(array.length / this.elements) as 1 | 2 | 3 | 4;\r\n\r\n        this.resize();\r\n        this.fromArray(array);\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the index of an element at a specific position.\r\n     * @param xPos - Position along the x-axis (clamped to range [0, width  - 1]).\r\n     * @param yPos - Position along the y-axis (clamped to range [0, height - 1]).\r\n     * @param zPos - Position along the z-axis (clamped to range [0, depth  - 1]).\r\n     * @returns - The index of the element at the requested position.\r\n     */\r\n    index(xPos: GLsizei, yPos: GLsizei = 0, zPos: GLsizei = 0): GLsizei {\r\n        return this._width * (this._height * Math.min(this._depth, Math.max(0, zPos))\r\n            + Math.min(this._height, Math.max(0, yPos))) + Math.min(this._width, Math.max(0, xPos));\r\n    }\r\n\r\n    /**\r\n     * Returns the position of an element at a specific index.\r\n     * @param index - Index of the requested position (clamped to range [0, size]).\r\n     * @returns - The position of the element at the requested index as 3-tuple [x, y, z].\r\n     */\r\n    position(index: GLsizei): GLsizei3 {\r\n        let clamped = Math.min(this.elements, Math.max(0, index));\r\n        const zPos: GLsizei = Math.floor(clamped / (this._width * this._height));\r\n        clamped -= zPos * this._width * this._height;\r\n        const yPos: GLsizei = Math.floor(clamped / this._width);\r\n        clamped -= yPos * this._width;\r\n        const xPos: GLsizei = clamped;\r\n        return [xPos, yPos, zPos];\r\n    }\r\n\r\n\r\n    /**\r\n     * Sorts all samples based on the given sorting approach, e.g., by length of a sample. In order to sort an array\r\n     * of samples comprising a number of components an sort-auxiliary array is created, sorted, and, finally, mapped to\r\n     * the sample array.\r\n     * @param approach - Sorting approach that is to be used.\r\n     */\r\n    sort(approach: AbstractKernel.SortApproach): void {\r\n        if (this.elements < 2) {\r\n            return;\r\n        }\r\n\r\n        /* Create index structure for sorting (handling the stride). */\r\n        const tuples = Array<[GLsizei, number]>(this.elements);\r\n        for (let i = 0; i < this.elements; ++i) {\r\n            let value = 0.0;\r\n            switch (approach) {\r\n                default:\r\n                case AbstractKernel.SortApproach.BySquaredLength:\r\n                    for (let c = 0; c < this._components; ++c) {\r\n                        const v = this._samples[i * this._components + c];\r\n                        value += v * v;\r\n                    }\r\n                    break;\r\n            }\r\n            tuples[i] = [i, value];\r\n        }\r\n\r\n        /* Invoke the actual sorting approaches. Since the samples are always dense, the index structure can later be\r\n        used directly for restructuring/applying the new order to the samples. */\r\n        switch (approach) {\r\n            default:\r\n            case AbstractKernel.SortApproach.BySquaredLength:\r\n                tuples.sort((a: [number, number], b: [number, number]) => a[1] - b[1]);\r\n                break;\r\n        }\r\n\r\n        /* Apply the new, sorted order/sequences to the samples array. */\r\n        const source = this._samples.slice();\r\n        for (let i = 0; i < tuples.length; ++i) {\r\n            for (let c = 0; c < this._components; ++c) {\r\n                const iSource = tuples[i][0] * this._components + c;\r\n                const iTarget = i * this._components + c;\r\n                this._samples[iTarget] = source[iSource];\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * All elements/samples of the kernel as array buffer.\r\n     */\r\n    get samples(): T {\r\n        return this._samples;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of samples, i.e., the number of elements times the number of components per element.\r\n     */\r\n    get length(): GLsizei {\r\n        return this._width * this._height * this._depth * this._components;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of samples.\r\n     */\r\n    get elements(): GLsizei {\r\n        const elementCount = this._width * this._height * this._depth;\r\n        return isNaN(elementCount) ? 0 : elementCount;\r\n    }\r\n\r\n    /**\r\n     * Number of components per sample, e.g., 2 for 2-tuple samples, 3 for 3-tuple samples, etc.\r\n     */\r\n    get components(): GLsizei {\r\n        return this._components;\r\n    }\r\n\r\n    /**\r\n     * The width of the kernel (x-axis)\r\n     */\r\n    get width(): GLsizei {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * The height of the kernel (y-axis)\r\n     */\r\n    get height(): GLsizei {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * The depth of the kernel (z-axis)\r\n     */\r\n    get depth(): GLsizei {\r\n        return this._depth;\r\n    }\r\n\r\n    /**\r\n     * Distance between the indices of two adjacent elements along the x-axis in bytes.\r\n     */\r\n    get xStride(): GLsizei {\r\n        return this.bytesPerComponent * this._components;\r\n    }\r\n\r\n    /**\r\n     * Distance between the indices of two adjacent elements along the y-axis in bytes.\r\n     */\r\n    get yStride(): GLsizei {\r\n        return this.bytesPerComponent * this._components * this._width;\r\n    }\r\n\r\n    /**\r\n     * Distance between the indices of two adjacent elements along the z-axis in bytes.\r\n     */\r\n    get zStride(): GLsizei {\r\n        return this.bytesPerComponent * this._components * this._width * this._depth;\r\n    }\r\n\r\n    /**\r\n     * Length of all samples in bytes.\r\n     */\r\n    get bytesLength(): GLsizei {\r\n        return this.bytesPerComponent * this._components * this._width * this._height * this._depth;\r\n    }\r\n\r\n    /**\r\n     * Size of a sample's component in bytes.\r\n     */\r\n    abstract get bytesPerComponent(): GLsizei;\r\n\r\n}\r\n\r\nexport namespace AbstractKernel {\r\n\r\n    export enum SortApproach {\r\n        BySquaredLength,\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class KernelF32 extends AbstractKernel<Float32Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Float32Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Float32Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n\r\n\r\nexport class KernelUI32 extends AbstractKernel<Uint32Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Uint32Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Uint32Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n\r\nexport class KernelI32 extends AbstractKernel<Int32Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Int32Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Int32Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n\r\n\r\nexport class KernelUI8 extends AbstractKernel<Uint8Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Uint8Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Uint8Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n\r\nexport class KernelI8 extends AbstractKernel<Int8Array> {\r\n\r\n    protected resize(): void {\r\n        this._samples = new Int8Array(this.length);\r\n    }\r\n\r\n    /**\r\n     * Copies and converts samples to this kernels typed samples.\r\n     * @param samples - Flat array of all sample values.\r\n     */\r\n    fromArray(samples: Array<number>): void {\r\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\r\n        this._samples.set(new Int8Array(samples));\r\n    }\r\n\r\n    get bytesPerComponent(): GLsizei {\r\n        return 4;\r\n    }\r\n}\r\n","module.exports = \"\\r\\nprecision lowp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n#else \\r\\n    #define varying out\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    attribute vec2 a_vertex;\\r\\n#else \\r\\n    in vec2 a_vertex;\\r\\n#endif\\r\\n\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    v_uv = a_vertex * 0.5 + 0.5;\\r\\n    gl_Position = vec4(a_vertex, 0.0, 1.0);\\r\\n}\\r\\n\"","\r\nimport { vec2 } from 'gl-matrix';\r\n\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { MouseEventProvider } from './mouseeventprovider';\r\nimport { Invalidate } from './renderer';\r\nimport { TouchEventProvider } from './toucheventprovider';\r\n\r\n\r\n/**\r\n * Callback for handling mouse events, given the latest mouse events (since last update) as well as the previous.\r\n */\r\nexport interface MouseEventHandler { (latests: Array<MouseEvent>, previous: Array<MouseEvent>): void; }\r\n\r\n/**\r\n * Callback for handling touch events, given the latest touch events (since last update) as well as the previous.\r\n */\r\nexport interface TouchEventHandler { (latests: Array<TouchEvent>, previous: Array<TouchEvent>): void; }\r\n\r\n\r\n/**\r\n * ... Provider and event handler are explicitly separated in order to reduce the number of observables (reuse of event\r\n * provider for multiple handler).\r\n */\r\nexport class EventHandler {\r\n\r\n    /**\r\n     * The event handler's invalidation callback. This should usually be setup by the owning renderer and invoke the\r\n     * same callback the renderer has been given by the canvas. This invalidation is required, when continuous\r\n     * rendering is not present, events might cause need for new rendering requests.\r\n     */\r\n    protected _invalidate: Invalidate | undefined;\r\n\r\n    protected _subscriptions = new Array<Subscription>();\r\n\r\n\r\n    /**\r\n     * Assigned key event provider. This is usually created and owned by the canvas.\r\n     */\r\n    // protected _keyEventProvider: KeyEventProvider | undefined;\r\n\r\n    /**\r\n     * Assigned mouse event provider. This is usually created and owned by the canvas.\r\n     */\r\n    protected _mouseEventProvider: MouseEventProvider | undefined;\r\n\r\n    /**\r\n     * Assigned touch event provider. This is usually created and owned by the canvas.\r\n     */\r\n    protected _touchEventProvider: TouchEventProvider | undefined;\r\n\r\n    protected _latestMouseEventsByType =\r\n        new Map<MouseEventProvider.Type, Array<MouseEvent>>();\r\n    protected _previousMouseEventsByType =\r\n        new Map<MouseEventProvider.Type, Array<MouseEvent>>();\r\n    protected _mouseEventHandlerByType =\r\n        new Map<MouseEventProvider.Type, Array<MouseEventHandler>>();\r\n\r\n    protected _latestTouchEventsByType =\r\n        new Map<TouchEventProvider.Type, Array<TouchEvent>>();\r\n    protected _previousTouchEventsByType =\r\n        new Map<TouchEventProvider.Type, Array<TouchEvent>>();\r\n    protected _touchEventHandlerByType =\r\n        new Map<TouchEventProvider.Type, Array<TouchEventHandler>>();\r\n\r\n\r\n    constructor(invalidate: Invalidate | undefined, mouseEventProvider: MouseEventProvider | undefined,\r\n        /* keyEventProvider: KeyEventProvider | undefined,*/ touchEventProvider: TouchEventProvider | undefined) {\r\n        this._invalidate = invalidate;\r\n        this._mouseEventProvider = mouseEventProvider;\r\n        this._touchEventProvider = touchEventProvider;\r\n    }\r\n\r\n\r\n    /** @callback Invalidate\r\n     * A callback intended to be invoked whenever the specialized event handler itself is invalid. By default only\r\n     * optional updates (renderer decides whether or not to continue redraw) are triggered.\r\n     */\r\n    protected invalidate(force: boolean = false): void {\r\n        if (this._invalidate) {\r\n            this._invalidate(force);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Utility for registering an additional mouse event handler for updates on mouse events of the given type. The\r\n     * handler is to be called on update iff at least a single mouse event of the given type has occurred since last\r\n     * update.\r\n     * @param type - Mouse event type the handler is to be associated with.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    protected pushMouseEventHandler(type: MouseEventProvider.Type, handler: MouseEventHandler): void {\r\n        if (this._mouseEventHandlerByType.has(type)) {\r\n            (this._mouseEventHandlerByType.get(type) as Array<MouseEventHandler>).push(handler);\r\n            return;\r\n        }\r\n\r\n        this._mouseEventHandlerByType.set(type, new Array<MouseEventHandler>());\r\n\r\n        this._previousMouseEventsByType.set(type, new Array<MouseEvent>());\r\n        const latest = new Array<MouseEvent>();\r\n        this._latestMouseEventsByType.set(type, latest);\r\n\r\n        assert(this._mouseEventProvider !== undefined, `expected valid mouse event provider`);\r\n        const observable = (this._mouseEventProvider as MouseEventProvider).observable(type);\r\n\r\n        switch (type) {\r\n            case MouseEventProvider.Type.Wheel:\r\n                this._subscriptions.push((observable as Observable<WheelEvent>).subscribe(\r\n                    (event) => { latest.push(event); this.invalidate(); }));\r\n                break;\r\n            default:\r\n                this._subscriptions.push((observable as Observable<MouseEvent>).subscribe(\r\n                    (event) => { latest.push(event); this.invalidate(); }));\r\n                break;\r\n        }\r\n        (this._mouseEventHandlerByType.get(type) as Array<MouseEventHandler>).push(handler);\r\n    }\r\n\r\n    protected invokeMouseEventHandler(type: MouseEventProvider.Type): void {\r\n        const handlers = this._mouseEventHandlerByType.get(type);\r\n        if (handlers === undefined || handlers.length === 0) {\r\n            return;\r\n        }\r\n        const latest = this._latestMouseEventsByType.get(type) as Array<MouseEvent>;\r\n        if (latest.length === 0) {\r\n            return;\r\n        }\r\n        const previous = this._previousMouseEventsByType.get(type) as Array<MouseEvent>;\r\n        handlers.forEach((handler) => handler(latest, previous));\r\n\r\n        Object.assign(previous, latest);\r\n        latest.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Utility for registering an additional touch event handler for updates on touch events of the given type. The\r\n     * handler is to be called on update iff at least a single touch event of the given type has occurred since last\r\n     * update.\r\n     * @param type - Touch event type the handler is to be associated with.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    protected pushTouchEventHandler(type: TouchEventProvider.Type, handler: TouchEventHandler): void {\r\n        if (this._touchEventHandlerByType.has(type)) {\r\n            (this._touchEventHandlerByType.get(type) as Array<TouchEventHandler>).push(handler);\r\n            return;\r\n        }\r\n\r\n        this._touchEventHandlerByType.set(type, new Array<TouchEventHandler>());\r\n\r\n        this._previousTouchEventsByType.set(type, new Array<TouchEvent>());\r\n        const latest = new Array<TouchEvent>();\r\n        this._latestTouchEventsByType.set(type, latest);\r\n\r\n        assert(this._touchEventProvider !== undefined, `expected valid touch event provider`);\r\n        const observable = (this._touchEventProvider as TouchEventProvider).observable(type);\r\n\r\n        this._subscriptions.push((observable as Observable<TouchEvent>).subscribe(\r\n            (event) => { latest.push(event); this.invalidate(); }));\r\n\r\n        (this._touchEventHandlerByType.get(type) as Array<TouchEventHandler>).push(handler);\r\n    }\r\n\r\n    protected invokeTouchEventHandler(type: TouchEventProvider.Type): void {\r\n        const handlers = this._touchEventHandlerByType.get(type);\r\n        if (handlers === undefined || handlers.length === 0) {\r\n            return;\r\n        }\r\n        const latest = this._latestTouchEventsByType.get(type) as Array<TouchEvent>;\r\n        if (latest.length === 0) {\r\n            return;\r\n        }\r\n        const previous = this._previousTouchEventsByType.get(type) as Array<TouchEvent>;\r\n        handlers.forEach((handler) => handler(latest, previous));\r\n\r\n        Object.assign(previous, latest);\r\n        latest.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Disposes all registered handlers of all event types.\r\n     */\r\n    dispose(): void {\r\n        this._latestMouseEventsByType.forEach((value) => value.length = 0);\r\n        this._previousMouseEventsByType.forEach((value) => value.length = 0);\r\n        this._latestTouchEventsByType.forEach((value) => value.length = 0);\r\n        this._previousTouchEventsByType.forEach((value) => value.length = 0);\r\n\r\n        for (const subscription of this._subscriptions) {\r\n            subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Triggers (by means of a helper function) invocation of all registered handler of all event types.\r\n     */\r\n    update(): void {\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Click);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Enter);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Leave);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Down);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Up);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Move);\r\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Wheel);\r\n\r\n        this.invokeTouchEventHandler(TouchEventProvider.Type.Start);\r\n        this.invokeTouchEventHandler(TouchEventProvider.Type.End);\r\n        this.invokeTouchEventHandler(TouchEventProvider.Type.Move);\r\n        this.invokeTouchEventHandler(TouchEventProvider.Type.Cancel);\r\n    }\r\n\r\n\r\n    /**\r\n     * Normalize mouse and touch event coordinates for various browsers.\r\n     * @param event - Mouse, wheel, or touch event.\r\n     * @param normalize - Whether or not to compute normalized coordinates (offsets).\r\n     * @returns - Array of normalized x and y offsets (in case of multiple touches).\r\n     */\r\n    offsets(event: MouseEvent | WheelEvent | TouchEvent, normalize: boolean = true): Array<vec2> {\r\n        const offsets = new Array<vec2>();\r\n\r\n        /*\r\n         * Workaround for Chrome based on solution of Benjamin Wasty: EventHandler.offsets() uses\r\n         * event.target.getBoundingClientRect() which often triggers a reflow/layout that might take ~20ms and slow\r\n         * down, e.g., navigation a lot. Firefox on the other hand doesn't properly support offsetX/offsetY (set to 0).\r\n         */\r\n        let chromeWorkaround = false;\r\n\r\n        if (event instanceof MouseEvent) {\r\n            const e = event as MouseEvent;\r\n\r\n            chromeWorkaround = (e.offsetX !== 0 && e.offsetY !== 0);\r\n            offsets.push(chromeWorkaround ?\r\n                vec2.fromValues(e.offsetX, e.offsetY) :\r\n                vec2.fromValues(e.clientX, e.clientY));\r\n\r\n        } else if (event instanceof WheelEvent) {\r\n            const e = event as WheelEvent;\r\n\r\n            chromeWorkaround = (e.offsetX !== 0 && e.offsetY !== 0);\r\n            offsets.push(chromeWorkaround ?\r\n                vec2.fromValues(e.offsetX, e.offsetY) :\r\n                vec2.fromValues(e.clientX, e.clientY));\r\n\r\n        } else if (event instanceof TouchEvent) {\r\n            const e = event as TouchEvent;\r\n\r\n            for (let index = 0; index < e.touches.length; ++index) {\r\n                const touch = e.touches.item(index)!;\r\n                offsets.push(vec2.fromValues(touch.clientX, touch.clientY));\r\n            }\r\n        }\r\n\r\n        if (chromeWorkaround) {\r\n            if (normalize) {\r\n                for (const offset of offsets) {\r\n                    vec2.scale(offset, offset, window.devicePixelRatio);\r\n                }\r\n            }\r\n            return offsets;\r\n        }\r\n\r\n        const target = event.target || event.currentTarget || event.srcElement;\r\n        const rect = (target as HTMLElement).getBoundingClientRect();\r\n\r\n        for (const offset of offsets) {\r\n            offset[0] = Math.floor(offset[0] - rect.left);\r\n            offset[1] = Math.floor(offset[1] - rect.top);\r\n            if (normalize) {\r\n                vec2.scale(offset, offset, window.devicePixelRatio);\r\n            }\r\n        }\r\n        return offsets;\r\n    }\r\n\r\n\r\n    /**\r\n     * Register a click event handler that is to be called on update iff at least a single click event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushClickHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Click, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse enter event handler that is to be called on update iff at least a single mouse enter event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseEnterHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Enter, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse leave event handler that is to be called on update iff at least a single mouse leave event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseLeaveHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Leave, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse down event handler that is to be called on update iff at least a single mouse down event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseDownHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Down, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse up event handler that is to be called on update iff at least a single mouse up event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseUpHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Up, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse move event handler that is to be called on update iff at least a single mouse move event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseMoveHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Move, handler);\r\n    }\r\n\r\n    /**\r\n     * Register an mouse wheel event handler that is to be called on update iff at least a single mouse wheel event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushMouseWheelHandler(handler: MouseEventHandler): void {\r\n        this.pushMouseEventHandler(MouseEventProvider.Type.Wheel, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a touch start event handler that is to be called on update iff at least a single touch start event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushTouchStartHandler(handler: TouchEventHandler): void {\r\n        this.pushTouchEventHandler(TouchEventProvider.Type.Start, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a touch end event handler that is to be called on update iff at least a single touch end event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushTouchEndHandler(handler: TouchEventHandler): void {\r\n        this.pushTouchEventHandler(TouchEventProvider.Type.End, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a touch move event handler that is to be called on update iff at least a single touch move event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushTouchMoveHandler(handler: TouchEventHandler): void {\r\n        this.pushTouchEventHandler(TouchEventProvider.Type.Move, handler);\r\n    }\r\n\r\n    /**\r\n     * Register a touch cancel event handler that is to be called on update iff at least a single touch cancel event has\r\n     * occurred since last update.\r\n     * @param handler - Handler to be called on update.\r\n     */\r\n    pushTouchCancelHandler(handler: TouchEventHandler): void {\r\n        this.pushTouchEventHandler(TouchEventProvider.Type.Cancel, handler);\r\n    }\r\n\r\n\r\n    /**\r\n     * Forward pointer lock request to the mouse event provider (if one exists).\r\n     */\r\n    requestPointerLock(): void {\r\n        if (this._mouseEventProvider) {\r\n            this._mouseEventProvider.pointerLock = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Forward pointer lock release request to the mouse event provider (if one exists).\r\n     */\r\n    exitPointerLock(): void {\r\n        if (this._mouseEventProvider) {\r\n            this._mouseEventProvider.pointerLock = false;\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\nimport { byteSizeOfFormat } from './formatbytesizes';\r\nimport { GLsizei2 } from './tuples';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n\r\n/**\r\n * WebGL Renderbuffer implementation providing size accessors and requiring for bind, unbind, resize, validity, and\r\n * initialization implementations.\r\n * ```\r\n * @todo add usage example\r\n * ```\r\n */\r\nexport class Renderbuffer extends AbstractObject<WebGLRenderbuffer> implements Bindable {\r\n\r\n    /**\r\n     * Default renderbuffer, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_RENDER_BUFFER = undefined;\r\n\r\n    /** @see {@link width} */\r\n    protected _width: GLsizei;\r\n\r\n    /** @see {@link height} */\r\n    protected _height: GLsizei;\r\n\r\n    /**\r\n     * Cached internal format of the renderbuffer for efficient resize.\r\n     */\r\n    protected _internalFormat: GLenum | undefined = undefined;\r\n\r\n    /**\r\n     * Create a renderbuffer object on the GPU.\r\n     * @param width - Initial width of the renderbuffer.\r\n     * @param height - Initial height of the renderbuffer.\r\n     * @param internalFormat - Internal format of the renderbuffer data.\r\n     */\r\n    protected create(width: GLsizei, height: GLsizei, internalFormat: GLenum): WebGLRenderbuffer | undefined {\r\n        assert(width > 0 && height > 0, `renderbuffer object requires valid width and height greater than zero`);\r\n        const gl = this.context.gl;\r\n\r\n        this._object = gl.createRenderbuffer();\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._internalFormat = internalFormat;\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this._object);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n        /* note that gl.isRenderbuffer requires the renderbuffer to be bound */\r\n        this._valid = gl.isRenderbuffer(this._object);\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, Renderbuffer.DEFAULT_RENDER_BUFFER);\r\n\r\n        const bytes: GLsizei = width * height * byteSizeOfFormat(this.context, internalFormat!);\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the renderbuffer object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLRenderbuffer, `expected WebGLRenderbuffer object`);\r\n        this.context.gl.deleteRenderbuffer(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._internalFormat = undefined;\r\n\r\n        this._width = 0;\r\n        this._height = 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Bind the renderbuffer object.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        this.context.gl.bindRenderbuffer(this.context.gl.RENDERBUFFER, this._object);\r\n    }\r\n\r\n    /**\r\n     * Unbind the renderbuffer object.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this.context.gl.bindRenderbuffer(this.context.gl.RENDERBUFFER, Renderbuffer.DEFAULT_RENDER_BUFFER);\r\n    }\r\n\r\n    /**\r\n     * This should be used to implement efficient resize for all attachments.\r\n     * @param width - Targeted/new width of the renderbuffer in px.\r\n     * @param height - Targeted/new height of the renderbuffer in px.\r\n     * @param bind - Allows to skip binding the renderbuffer (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the renderbuffer (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(width: GLsizei, height: GLsizei, bind: boolean = false, unbind: boolean = false): void {\r\n        if (width === this._width && height === this._height) {\r\n            return;\r\n        }\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, this._internalFormat, width, height);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n\r\n        // update allocated bytes\r\n        const bytes: GLsizei = width * height * byteSizeOfFormat(this.context, this._internalFormat!);\r\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU.\r\n     */\r\n    get bytes(): GLsizei {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Readonly access to the internal format of the renderbuffer object. This can only be changed by re-initialization.\r\n     */\r\n    get internalFormat(): GLenum {\r\n        this.assertInitialized();\r\n        return this._internalFormat!;\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: returns the width of the texture object.\r\n     */\r\n    get width(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: returns the height of the texture object.\r\n     */\r\n    get height(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * Convenience getter for the 2-tuple containing the render buffer's width and height.\r\n     * @see {@link width}\r\n     * @see {@link heigth}\r\n     */\r\n    get size(): GLsizei2 {\r\n        return [this.width, this.height];\r\n    }\r\n\r\n}\r\n","\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { vec2, vec4 } from 'gl-matrix';\r\n\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\nimport { clamp, v2 } from './gl-matrix-extensions';\r\n\r\nimport { ChangeLookup } from './changelookup';\r\nimport { Context } from './context';\r\nimport { Controllable } from './controller';\r\nimport { Initializable } from './initializable';\r\nimport { MouseEventProvider } from './mouseeventprovider';\r\nimport { TouchEventProvider } from './toucheventprovider';\r\nimport { GLclampf4, GLfloat2, GLsizei2, tuple2 } from './tuples';\r\nimport { Wizard } from './wizard';\r\n\r\n\r\n// export interface IdCallback { (id: number, x?: number, y?: number): void; }\r\n\r\n\r\n/**\r\n * The interface to a callback that is called if the renderer is invalidated.\r\n */\r\nexport interface Invalidate { (force: boolean): void; }\r\n\r\n\r\n/**\r\n * Base class for hardware-accelerated processing and/or image-synthesis. It provides information such as the current\r\n * canvas, the canvas's size (native resolution), and the multi-frame number (for progressive rendering). A renderer's\r\n * properties are expected to be managed by its owning object or the canvas and should not be set directly/manually.\r\n * Alterations to these properties can be tracked with the `_altered` property. This allows an inheritor to implement\r\n * partial asset reallocation and, e.g., speed up dynamic multi-frame reconfiguration. The alterable object can be\r\n * extended using `Object.assign(this._alterable, ... some structure of booleans)`.\r\n *\r\n * This base class further provides the invalidate method that invokes an invalidation callback also provided by the\r\n * owning/controlling canvas.\r\n *\r\n * Since Initializable is extended, the initialization workflow applies to all specialized renderers (requires super\r\n * calls in constructor as well as in initialize and uninitialize).\r\n *\r\n * Note that a renderer is currently intended to always render to the canvas it is bound to. Hence, there is no\r\n * interface for setting a frame target.\r\n */\r\nexport abstract class Renderer extends Initializable implements Controllable {\r\n\r\n    /**\r\n     * The renderer's invalidation callback. This should usually be setup by the canvas and refer to a function in the\r\n     * canvas's controller, e.g., it should trigger an update within the controller.\r\n     */\r\n    protected _invalidate: Invalidate;\r\n\r\n    /** @see {@link context} */\r\n    protected _context: Context;\r\n\r\n\r\n    /**\r\n     * Alterable auxiliary object for tracking changes on renderer input and lazy updates.\r\n     */\r\n    protected readonly _altered = Object.assign(new ChangeLookup(), {\r\n        any: false, multiFrameNumber: false, frameSize: false, canvasSize: false, framePrecision: false,\r\n        clearColor: false, debugTexture: false,\r\n    });\r\n\r\n\r\n    /**\r\n     * This multi-frame number is for lazy reconfiguration and set on update. The inheritor can react to changes using\r\n     * this.altered.multiFrameNumber.\r\n     */\r\n    protected _multiFrameNumber: number;\r\n\r\n    /**\r\n     * Targeted resolution for image synthesis. This might differ from the canvas resolution and should be used in\r\n     * frame calls of inheritors.\r\n     */\r\n    protected _frameSize: GLsizei2 = [0, 0];\r\n\r\n    /**\r\n     * Actual, native resolution for the canvas currently in charge of controlling the renderer. This might differ from\r\n     * the targeted frame resolution but is required, e.g., for specific non-proportional ratios between frame size and\r\n     * canvas size.\r\n     */\r\n    protected _canvasSize: GLsizei2 = [0, 0];\r\n\r\n    /**\r\n     * Targeted frame precision, e.g., used for frame accumulation. Note that any renderer is currently\r\n     * expected to take advantage of progressive rendering (e.g., multi-frame sampling) and accumulation as well as a\r\n     * blit pass (since main intend is multi-frame based rendering).\r\n     */\r\n    protected _framePrecision: Wizard.Precision = Wizard.Precision.half;\r\n\r\n    /**\r\n     * The clear color, provided by the canvas the renderer is bound to. This is used in frame calls of inheritors.\r\n     */\r\n    protected _clearColor: GLclampf4 = [0.0, 0.0, 0.0, 1.0];\r\n\r\n\r\n    /**\r\n     * List of textures for debugging purposes such as normals, ids, depth, masks, etc. that can be populated by the\r\n     * inheritor. The index of a texture identifier can then be for specifying a debug output of a render texture.\r\n     */\r\n    protected _debugTextures = new Array<string>();\r\n\r\n    /**\r\n     * @see {@link debugTexture}\r\n     * This property can be observed, e.g., `aRenderer.debugTextureObservable.subscribe()`.\r\n     */\r\n    protected _debugTexture: GLint;\r\n    protected _debugTextureSubject = new ReplaySubject<GLint>(1);\r\n\r\n\r\n    /** @callback Invalidate\r\n     * A callback intended to be invoked whenever the specialized renderer itself or one of its objects is invalid. This\r\n     * callback should be passed during initialization to all objects that might handle invalidation internally as well.\r\n     * As a result, rendering of a new frame will be triggered and enforced.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    protected invalidate(force: boolean = false): void {\r\n        this._invalidate(force);\r\n    }\r\n\r\n\r\n    /**\r\n     * Utility for communicating this._debugTexture changes to its associated subject.\r\n     */\r\n    protected debugTextureNext(): void {\r\n        this._debugTextureSubject.next(this._debugTexture);\r\n    }\r\n\r\n    /**\r\n     * Context that can be used for processing and rendering as well as passed to rendering stages.\r\n     */\r\n    protected get context(): Context {\r\n        this.assertInitialized();\r\n        return this._context;\r\n    }\r\n\r\n    protected get canvasSize(): GLsizei2 {\r\n        this.assertInitialized();\r\n        return this._canvasSize;\r\n    }\r\n\r\n    /**\r\n     * Whether or not any of the (relevant/monitored) rendering properties has been altered. This concept should be used\r\n     * by other classes (e.g., camera, rendering stages) for detecting modifications relevant for rendering output.\r\n     */\r\n    protected get altered(): boolean {\r\n        return this._altered.any;\r\n    }\r\n\r\n\r\n    /**\r\n     * Actual initialize call specified by inheritor.\r\n     * @returns - whether initialization was successful\r\n     */\r\n    protected abstract onInitialize(context: Context, callback: Invalidate,\r\n        mouseEventProvider: MouseEventProvider | undefined,\r\n        /* keyEventProvider: KeyEventProvider | undefined, */\r\n        touchEventProvider: TouchEventProvider | undefined): boolean;\r\n\r\n    /**\r\n     * Actual uninitialize call specified by inheritor.\r\n     */\r\n    protected abstract onUninitialize(): void;\r\n\r\n\r\n    /**\r\n     * Actual update call specified by inheritor. This is invoked in order to check if rendering of a frame is required\r\n     * by means of implementation specific evaluation (e.g., lazy non continuous rendering). Regardless of the return\r\n     * value a new frame (preparation, frame, swap) might be invoked anyway, e.g., when update is forced or canvas or\r\n     * context properties have changed or the renderer was invalidated @see{@link invalidate}.\r\n     *\r\n     * @returns - Whether to redraw\r\n     */\r\n    protected abstract onUpdate(): boolean;\r\n\r\n    /**\r\n     * Actual prepare call specified by inheritor. This is invoked in order to prepare rendering of one or more frames.\r\n     * This should be used for rendering preparation, e.g., when using multi-frame rendering this might specify uniforms\r\n     * that do not change for every intermediate frame.\r\n     */\r\n    protected abstract onPrepare(): void;\r\n\r\n    /**\r\n     * Actual frame call specified by inheritor. After (1) update and (2) preparation are invoked, a frame is invoked.\r\n     * This should be used for actual rendering implementation.\r\n     */\r\n    protected abstract onFrame(frameNumber: number): void;\r\n\r\n    /**\r\n     * Actual swap call specified by inheritor. After (1) update, (2) preparation, and (3) frame are invoked, a swap\r\n     * might be invoked. In case of experimental batch rendering when using multi-frame a swap might be withheld for\r\n     * multiple frames.\r\n     */\r\n    protected abstract onSwap(): void;\r\n\r\n\r\n    /**\r\n     * When extending (specializing) this class, initialize should initialize all required stages and allocate assets\r\n     * that are shared between multiple stages. Note that `super.initialize()` should always be call first when\r\n     * 'overriding' this function.\r\n     *\r\n     * Note: the context handle is stored in a property, but should be passed to the stages by specializing\r\n     * renderer instead. The renderer itself should not allocate rendering resources directly, thus, it should not\r\n     * require a webgl context.\r\n     *\r\n     * @param context - Wrapped gl context for function resolution (passed to all stages).\r\n     * @param callback - Functions that is invoked when the renderer (or any stage) is invalidated.\r\n     * @param mouseEventProvider - Provider for mouse events referring to the canvas element.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(context: Context, callback: Invalidate,\r\n        mouseEventProvider: MouseEventProvider | undefined,\r\n        /* keyEventProvider: KeyEventProvider | undefined, */\r\n        touchEventProvider: TouchEventProvider | undefined): boolean {\r\n\r\n        assert(context !== undefined, `valid webgl context required`);\r\n        this._context = context;\r\n        assert(callback !== undefined, `valid multi-frame update callback required`);\r\n        this._invalidate = callback;\r\n\r\n        return this.onInitialize(context, callback, mouseEventProvider, touchEventProvider);\r\n    }\r\n\r\n    /**\r\n     * Should release all assets and uninitialize all stages. `super.uninitialize()` should always be call first when\r\n     * overriding this function.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        this.onUninitialize();\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     */\r\n    @Initializable.assert_initialized()\r\n    update(multiFrameNumber: number): boolean {\r\n        if (this._canvasSize[0] !== this._context.gl.canvas.width ||\r\n            this._canvasSize[1] !== this._context.gl.canvas.height) {\r\n            this._canvasSize[0] = this._context.gl.canvas.width;\r\n            this._canvasSize[1] = this._context.gl.canvas.height;\r\n            this._altered.alter('canvasSize');\r\n        }\r\n        if (this._multiFrameNumber !== multiFrameNumber) {\r\n            this._multiFrameNumber = multiFrameNumber;\r\n            this._altered.alter('multiFrameNumber');\r\n        }\r\n        return this.onUpdate() || this._altered.any;\r\n    }\r\n\r\n    /**\r\n     * Prepares the rendering of the next frame (or subsequent frames when multi-frame rendering).\r\n     * This is part of the controllable interface. The renderer should reconfigure as lazy as possible.\r\n     * @param multiFrameNumber - The multi-frame number as requested by controller.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    prepare(): void {\r\n        this.onPrepare();\r\n    }\r\n\r\n    /**\r\n     * Controllable interface intended to trigger rendering of a full pass of the renderer that results in either an\r\n     * intermediate frame for accumulation to a full multi-frame or full frame for itself.  The inheritor should invoke\r\n     * frames of relevant rendering and processing stages.\r\n     * @param frameNumber - The current frame number forwarded to onFrame.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    frame(frameNumber: number): void {\r\n        this.onFrame(frameNumber);\r\n    }\r\n\r\n    /**\r\n     * Interface intended to trigger swap (by controller).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    swap(): void {\r\n        this.onSwap();\r\n    }\r\n\r\n\r\n    /**\r\n     * Transforms local viewport coordinates into local intermediate frame coordinates.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     */\r\n    frameCoords(x: GLint, y: GLint): GLfloat2 {\r\n        const position = vec2.divide(v2(), this._frameSize, this.canvasSize);\r\n        vec2.floor(position, vec2.multiply(position, [x + 0.5, y + 0.5], position));\r\n        vec2.add(position, position, [0.5, 0.5]);\r\n        return tuple2<GLfloat>(position);\r\n    }\r\n\r\n    // /**\r\n    //  * @interface CoordsAccess\r\n    //  * Look up a fragments coordinates by unprojecting the depth using the renderer's camera.\r\n    //  * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n    //  * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n    //  * @param zInNDC - optional depth parameter (e.g., from previous query).\r\n    //  * @returns - 3D coordinate reprojected from NDC/depth to world space.\r\n    //  */\r\n    // abstract coordsAt(x: GLint, y: GLint, zInNDC?: number, viewProjectionInverse?: mat4): vec3 | undefined;\r\n\r\n    // /**\r\n    //  * @interface IDAccess\r\n    //  * Look up an object id at a specific fragment.\r\n    //  * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n    //  * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n    //  * @returns - ID encoded of an object rendered/visible at given position.\r\n    //  */\r\n    // abstract idAt(x: GLint, y: GLint): GLsizei | undefined;\r\n\r\n\r\n    /**\r\n     * Changes the frame size for rendering. This setter should only be used by the canvas this renderer is bound to.\r\n     * Changing the frame size invalidates the renderer.\r\n     *\r\n     * Note: the frame size is detached from the canvas size. When blitting the frame into the canvas, the frame is\r\n     * rescaled to fill or fit the canvas size.\r\n     *\r\n     * @param size - Resolution of the framebuffer.\r\n     */\r\n    set frameSize(size: GLsizei2) {\r\n        this.assertInitialized();\r\n        if (vec2.equals(this._frameSize, size)) {\r\n            return;\r\n        }\r\n        Object.assign(this._frameSize, size);\r\n        this._altered.alter('frameSize');\r\n        this.invalidate();\r\n    }\r\n\r\n    /**\r\n     * Set the frame precision.\r\n     * @param format - The accumulation format. Expected values are one of 'byte', 'half', 'float', or 'auto'\r\n     */\r\n    set framePrecision(precision: Wizard.Precision) {\r\n        this.assertInitialized();\r\n        if (this._framePrecision === precision) {\r\n            return;\r\n        }\r\n        this._framePrecision = precision;\r\n        this._altered.alter('framePrecision');\r\n        this.invalidate();\r\n    }\r\n\r\n    /**\r\n     * Sets the color used for clearing the background. This setter should only be used by the canvas this renderer is\r\n     * bound to. Changing the frame size invalidates the renderer.\r\n     * @param color - Red, green, blue, and alpha color components.\r\n     */\r\n    set clearColor(color: GLclampf4) {\r\n        this.assertInitialized();\r\n        if (vec4.equals(this._clearColor, color)) {\r\n            return;\r\n        }\r\n        Object.assign(this._clearColor, color);\r\n        this._altered.alter('clearColor');\r\n        this.invalidate();\r\n    }\r\n\r\n    /**\r\n     * Read only access to the renderers registered render textures that can be blit to the back buffer for debugging.\r\n     * @returns - Array of render texture identifiers.\r\n     */\r\n    get debugTextures(): Array<string> {\r\n        this.assertInitialized();\r\n        return this._debugTextures;\r\n    }\r\n\r\n    /**\r\n     * The render texture index for debug output. This is -1 when debug output is disabled. This should be used in\r\n     * the renderers swap implementation.\r\n     */\r\n    get debugTexture(): GLint {\r\n        this.assertInitialized();\r\n        return this._debugTexture;\r\n    }\r\n\r\n    /**\r\n     * Enables to specify the index of a render texture to be blit to the back buffer for debugging. This invalidates\r\n     * but should result in a blit only if nothing else changed. When the requested debug texture was blit (and\r\n     * debugTexture was actually altered) `this.debugTextureNext()` should be called to inform observers.\r\n     * @param index - Render texture index based on debuggableTextures array. This should be in [-1, length of array].\r\n     */\r\n    set debugTexture(index: GLint) {\r\n        this.assertInitialized();\r\n        if (this._debugTexture === index) {\r\n            return;\r\n        }\r\n        logIf(index >= this._debugTextures.length, LogLevel.Error, `invalid texture index, ` +\r\n            `debug texture disabled (index set to -1) | ${index} not in [-1,+${this._debugTextures.length - 1}]`);\r\n        this._debugTexture = index < this._debugTextures.length ?\r\n            clamp(index, -1, this._debugTextures.length - 1) : -1;\r\n        this._altered.alter('debugTexture');\r\n        this.invalidate();\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to debug texture changes.\r\n     */\r\n    get debugTexture$(): Observable<GLint> {\r\n        return this._debugTextureSubject.asObservable();\r\n    }\r\n\r\n}\r\n","\r\nimport { assert, GETparameter } from './auxiliaries';\r\n\r\nimport { ExtensionsHash } from './extensionshash';\r\n\r\n\r\n/**\r\n * Mask object for context masquerade. It is used to artificially restrict the capabilities of context instances.\r\n * It is intended to simplify cross-browser testing without actually using different browsers.\r\n *\r\n * A mask can be instantiated in four different ways:\r\n * 1. by creating the object and explicitly configuring all values as required.\r\n * 2. from a preset identifier (all presets are stored in assets/masquerade.json).\r\n * 3. from an extension hash\r\n * 4. from GET parameters, either 'msqrd_p=<Identifer>' or 'msqrd_h=<ExtensionsHash>'.\r\n *\r\n * Intended use; when the context's static masquerade is set, all subsequent instances apply that mask:\r\n * ```\r\n * Context.masquerade = ContextMasquerade.fromHash('288M01-o');\r\n * ```\r\n */\r\nexport class ContextMasquerade {\r\n\r\n    /** @see {@link presets} */\r\n    protected static readonly MASQUERADE_JSON: Array<ContextMasquerade.Preset> = require('./data/masquerade.json');\r\n\r\n    /** @see {@link backend} */\r\n    protected _backend: string;\r\n\r\n    /** @see {@link extensionsStrive} */\r\n    protected _extensionsStrive = new Array<string>();\r\n\r\n    /** @see {@link extensionsConceal} */\r\n    protected _extensionsConceal = new Array<string>();\r\n\r\n    /** @see {@link functionsUndefine} */\r\n    protected _functionsUndefine = new Array<string>();\r\n\r\n    /**\r\n     * Generates a mask based on an extensions hash (encoding backend and extensions_strive). If extensions are strived\r\n     * for, all extensions that are not explicitly mentioned will be added to the list of concealed extensions.\r\n     * @param hash - Hash that is to be decoded for backend and extensions data.\r\n     */\r\n    static fromHash(hash: string): ContextMasquerade {\r\n        const mask = new ContextMasquerade();\r\n        const tuple = ExtensionsHash.decode(hash);\r\n\r\n        mask._backend = tuple[0];\r\n        mask._extensionsStrive = tuple[1];\r\n        mask._extensionsConceal = ExtensionsHash.complement(mask._backend, mask._extensionsStrive);\r\n\r\n        return mask;\r\n    }\r\n\r\n    /**\r\n     * Creates a context mask based on a preset. Note that the presence of an extensions_hash overrides the backend,\r\n     * extensions_strive, as well as extensions_conceal. Only the functions_undefine will be preserved in that case.\r\n     * @param identifier - Name of a preset as specified in masquerade.json.\r\n     */\r\n    static fromPreset(identifier: string): ContextMasquerade {\r\n        const mask = new ContextMasquerade();\r\n\r\n        const identifiers = new Array<string>();\r\n        let preset: ContextMasquerade.Preset | undefined;\r\n        for (const p of ContextMasquerade.presets()) {\r\n            identifiers.push(p.identifier);\r\n            if (p.identifier !== identifier) {\r\n                continue;\r\n            }\r\n            preset = p;\r\n            break;\r\n        }\r\n\r\n        if (preset === undefined) {\r\n            assert(false,\r\n                `expected valid identifier, available ['${identifiers.join('\\', \\'')}'], given '${identifier}'`);\r\n            return mask;\r\n        }\r\n        preset = preset as ContextMasquerade.Preset;\r\n\r\n        if (preset.extensions_hash !== undefined) {\r\n            const tuple = ExtensionsHash.decode(preset.extensions_hash);\r\n            mask._backend = tuple[0];\r\n            mask._extensionsStrive = tuple[1];\r\n        } else {\r\n            mask._backend = preset.backend;\r\n            mask._extensionsConceal = preset.extensions_conceal;\r\n            mask._extensionsStrive = preset.extensions_strive;\r\n        }\r\n        mask._functionsUndefine = preset.functions_undefine;\r\n\r\n        assert(mask._backend !== undefined,\r\n            'expected backend to be included in preset');\r\n\r\n        if (mask._extensionsStrive === undefined) {\r\n            mask._extensionsStrive = [];\r\n        } else {\r\n            mask._extensionsConceal = ExtensionsHash.complement(mask._backend, mask._extensionsStrive);\r\n        }\r\n\r\n        if (mask._extensionsConceal === undefined) {\r\n            mask._extensionsConceal = [];\r\n        }\r\n\r\n        if (mask._functionsUndefine === undefined) {\r\n            mask._functionsUndefine = [];\r\n        }\r\n\r\n        return mask;\r\n    }\r\n\r\n    /**\r\n     * Tries to generate a mask based on GET parameters: if msqrd_h is present, its value is interpreted as\r\n     * extensions hash and a mask is generated from hash. If no hash was found, presence of msqrd_p is evaluated and if\r\n     * found, a mask is generated from preset identifier.\r\n     */\r\n    static fromGET(): ContextMasquerade | undefined {\r\n        const msqrdHash = GETparameter('msqrd_h');\r\n        if (msqrdHash !== undefined) {\r\n            return ContextMasquerade.fromHash(msqrdHash);\r\n        }\r\n        const msqrdPreset = GETparameter('msqrd_p');\r\n        if (msqrdPreset !== undefined) {\r\n            return ContextMasquerade.fromPreset(msqrdPreset);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /*\r\n     * Presets for emulation of various browsers. This can be used to maintain multiple test configurations and\r\n     * simplify cross-browser testing without actually using different browsers.\r\n     */\r\n    static presets(): Array<ContextMasquerade.Preset> {\r\n        return this.MASQUERADE_JSON;\r\n    }\r\n\r\n    /**\r\n     * Defines the backend (currently either 'webgl1' or 'webgl2').\r\n     */\r\n    get backend(): string {\r\n        return this._backend;\r\n    }\r\n\r\n    /**\r\n     * Extensions that the context should strive to support. The support can only go as far as the extensions are\r\n     * actually supported.\r\n     */\r\n    get extensionsStrive(): Array<string> {\r\n        return this._extensionsStrive;\r\n    }\r\n\r\n    /**\r\n     * Extensions that the context should conceal support of. This only affects supported extensions, which will\r\n     * be reported to be not supported.\r\n     */\r\n    get extensionsConceal(): Array<string> {\r\n        return this._extensionsConceal;\r\n    }\r\n\r\n    /**\r\n     * Functions that the context should delete during construction. Since WebGL context functions cannot be deleted\r\n     * they are undefined instead.\r\n     */\r\n    get functionsUndefine(): Array<string> {\r\n        return this._functionsUndefine;\r\n    }\r\n}\r\n\r\n\r\nexport namespace ContextMasquerade {\r\n\r\n    /**\r\n     * Interfaces required to prevent implicit any when parsing masquerade.json.\r\n     */\r\n    export interface Preset {\r\n        identifier: string;\r\n        backend: string;\r\n        extensions_hash: string;\r\n        extensions_strive: Array<string>;\r\n        extensions_conceal: Array<string>;\r\n        functions_undefine: Array<string>;\r\n    }\r\n\r\n}\r\n","\r\n\r\n/** Namespace that comprises extensions by WebGL version (also cleans up documentation). */\r\nnamespace extensions {\r\n\r\n    /**\r\n     * All extensions specified for WebGL. This array is used to verify extension queries in WebGL contexts. Most of\r\n     * these extensions should not be queried in WebGL2.\r\n     */\r\n    export const WEBGL1_EXTENSIONS: Array<string> = [\r\n\r\n        'ANGLE_instanced_arrays',\r\n\r\n        'EXT_blend_minmax',\r\n        'EXT_color_buffer_half_float',\r\n        'EXT_disjoint_timer_query',\r\n        'EXT_frag_depth',\r\n        'EXT_sRGB',\r\n        'EXT_shader_texture_lod',\r\n        'EXT_texture_filter_anisotropic',\r\n\r\n        'OES_element_index_uint',\r\n        'OES_standard_derivatives',\r\n        'OES_texture_float',\r\n        'OES_texture_float_linear',\r\n        'OES_texture_half_float',\r\n        'OES_texture_half_float_linear',\r\n        'OES_vertex_array_object',\r\n\r\n        'WEBGL_color_buffer_float',\r\n        'WEBGL_compressed_texture_astc',\r\n        'WEBGL_compressed_texture_atc',\r\n        'WEBGL_compressed_texture_etc',\r\n        'WEBGL_compressed_texture_etc1',\r\n        'WEBGL_compressed_texture_pvrtc',\r\n        'WEBGL_compressed_texture_s3tc',\r\n        'WEBGL_compressed_texture_s3tc_srgb',\r\n        'WEBGL_debug_renderer_info',\r\n        'WEBGL_debug_shaders',\r\n        'WEBGL_depth_texture',\r\n        'WEBGL_draw_buffers',\r\n        'WEBGL_lose_context',\r\n    ];\r\n\r\n    /**\r\n     * All extensions specified for WebGL2. This array is used to verify extension queries in WebGL2 contexts.\r\n     */\r\n    export const WEBGL2_EXTENSIONS: Array<string> = [\r\n\r\n        'EXT_color_buffer_float',\r\n        'EXT_disjoint_timer_query_webgl2',\r\n        'EXT_texture_filter_anisotropic',\r\n\r\n        'OES_texture_float_linear',\r\n        'OES_texture_half_float_linear',\r\n\r\n        'WEBGL_compressed_texture_astc',\r\n        'WEBGL_compressed_texture_atc',\r\n        'WEBGL_compressed_texture_etc',\r\n        'WEBGL_compressed_texture_etc1',\r\n        'WEBGL_compressed_texture_pvrtc',\r\n        'WEBGL_compressed_texture_s3tc',\r\n        'WEBGL_compressed_texture_s3tc_srgb',\r\n        'WEBGL_debug_renderer_info',\r\n        'WEBGL_debug_shaders',\r\n        'WEBGL_lose_context',\r\n    ];\r\n\r\n    /**\r\n     * WebGL extensions that are supported by default in WebGL2.\r\n     */\r\n    export const WEBGL2_DEFAULT_EXTENSIONS: Array<string> = [\r\n        'ANGLE_instanced_arrays',\r\n\r\n        'EXT_blend_minmax',\r\n        'EXT_frag_depth',\r\n        'EXT_sRGB',\r\n        'EXT_shader_texture_lod',\r\n\r\n        'OES_element_index_uint',\r\n        'OES_standard_derivatives',\r\n        'OES_texture_float',\r\n        'OES_texture_half_float',\r\n        'OES_vertex_array_object',\r\n\r\n        'WEBGL_depth_texture',\r\n        'WEBGL_draw_buffers',\r\n    ];\r\n\r\n}\r\n\r\nexport = extensions;\r\n","\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { vec2, vec4 } from 'gl-matrix';\r\nimport { clamp2, parseVec2, parseVec4 } from './gl-matrix-extensions';\r\n\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\nimport { GLclampf2, GLsizei2, tuple2, tuple4 } from './tuples';\r\n\r\n\r\nimport { Color } from './color';\r\nimport { Context } from './context';\r\nimport { Controller } from './controller';\r\nimport { MouseEventProvider } from './mouseeventprovider';\r\nimport { Renderer } from './renderer';\r\nimport { Resizable } from './resizable';\r\nimport { TouchEventProvider } from './toucheventprovider';\r\nimport { Wizard } from './wizard';\r\nimport { XRController } from './xrcontroller';\r\n\r\n\r\n/**\r\n * A canvas is associated to a single canvas element (DOM) and integrates or delegates event handling as well as\r\n * control over the rendering loop and the attached renderer respectively. Furthermore, the canvas can bind a single\r\n * renderer (non owning) and sets up communication between controller, renderer, and navigation. The controller invokes\r\n * the renderer's update, frame, and swap methods. The navigation manipulates the renderer's camera. The renderer can\r\n * invalidate itself which causes a controller update.\r\n *\r\n * Note: Since only the multi-frame number is used by the renderer and the controller, the canvas provides getter,\r\n * setter, and change callback setter. Debug-frame and frame number are managed exclusively by the controller.\r\n *\r\n * Note: the canvas should hold any properties that are required to be passed onto a newly bound renderer (in the case\r\n * multiple renderer are used with a canvas). The clear color is one example of such a property.\r\n */\r\nexport class Canvas extends Resizable {\r\n\r\n    /**\r\n     * Default color that is used if none is set via data attributes.\r\n     */\r\n    protected static readonly DEFAULT_CLEAR_COLOR: Color = new Color([0.203, 0.227, 0.250, 1.0]);\r\n\r\n    /**\r\n     * Default frame precision, e.g., accumulation format when multi-frame rendering is used.\r\n     */\r\n    protected static readonly DEFAULT_FRAME_PRECISION: Wizard.Precision = Wizard.Precision.auto;\r\n\r\n    /**\r\n     * Default multi-frame number used if none is set via data attributes.\r\n     */\r\n    protected static readonly DEFAULT_MULTI_FRAME_NUMBER = 0;\r\n\r\n\r\n    /** @see {@link context} */\r\n    protected _context: Context;\r\n\r\n    /** @see {@link controller} */\r\n    protected _controller: Controller | XRController;\r\n\r\n    /** @see {@link renderer} */\r\n    protected _renderer: Renderer | undefined;\r\n\r\n\r\n    /** @see {@link clearColor} */\r\n    protected _clearColor: Color;\r\n\r\n\r\n    /**\r\n     * @see {@link framePrecision}\r\n     * This property can be observed, e.g., `aCanvas.framePrecisionObservable.subscribe()`.\r\n     */\r\n    protected _framePrecision: Wizard.Precision;\r\n    protected _framePrecisionSubject = new ReplaySubject<Wizard.Precision>(1);\r\n\r\n\r\n    /**\r\n     * @see {@link size}\r\n     * This property can be observed, e.g., `aCanvas.sizeObservable.subscribe()`.\r\n     */\r\n    protected _size: GLsizei2 = [1, 1];\r\n    protected _sizeSubject = new ReplaySubject<GLsizei2>(1);\r\n\r\n    /**\r\n     * @see {@link frameScale}\r\n     * This property can be observed, `aCanvas.frameScaleObservable.subscribe()`.\r\n     */\r\n    protected _frameScale: GLclampf2;\r\n    protected _frameScaleSubject = new ReplaySubject<GLclampf2>(1);\r\n\r\n    /**\r\n     * @see {@link frameSize}\r\n     * This property can be observed, `aCanvas.frameSizeObservable.subscribe()`.\r\n     */\r\n    protected _frameSize: GLsizei2;\r\n    protected _frameSizeSubject = new ReplaySubject<GLsizei2>(1);\r\n\r\n    /**\r\n     * Flag used to determine whether frame size or frame scale is the dominant configuration.\r\n     */\r\n    protected _favorSizeOverScale: boolean;\r\n\r\n\r\n    /** @see {@link element} */\r\n    protected _element: HTMLCanvasElement;\r\n\r\n    /** @see {@link mouseEventProvider} */\r\n    protected _mouseEventProvider: MouseEventProvider;\r\n\r\n    /** @see {@link touchEventProvider} */\r\n    protected _touchEventProvider: TouchEventProvider;\r\n\r\n\r\n    /**\r\n     * Create and initialize a multi-frame controller, setup a default multi-frame number and get the canvas's webgl\r\n     * context as well as the canvas resolution. The context and resolution will be passed on to the set renderer and\r\n     * its stages/passes appropriately. The canvas does not provide lazy initialization and is strictly bound to a\r\n     * single canvas element (DOM) that cannot be changed.\r\n     *\r\n     * Note: the multi-frame number can be set using a data attribute in the canvas element called\r\n     * 'data-multi-frame-number'.\r\n     *\r\n     * The canvas supports the following data attributes:\r\n     * - data-multi-frame-number {number} - integer greater than 0\r\n     * - data-clear-color {Color} - rgba color for clearing\r\n     * - data-frame-scale {GLclampf2} - width and height frame scale in [0.0,1.0]\r\n     * - data-frame-size {GLizei2} - width and height frame size in pixel\r\n     * - data-frame-precision {RenderPrecision} - precision for, e.g., frame accumulation\r\n     * , either 'float', 'half', 'byte', or 'auto'.\r\n     *\r\n     * Note: data-frame-size takes precedence if both frame-scale and frame-size data attributes are provided.\r\n     * @param element - Canvas element or element id {string} to be used for querying the canvas element.\r\n     * @param attributes - Overrides the internal default attributes @see{Context.DEFAULT_ATTRIBUTES}.\r\n     */\r\n    constructor(element: HTMLCanvasElement | string, attributes?: WebGLContextAttributes,\r\n        controller?: Controller | XRController) {\r\n        super(); // setup resize event handling\r\n        this._element = element instanceof HTMLCanvasElement ? element :\r\n            document.getElementById(element) as HTMLCanvasElement;\r\n        this._mouseEventProvider = new MouseEventProvider(this._element, 200);\r\n        this._touchEventProvider = new TouchEventProvider(this._element, 200);\r\n\r\n        const dataset = this._element.dataset;\r\n\r\n        /* Requesting a context asserts when no context could be created. */\r\n        this._context = Context.request(this._element, attributes);\r\n        if (controller) {\r\n            this._controller = controller;\r\n            this._controller.block(); // Remain in block mode until renderer is bound and configured.\r\n        } else {\r\n            this.configureController(dataset);\r\n        }\r\n\r\n        this.configureSizeAndScale(dataset);\r\n\r\n        /* Retrieve clear color from data attributes or set default. */\r\n        let dataClearColor: vec4 | undefined;\r\n        if (dataset.clearColor) {\r\n            dataClearColor = parseVec4(dataset.clearColor);\r\n            logIf(dataClearColor === undefined, LogLevel.Warning,\r\n                `data-clear-color could not be parsed, given '${dataset.clearColor}'`);\r\n        }\r\n        this._clearColor = dataClearColor ? new Color(tuple4<GLclampf>(dataClearColor)) : Canvas.DEFAULT_CLEAR_COLOR;\r\n\r\n        /* Retrieve frame precision (e.g., accumulation format) from data attributes or set default */\r\n        let dataFramePrecision = dataset.accumulationFormat ?\r\n            dataset.accumulationFormat as Wizard.Precision : Canvas.DEFAULT_FRAME_PRECISION;\r\n        if (!(dataFramePrecision in Wizard.Precision)) {\r\n            dataFramePrecision = Canvas.DEFAULT_FRAME_PRECISION;\r\n            log(LogLevel.Warning,\r\n                `unknown frame precision '${dataset.accumulationFormat}' changed to '${dataFramePrecision}'`);\r\n        }\r\n        this._framePrecision = dataFramePrecision;\r\n        this.framePrecisionNext();\r\n    }\r\n\r\n    /**\r\n     * Creates and initializes a new controller that is used for this canvas. If provided via data attributes\r\n     * multi-frame number and debug-frame number are set.\r\n     * @param dataset - The attributes data-multi-frame-number and data-debug-frame-number are supported.\r\n     */\r\n    protected configureController(dataset: DOMStringMap): void {\r\n        /* Create and setup a multi-frame controller. */\r\n        this._controller = new Controller();\r\n        this._controller.block(); // Remain in block mode until renderer is bound and configured.\r\n\r\n        /* Retrieve multi-frame number from data attributes or set default. */\r\n        let dataMFNum: number | undefined;\r\n        if (dataset.multiFrameNumber) {\r\n            dataMFNum = parseInt(dataset.multiFrameNumber, 10);\r\n            logIf(isNaN(dataMFNum), LogLevel.Warning,\r\n                `data-multi-frame-number could not be parsed, given '${dataset.multiFrameNumber}'`);\r\n        }\r\n\r\n        /* Retrieve debug-frame number from data attributes or set default. */\r\n        let dataDFNum: number | undefined;\r\n        if (dataset.debugFrameNumber) {\r\n            dataDFNum = parseInt(dataset.debugFrameNumber, 10);\r\n            logIf(isNaN(dataDFNum), LogLevel.Warning,\r\n                `data-debug-frame-number could not be parsed, given '${dataset.debugFrameNumber}'`);\r\n        }\r\n\r\n        this._controller.multiFrameNumber = dataMFNum ? dataMFNum : Canvas.DEFAULT_MULTI_FRAME_NUMBER;\r\n        this._controller.debugFrameNumber = dataDFNum ? dataDFNum : 0;\r\n\r\n        const mfNumChanged = dataMFNum ? dataMFNum !== this._controller.multiFrameNumber : false;\r\n        logIf(mfNumChanged, LogLevel.Warning, `data-multi-frame-number changed to `\r\n            + `${this._controller.multiFrameNumber}, given '${dataset.multiFrameNumber}'`);\r\n\r\n        const dfNumChanged = dataDFNum ? dataDFNum !== this._controller.debugFrameNumber : false;\r\n        logIf(dfNumChanged, LogLevel.Warning, `data-debug-frame-number changed to `\r\n            + `${this._controller.debugFrameNumber}, given '${dataset.debugFrameNumber}'`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Initializes the frame size and scale. By default, the scale is 1.0 for width and height and the size reflects\r\n     * the native canvas size.\r\n     * @param dataset - The attributes data-frame-size and data-frame-scale are supported.\r\n     */\r\n    protected configureSizeAndScale(dataset: DOMStringMap): void {\r\n\r\n        /* Setup frame scale with respect to the canvas size. */\r\n        let dataFrameScale: vec2 | undefined;\r\n        if (dataset.frameScale) {\r\n            dataFrameScale = parseVec2(dataset.frameScale);\r\n            logIf(dataset.frameScale !== undefined && dataFrameScale === undefined, LogLevel.Warning,\r\n                `data-frame-scale could not be parsed, given '${dataset.frameScale}'`);\r\n        }\r\n        this._frameScale = dataFrameScale ? tuple2<GLfloat>(dataFrameScale) : [1.0, 1.0];\r\n\r\n        /* Setup frame size. */\r\n        let dataFrameSize: vec2 | undefined;\r\n        if (dataset.frameSize) {\r\n            dataFrameSize = parseVec2(dataset.frameSize);\r\n            logIf(dataset.frameSize !== undefined && dataFrameSize === undefined, LogLevel.Warning,\r\n                `data-frame-size could not be parsed, given '${dataset.frameSize}'`);\r\n        }\r\n        this._favorSizeOverScale = dataFrameSize !== undefined;\r\n        this._frameSize = dataFrameSize ? tuple2<GLsizei>(dataFrameSize) : [this._size[0], this._size[1]];\r\n\r\n        this.onResize(); // invokes frameScaleNext and frameSizeNext\r\n    }\r\n\r\n\r\n    /**\r\n     * Convenience function that triggers the canvas size retrieval. The native width and height of the canvas dom\r\n     * element is cached (in pixel).\r\n     */\r\n    protected retrieveSize(): void {\r\n        const size = Resizable.elementSize(this._element);\r\n        this._size = [size[0], size[1]];\r\n        this.sizeNext();\r\n    }\r\n\r\n    /**\r\n     * Resize is invoked by the resizable mixin. It retrieves the canvas size and promotes it to the renderer.\r\n     */\r\n    protected onResize(): void {\r\n        this.retrieveSize();\r\n\r\n        /* If the canvas does not have a size, block rendering. This can happen if the canvas is, e.g., hidden and\r\n        DOM layouting leads to width of zero. */\r\n        if (this._size[0] === 0 || this._size[1] === 0) {\r\n            log(LogLevel.Warning, `canvas width or height is 0, thus, not visible, resize discarded`);\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Set canvas rendering size to pixel size of the canvas. This assures a 1 to 1 mapping of native pixels to\r\n         * fragments and thus should prevent upscaling.\r\n         */\r\n        this._element.width = this._size[0];\r\n        this._element.height = this._size[1];\r\n\r\n        if (this._renderer) {\r\n            this._controller.block();\r\n        }\r\n\r\n        if (this._favorSizeOverScale) {\r\n            this.frameSize = this._frameSize;\r\n        } else {\r\n            this.frameScale = this._frameScale;\r\n        }\r\n\r\n        if (this._renderer) {\r\n            this._controller.unblock();\r\n            /* Swapping here fixes flickering while resizing the canvas for safari. */\r\n            this._renderer.swap();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._framePrecision changes to its associated subject.\r\n     */\r\n    protected framePrecisionNext(): void {\r\n        this._framePrecisionSubject.next(this._framePrecision);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._size changes to its associated subject.\r\n     */\r\n    protected sizeNext(): void {\r\n        this._sizeSubject.next(this._size);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._frameScale changes to its associated subject.\r\n     */\r\n    protected frameScaleNext(): void {\r\n        this._frameScaleSubject.next(this._frameScale);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._frameSize changes to its associated subject.\r\n     */\r\n    protected frameSizeNext(): void {\r\n        this._frameSizeSubject.next(this._frameSize);\r\n    }\r\n\r\n\r\n    /**\r\n     * The renderer (if not null) will be connected to the controller and navigation. The controller will\r\n     * immediately trigger a multi-frame, thereby causing the renderer to render frames.\r\n     *\r\n     * Note that no renderer should be bound to multiple canvases\r\n     * simultaneously. The reference is non owning.\r\n     *\r\n     * @param renderer - Either undefined or an uninitialized renderer.\r\n     */\r\n    protected bind(renderer: Renderer | undefined): void {\r\n        if (this._renderer === renderer) {\r\n            return;\r\n        }\r\n        this.unbind(); // block controller\r\n        if (renderer === undefined) {\r\n            return;\r\n        }\r\n        assert(this._controller.blocked, `expected controller to be blocked`);\r\n        this._renderer = renderer;\r\n\r\n        /**\r\n         * Note: a renderer that is to be bound to a canvas is expected to be not initialized. For it, initializable\r\n         * throws on re-initialization. Similarly to the frame callback for the controller, the controller's update\r\n         * method is assigned to the pipelines invalidation event.\r\n         */\r\n        this._renderer.initialize(this.context, (force) => this._controller.update(force),\r\n            this._mouseEventProvider /*, this._keyEventProvider */, this._touchEventProvider);\r\n\r\n        this._renderer.frameSize = this._frameSize;\r\n        this._renderer.clearColor = this._clearColor.rgba;\r\n        this._renderer.framePrecision = this._framePrecision;\r\n        this._renderer.debugTexture = -1;\r\n\r\n        /**\r\n         * Note: again, no asserts required since controller and renderer already take care of that.\r\n         * Assign the renderer's update, frame, and swap method to the controller's frame and swap event callback.\r\n         * The assignments trigger immediate update and subsequently updates on invalidation.\r\n         */\r\n        this._controller.controllable = this._renderer;\r\n        this._controller.unblock();\r\n    }\r\n\r\n    /**\r\n     * Unbinds the current renderer from the canvas as well as the controller and navigation, and uninitializes the\r\n     * renderer.\r\n     */\r\n    protected unbind(): void {\r\n        if (this._renderer === undefined) {\r\n            return;\r\n        }\r\n\r\n        this._controller.block();\r\n        /**\r\n         * Since canvas is not the owner of the renderer it should not dispose it. However, the canvas manages the\r\n         * initialization of bound pipelines.\r\n         */\r\n        this._controller.controllable = undefined;\r\n        this._renderer = undefined;\r\n    }\r\n\r\n\r\n    /**\r\n     * Uninitializes and deletes the controller as well as all other properties.\r\n     */\r\n    dispose(): void {\r\n        super.dispose();\r\n\r\n        if (this._renderer) {\r\n            this._renderer.uninitialize();\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows for explicit trigger of onResize, e.g., in case resize event-handling is managed explicitly ...\r\n     */\r\n    resize(): void {\r\n        this.onResize();\r\n    }\r\n\r\n\r\n    /**\r\n     * Single controller that is managing the rendering control flow of a bound renderer.\r\n     * @returns - The controller used by the canvas.\r\n     */\r\n    get controller(): Controller | XRController {\r\n        return this._controller;\r\n    }\r\n\r\n    /**\r\n     * The currently bound renderer. If no renderer is bound null is returned. If a renderer is bound, it should\r\n     * always be initialized (renderer initialization handled by the canvas).\r\n     * @returns - The currently bound renderer.\r\n     */\r\n    get renderer(): Renderer | undefined {\r\n        return this._renderer;\r\n    }\r\n\r\n    /**\r\n     * Binds a renderer to the canvas. A previously bound renderer will be unbound (see bind and unbind).\r\n     * @param renderer - A renderer object or undefined.\r\n     */\r\n    set renderer(renderer: Renderer | undefined) {\r\n        this.bind(renderer);\r\n    }\r\n\r\n    /**\r\n     * Targeted scale for rendering with respect to the canvas size. This property can be observed, e.g.,\r\n     * `canvas.frameScaleObservable.subscribe()`.\r\n     * @returns - The frame scale in [0.0, 1.0].\r\n     */\r\n    get frameScale(): GLclampf2 {\r\n        return this._frameScale;\r\n    }\r\n\r\n    /**\r\n     * Set the targeted scale for rendering with respect to the canvas size. The scale will be clamped to [0.0,1.0]. A\r\n     * scale of 0.0 results in 1px frame resolution for the respective component.\r\n     * The frame scale allows to detach the rendering resolution from the native canvas resolution, e.g., in order to\r\n     * decrease rendering cost. The frame resolution can also be specified explicitly by width and height. Non-finite\r\n     * values will be ignored.\r\n     * @param frameScale - Scale of rendering.\r\n     * @returns - The frame scale in [0.0,1.0].\r\n     */\r\n    set frameScale(frameScale: GLclampf2) {\r\n        if (!isFinite(frameScale[0]) || !isFinite(frameScale[1])) {\r\n            log(LogLevel.Warning, `expected finite frame size, non-finite values ignored, given [${frameScale}]`);\r\n            return;\r\n        }\r\n        /* Always apply frame scale, e.g., when canvas is resized scale remains same, but frame size will change. */\r\n        logIf(frameScale[0] < 0.0 || frameScale[0] > 2.0, LogLevel.Info,\r\n            `frame width scale clamped to [0.0,2.0], given ${frameScale[0]}`);\r\n        logIf(frameScale[1] < 0.0 || frameScale[1] > 2.0, LogLevel.Info,\r\n            `frame height scale clamped to [0.0,2.0], given ${frameScale[0]}`);\r\n\r\n        const scale = vec2.create();\r\n        clamp2(scale, frameScale, [0.0, 0.0], [2.0, 2.0]);\r\n\r\n        const size = vec2.create();\r\n        vec2.mul(size, this._size, scale);\r\n        vec2.max(size, [1, 1], size);\r\n        vec2.round(size, size);\r\n\r\n        /* Adjust scale based on rounded (integer) frame size. */\r\n        vec2.div(scale, size, this._size);\r\n        logIf(!vec2.exactEquals(scale, frameScale), 2,\r\n            `frame scale was adjusted to ${scale.toString()}, given ${frameScale.toString()}`);\r\n\r\n        this._frameScale = tuple2<GLclampf>(scale);\r\n        this._frameSize = tuple2<GLsizei>(size);\r\n        this._favorSizeOverScale = false;\r\n\r\n        this.frameScaleNext();\r\n        this.frameSizeNext();\r\n\r\n        if (this._renderer) {\r\n            this._renderer.frameSize = this._frameSize;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to frame scale changes.\r\n     */\r\n    get frameScale$(): Observable<GLclampf2> {\r\n        return this._frameScaleSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Targeted resolution (width and height) for rendering in pixel. This property can be observed, e.g.,\r\n     * `canvas.frameSizeObservable.subscribe()`.\r\n     * @returns - The frame size in pixel (must not be physical/native pixels).\r\n     */\r\n    get frameSize(): GLsizei2 {\r\n        return this._frameSize;\r\n    }\r\n\r\n    /**\r\n     * Set the targeted size for rendering in pixels. The size will be clamped to [1, canvas-size]. The frame size\r\n     * allows to detach the rendering resolution from the native canvas resolution, e.g., in order to decrease\r\n     * rendering cost. Non-finite values will be ignored.\r\n     * The render resolution can also be specified implicitly by width and height in scale (@see frameScale).\r\n     * @param frameSize - Size for rendering in pixel (must not be physical/native pixels).\r\n     * @returns - The frame size in [1, canvas-size].\r\n     */\r\n    set frameSize(frameSize: GLsizei2) {\r\n        if (!isFinite(frameSize[0]) || !isFinite(frameSize[1])) {\r\n            log(LogLevel.Warning, `expected finite frame size, non-finite values ignored, given [${frameSize}]`);\r\n            return;\r\n        }\r\n        logIf(frameSize[0] < 1 || frameSize[0] > this._size[0], LogLevel.Info,\r\n            `frame width scale clamped to [1,${this._size[0]}], given ${frameSize[0]}`);\r\n        logIf(frameSize[1] < 1 || frameSize[1] > this._size[1], LogLevel.Info,\r\n            `frame height scale clamped to [1, ${this._size[1]}], given ${frameSize[1]}`);\r\n\r\n        const size = vec2.create();\r\n        clamp2(size, frameSize, [1.0, 1.0], this._size);\r\n        vec2.round(size, size);\r\n\r\n        logIf(!vec2.exactEquals(size, frameSize), LogLevel.Warning,\r\n            `frame size was adjusted to ${size.toString()}, given ${frameSize.toString()}`);\r\n\r\n        const scale = vec2.create();\r\n        vec2.div(scale, size, this._size);\r\n\r\n        this._frameScale = tuple2<GLclampf>(scale);\r\n        this._frameSize = tuple2<GLsizei>(size);\r\n        /* Switch back to default mode (scale based) when frame size matches canvas size. */\r\n        this._favorSizeOverScale = !vec2.exactEquals(this._frameSize, this._size);\r\n\r\n        this.frameScaleNext();\r\n        this.frameSizeNext();\r\n\r\n        if (this._renderer) {\r\n            this._renderer.frameSize = this._frameSize;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to frame size changes.\r\n     */\r\n    get frameSize$(): Observable<GLsizei2> {\r\n        return this._frameSizeSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter for the canvas's clear color. The clear color is provided to the renderer (on bind). Since this is a\r\n     * canvas specific setting it is stored here, not in a renderer or controller.\r\n     * @returns - Color object passed to any renderer bound to this canvas.\r\n     */\r\n    get clearColor(): Color {\r\n        return this._clearColor;\r\n    }\r\n\r\n    /**\r\n     * Sets the clear color that is then passed to the currently bound renderer as well as to any pipelines bound in\r\n     * the future. The provided color will be clamped to [0.0;1.0] for every component.\r\n     * @param clearColor - Color object that will be referenced.\r\n     */\r\n    set clearColor(clearColor: Color) {\r\n        this._clearColor = clearColor;\r\n        if (this._renderer) {\r\n            this._renderer.clearColor = this._clearColor.rgba;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter for the targeted frame precision. This property can be observed, e.g.,\r\n     * `canvas.framePrecisionObservable.subscribe()`.\r\n     * @returns - Accumulation format as string passed to any renderer bound.\r\n     */\r\n    get framePrecision(): Wizard.Precision {\r\n        return this._framePrecision;\r\n    }\r\n\r\n    /**\r\n     * Sets the targeted frame precision that is then passed to the currently bound renderer as well as to any renderers\r\n     * bound in the future. This might be used for frame accumulation in multi-frame based rendering.\r\n     * @param precision - Frame precision, 'float', 'half', 'byte' or 'auto' are supported.\r\n     */\r\n    set framePrecision(precision: Wizard.Precision) {\r\n        this._framePrecision = precision;\r\n\r\n        if (this._renderer) {\r\n            this._renderer.framePrecision = this._framePrecision;\r\n            this._framePrecision = this._renderer.framePrecision; // might change due to missing support\r\n        }\r\n        this.framePrecisionNext();\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to frame precision changes.\r\n     */\r\n    get framePrecision$(): Observable<string> {\r\n        return this._framePrecisionSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides access to the WebGL context (leaky abstraction).\r\n     */\r\n    get context(): Context {\r\n        return this._context;\r\n    }\r\n\r\n    /**\r\n     * Getter for the created rendering backend (webgl context type).\r\n     * @returns - Backend that was created on construction, either 'webgl' or 'webgl2' based on which one was created\r\n     * successfully. If no context could be created null is returned.\r\n     */\r\n    get backend(): string {\r\n        return this._context.backendString as string;\r\n    }\r\n\r\n\r\n    /**\r\n     * Size of the canvas measured in physical/native screen pixels. This is the 'managed' canvas width and height. The\r\n     * unmanaged canvas width and height are available via context.gl.canvas.width and context.gl.canvas.height (which\r\n     * should always be the same).\r\n     * This property can be observed, e.g., `allocationRegister.bytesObservable.subscribe()`.\r\n     * @returns - The canvas width and height in physical/native screen pixels as 2-tuple.\r\n     */\r\n    get size(): GLsizei2 {\r\n        return this._size;\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to canvas size changes.\r\n     */\r\n    get size$(): Observable<GLsizei2> {\r\n        return this._sizeSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Width of the canvas measured in physical/native screen pixels. This is the 'managed' canvas width. The\r\n     * unmanaged canvas width is available via context.gl.canvas_width (which should always be the same).\r\n     * @returns - The canvas width in physical/native screen pixels.\r\n     */\r\n    get width(): GLsizei {\r\n        return this._size[0];\r\n    }\r\n\r\n    /**\r\n     * Height of the canvas measured in physical/native screen pixels. This is the 'managed' canvas height. The\r\n     * unmanaged canvas height is available via context.gl.canvas_height (which should always be the same).\r\n     * @returns - The canvas height in physical/native screen pixels.\r\n     */\r\n    get height(): GLsizei {\r\n        return this._size[1];\r\n    }\r\n\r\n\r\n    /**\r\n     * Canvas element within the HTML5 document.\r\n     */\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n\r\n    /**\r\n     * Canvas mouse event provider referring to the canvas element.\r\n     */\r\n    get mouseEventProvider(): MouseEventProvider {\r\n        return this._mouseEventProvider;\r\n    }\r\n\r\n    /**\r\n     * Canvas touch event provider referring to the canvas element.\r\n     */\r\n    get touchEventProvider(): TouchEventProvider {\r\n        return this._touchEventProvider;\r\n    }\r\n}\r\n","\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { assert, log, logIf, LogLevel, logVerbosity } from './auxiliaries';\r\nimport { clamp } from './gl-matrix-extensions';\r\n\r\n\r\n/**\r\n * This internal interface is not intended for module export and should not be used as generic rendering/controller\r\n * interface. The renderer interface should be used for rendering related tasks instead.\r\n */\r\nexport interface Controllable {\r\n\r\n    /**\r\n     * Used to trigger an renderer update. Returns true iff rendering is invalidated and\r\n     * a new multi-frame should be rendered-\r\n     */\r\n    update(multiFrameNumber: number): boolean;\r\n\r\n    /**\r\n     * Used to prepare rendering of a multi-frame.\r\n     */\r\n    prepare(): void;\r\n\r\n    /**\r\n     * Used to trigger rendering of a single, intermediate frame.\r\n     */\r\n    frame(frameNumber: number): void;\r\n\r\n    /**\r\n     * Used to swap/blit frame from back to front buffer.\r\n     */\r\n    swap(): void;\r\n\r\n}\r\n\r\n\r\n/**\r\n * This class controls the rendering flow by means of triggering rendering of a well defined amount of frames\r\n * (multi-frame number) for frame accumulation. Single frame rendering is handled with a multi-frame number of 1. If a\r\n * full multi-frame is accumulated, rendering halts. The rendering is not intended to be controlled by owning objects,\r\n * but via invalidation from within the renderer instead. However, an explicit redraw of a full single or multi-frame\r\n * can be invoked by calling `update()`. Furthermore, when using multi-frame rendering, the renderer can be halted at a\r\n * specific frame by setting a debug-frame number.\r\n *\r\n * Terminology: a multi-frame is the final result after accumulating a number of intermediate frames (frame). The\r\n * number of intermediate frames is defined by the multi-frame number. For a multi-frame, the controller invokes the\r\n * `prepare` on a controllable first, followed by multiple `frame` and `swap` calls. Please note that the\r\n * adaptive batch mode is yet experimental (can be enabled using `batchSize`).\r\n */\r\n\r\nexport class Controller {\r\n\r\n    /**\r\n     * Toggle for debug outputs; if true control flow will be logged.\r\n     */\r\n    protected static _debug = false;\r\n    set debug(value: boolean) {\r\n        if (value && logVerbosity() < LogLevel.Debug) {\r\n            logVerbosity(LogLevel.Debug);\r\n            log(LogLevel.Debug,\r\n                `changed log verbosity to ${LogLevel.Debug} (debug)`);\r\n        }\r\n        Controller._debug = value;\r\n    }\r\n\r\n    /**\r\n     * Number of intermediate frames that are rendered during one browser frame\r\n     */\r\n    protected _batchSize = 1;\r\n    set batch(size: number) {\r\n        log(LogLevel.Warning, `(adaptive) batch multi-frame rendering is experimental for now`);\r\n        this._batchSize = Math.max(1, size);\r\n    }\r\n\r\n\r\n    /**\r\n     * @see {@link multiFrameNumber}\r\n     * This property can be observed, e.g., `aController.multiFrameNumberObservable.subscribe()`.\r\n     */\r\n    protected _multiFrameNumber = 1;\r\n    protected _multiFrameNumberSubject = new ReplaySubject<number>(1);\r\n\r\n    /**\r\n     * @see {@link debugFrameNumber}\r\n     * This property can be observed, e.g., `aController.debugFrameNumberObservable.subscribe()`.\r\n     */\r\n    protected _debugFrameNumber = 0;\r\n    protected _debugFrameNumberSubject = new ReplaySubject<number>(1);\r\n\r\n    /**\r\n     * @see {@link frameNumber}\r\n     * This property can be observed, e.g., `aController.frameNumberObservable.subscribe()`.\r\n     */\r\n    protected _frameNumber = 0;\r\n    protected _frameNumberSubject = new ReplaySubject<number>(1);\r\n\r\n\r\n    // /** @see {@link multiFrameDelay} */\r\n    // protected _multiFrameDelay = 0;\r\n    // protected _delayedRequestTimeout: number | undefined;\r\n\r\n\r\n    /**\r\n     * Controllable, e.g., an instance of a Renderer.\r\n     */\r\n    protected _controllable: Controllable | undefined;\r\n\r\n\r\n    /**\r\n     * Holds the handle of the pending animate frame request, if requested. Throughout the controller, only a single\r\n     * request at a time is allowed.\r\n     */\r\n    protected _pendingRequest = 0;\r\n\r\n    /**\r\n     * Stores the controller's pause state.\r\n     */\r\n    protected _pause = false;\r\n\r\n    /**\r\n     * Blocking updates can be used to re-configure the controller without triggering\r\n     */\r\n    protected _block = false;\r\n\r\n    /**\r\n     * Number of update requested while being in blocked mode. If there is one or more blocked requests, an update will\r\n     * be triggered when unblocked.\r\n     */\r\n    protected _blockedUpdates = 0;\r\n\r\n\r\n    /* Debug and  reporting facilities. */\r\n\r\n    /**\r\n     * Total number of rendered intermediate frames.\r\n     */\r\n    protected _intermediateFrameCount = 0;\r\n\r\n    /**\r\n     * Total number of completed multi-frames.\r\n     */\r\n    protected _multiFrameCount = 0;\r\n\r\n    /**\r\n     * Time tracker used to the minimum and maximum frame time of an intermediate frame (per multi-frame).\r\n     */\r\n    protected _intermediateFrameTimes = new Array<number>(2);\r\n    /**\r\n     * Time tracker used to accumulate all durations of executed frame and swap callbacks per multi-frame. This is the\r\n     * net rendering time and is used to derive the average frame time.\r\n     */\r\n    protected _multiFrameTime: number;\r\n    /**\r\n     * Time tracker used to capture the time the update callback took.\r\n     */\r\n    protected _updateFrameTime: number;\r\n\r\n    /**\r\n     * Used to measure the gross rendering time of a multi-frame. The first point in time denotes the start of the\r\n     * rendering, the second, the point in time the last frame was rendered.\r\n     *\r\n     * Note: point in times might be shifted due to (un)pausing. Their intent is to allow measuring the rendering\r\n     * duration, nothing else.\r\n     */\r\n    protected _multiTime: Array<number> = [0.0, 0.0];\r\n\r\n    /**\r\n     * Point in time when the pause started. This is used to shift the gross rendering time measurement in _multiTime.\r\n     */\r\n    protected _pauseTime: number | undefined;\r\n\r\n\r\n    /**\r\n     * Triggers a frame invocation before the browser repaints. If no rendering callback is setup, the request\r\n     * is ignored.\r\n     */\r\n    protected request(type?: Controller.RequestType): void {\r\n        /**\r\n         * Prevent unnecessary canceling and requesting of animation frames when updating multiple times before an\r\n         * actual first frame is triggered.\r\n         */\r\n        if (this._pendingRequest !== 0) {\r\n            logIf(Controller._debug, LogLevel.Debug, `c request (ignored) | pending: '${this._pendingRequest}'`);\r\n            return;\r\n        }\r\n        if (this._pause || !this._controllable) {\r\n            logIf(Controller._debug, LogLevel.Debug, `c request (ignored) | pending: '${this._pendingRequest}'`);\r\n            return;\r\n        }\r\n        logIf(Controller._debug, LogLevel.Debug, `c request           | intermediates: #${this._frameNumber}`);\r\n\r\n        const dfnum = this._debugFrameNumber;\r\n        const mfnum = this._multiFrameNumber;\r\n\r\n        assert(dfnum <= mfnum, `debug-frame number exceeds multi-frame number`);\r\n        assert(this._pendingRequest === 0, `another request is pending, cannot invoke multiple requests`);\r\n\r\n        if (dfnum > 0 && this._frameNumber >= dfnum) {\r\n            this.pause();\r\n        }\r\n\r\n        const numRemainingIntermediates = Math.max((dfnum > 0 ? dfnum : mfnum) - this._frameNumber, 0);\r\n\r\n        if (type !== undefined) {\r\n            this._pendingRequest = window.requestAnimationFrame(() => this.invoke(type));\r\n        } else if (numRemainingIntermediates > 0) {\r\n            this._pendingRequest = window.requestAnimationFrame(() => this.invoke(Controller.RequestType.Frame));\r\n        } else if (dfnum === mfnum || dfnum === 0) {\r\n            ++this._multiFrameCount;\r\n        }\r\n    }\r\n\r\n\r\n    // protected requestDelayed(type?: Controller.RequestType): void {\r\n    //     if (this._multiFrameDelay === 0 || this._frameNumber !== 1) {\r\n    //         return this.request(type);\r\n    //     }\r\n\r\n    //     if (this._delayedRequestTimeout !== undefined) {\r\n    //         clearTimeout(this._delayedRequestTimeout);\r\n    //     }\r\n    //     this._delayedRequestTimeout = window.setTimeout(() => this.request(type), this._multiFrameDelay);\r\n    // }\r\n\r\n\r\n    protected reset(): boolean {\r\n        const block = this._block || (this._frameNumber === 0 && this._pendingRequest);\r\n        logIf(Controller._debug, LogLevel.Debug, `c update  ${block ? '(blocked) ' : '          '}| ` +\r\n            `pending: '${this._pendingRequest}', intermediates: #${this._frameNumber}`);\r\n\r\n        if (block) {\r\n            ++this._blockedUpdates;\r\n            return true;\r\n        }\r\n        this.cancel();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Cancel a pending frame invocation (if existing).\r\n     */\r\n    protected cancel(): void {\r\n        if (this._pendingRequest === 0) {\r\n            logIf(Controller._debug, LogLevel.Debug, `c cancel  (ignored) |`);\r\n            return;\r\n        }\r\n        logIf(Controller._debug, LogLevel.Debug, `c cancel            | pending: '${this._pendingRequest}'`);\r\n\r\n        window.cancelAnimationFrame(this._pendingRequest);\r\n        this._pendingRequest = 0;\r\n    }\r\n\r\n    protected invoke(type: Controller.RequestType): void {\r\n        assert(this._pendingRequest !== 0, `manual/explicit invocation not anticipated`);\r\n        assert(this._controllable !== undefined, `expected valid controllable for invocation`);\r\n\r\n        this._pendingRequest = 0;\r\n\r\n        /* tslint:disable-next-line:switch-default */\r\n        switch (type) {\r\n            case Controller.RequestType.Update:\r\n                this.invokeUpdate(false);\r\n                break;\r\n            case Controller.RequestType.NonOptionalUpdate:\r\n                this.invokeUpdate(true);\r\n                break;\r\n            case Controller.RequestType.Prepare:\r\n                this.invokePrepare();\r\n                break;\r\n            case Controller.RequestType.Frame:\r\n                this.invokeFrame();\r\n                break;\r\n        }\r\n    }\r\n\r\n    protected invokeUpdate(force: boolean = false): void {\r\n        logIf(Controller._debug, LogLevel.Debug, `c invoke update     | ` +\r\n            `pending: '${this._pendingRequest}', mfnum: ${this._multiFrameNumber}`);\r\n\r\n        this.unblock();\r\n        assert(!this._pause, `updates should not be invoked when paused`);\r\n\r\n        const redraw: boolean = (this._controllable as Controllable).update(this._multiFrameNumber);\r\n        if (force || redraw) {\r\n            this.invokePrepare();\r\n            return;\r\n        }\r\n        this.invokeFrame();\r\n    }\r\n\r\n    /**\r\n     * Actual invocation of the controllable's prepare method.\r\n     */\r\n    protected invokePrepare(): void {\r\n        logIf(Controller._debug, LogLevel.Debug, `c invoke prepare    |`);\r\n\r\n        this._frameNumber = 0;\r\n\r\n        this._pause = false;\r\n        this._pauseTime = undefined;\r\n\r\n        this._multiFrameTime = 0.0;\r\n        this._intermediateFrameTimes[0] = Number.MAX_VALUE;\r\n        this._intermediateFrameTimes[1] = Number.MIN_VALUE;\r\n\r\n        /* Trigger preparation of a new multi-frame and measure execution time. */\r\n        this._multiTime[0] = performance.now();\r\n        (this._controllable as Controllable).prepare();\r\n        this._multiTime[1] = performance.now();\r\n\r\n        const updateDuration = this._multiTime[1] - this._multiTime[0];\r\n        this._multiFrameTime = updateDuration;\r\n        this._updateFrameTime = updateDuration;\r\n\r\n        this.invokeFrame();\r\n    }\r\n\r\n    /**\r\n     * Invokes rendering of an intermediate frame, increments the frame counter, and requests rendering of the next\r\n     * frame. The rendering is invoked by means of a callback to the canvas renderer. This function implements various\r\n     * asserts to assure correct control logic and absolutely prevent unnecessary frame requests.\r\n     */\r\n    protected invokeFrame(): void {\r\n        assert(!this._pause, `frames should not be invoked when paused`);\r\n        logIf(Controller._debug, LogLevel.Debug, `c invoke frame      | pending: '${this._pendingRequest}'`);\r\n\r\n        const dfnum = this._debugFrameNumber;\r\n        const mfnum = this._multiFrameNumber;\r\n\r\n        if (this._frameNumber === mfnum) {\r\n            return;\r\n        }\r\n\r\n        const debug = dfnum > 0;\r\n        assert(!debug || this._frameNumber < dfnum, `frame number about to exceed debug-frame number`);\r\n\r\n        assert(this._controllable !== undefined, `update invoked without controllable set`);\r\n\r\n\r\n        /* Trigger an intermediate frame and measure and accumulate execution time for average frame time. This should\r\n        be the only place, any renderer frame method is invoked. */\r\n\r\n        const t0 = performance.now();\r\n\r\n        let batchEnd = Math.min(this._multiFrameNumber, this._frameNumber + this._batchSize);\r\n        if (this._debugFrameNumber > 0) {\r\n            batchEnd = Math.min(batchEnd, this._debugFrameNumber);\r\n        }\r\n\r\n        for (; this._frameNumber < batchEnd; ++this._frameNumber) {\r\n            logIf(Controller._debug, LogLevel.Debug, `c -> frame          | frame: ${this._frameNumber}`);\r\n            (this._controllable as Controllable).frame(this._frameNumber);\r\n            ++this._intermediateFrameCount;\r\n        }\r\n        logIf(Controller._debug, LogLevel.Debug, `c -> swap           |`);\r\n\r\n        (this._controllable as Controllable).swap();\r\n        this._multiTime[1] = performance.now();\r\n\r\n        /* Note: critical call sequence; be careful when changing the following lines. */\r\n\r\n        const frameDuration = this._multiTime[1] - t0;\r\n        this._multiFrameTime += frameDuration;\r\n\r\n        /* Keep track of minimum and maximum intermediate frame durations. */\r\n        this._intermediateFrameTimes[0] = Math.min(this._intermediateFrameTimes[0], frameDuration);\r\n        /* Note that the first frame is probably the slowest due to lazy initialization of stages/passes. */\r\n        this._intermediateFrameTimes[1] = Math.max(this._intermediateFrameTimes[1], frameDuration);\r\n\r\n        this.frameNumberNext();\r\n\r\n        this.request();\r\n    }\r\n\r\n\r\n    /**\r\n     * Utility for communicating this._multiFrameNumber changes to its associated subject.\r\n     */\r\n    protected multiFrameNumberNext(): void {\r\n        this._multiFrameNumberSubject.next(this._multiFrameNumber);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._debugFrameNumber changes to its associated subject.\r\n     */\r\n    protected debugFrameNumberNext(): void {\r\n        this._debugFrameNumberSubject.next(this._debugFrameNumber);\r\n    }\r\n\r\n    /**\r\n     * Utility for communicating this._frameNumber changes to its associated subject.\r\n     */\r\n    protected frameNumberNext(): void {\r\n        this._frameNumberSubject.next(this._frameNumber);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets pause state to true which affects subsequent requests. Any pending requests are canceled.\r\n     */\r\n    pause(): void {\r\n        const ignore = this._pause;\r\n        logIf(Controller._debug, LogLevel.Debug, `c pause   ${ignore ? '(ignored)' : ''}`);\r\n\r\n        if (this._pause) {\r\n            return;\r\n        }\r\n        this._pause = true;\r\n        this._pauseTime = performance.now();\r\n\r\n        this.cancel();\r\n    }\r\n\r\n    /**\r\n     * Sets pause state to false which affects subsequent requests. Furthermore, a request is invoked.\r\n     */\r\n    unpause(): void {\r\n        const ignore = !this._pause;\r\n        logIf(Controller._debug, LogLevel.Debug, `c unpause ${ignore ? '(ignored)' : ''}`);\r\n\r\n        if (ignore) {\r\n            return;\r\n        }\r\n        this._pause = false;\r\n\r\n        if (this._pauseTime !== undefined && !isNaN(this._pauseTime)) {\r\n            /* Subtract paused time from multi-frame time. */\r\n            const pauseDelay = performance.now() - this._pauseTime;\r\n            this._multiTime[0] += pauseDelay;\r\n\r\n            /* Note: this is just in case the fps is gathered while a request is pending. */\r\n            this._multiTime[1] += pauseDelay;\r\n        }\r\n        this.request();\r\n    }\r\n\r\n    /**\r\n     * Resets multi-frame rendering by restarting at the first frame. If paused, this unpauses the controller.\r\n     * If updates where blocked using `block`, block updates is disabled.\r\n     */\r\n    update(force: boolean = false): void {\r\n        if (this.reset()) {\r\n            return;\r\n        }\r\n        this.request(force ? Controller.RequestType.NonOptionalUpdate : Controller.RequestType.Update);\r\n    }\r\n\r\n    prepare(): void {\r\n        if (this.reset()) {\r\n            return;\r\n        }\r\n        this.request(Controller.RequestType.Prepare);\r\n    }\r\n\r\n\r\n    /**\r\n     * Block implicit updates, e.g., caused by various setters. This can be used to reconfigure the controller without\r\n     * triggering to multiple intermediate updates. The block updates mode can be exited using `unblock`.\r\n     */\r\n    block(): void {\r\n        logIf(Controller._debug, LogLevel.Debug, `c block   ${this._block ? '(ignored) ' : '          '}|`);\r\n\r\n        if (this._block) {\r\n            return;\r\n        }\r\n        this._block = true;\r\n    }\r\n\r\n    /**\r\n     * Unblock updates. If there was at least one blocked update request, an immediate update is invoked.\r\n     */\r\n    unblock(): void {\r\n        logIf(Controller._debug, LogLevel.Debug, `c unblock ${!this._block ? '(ignored) ' : '          '}` +\r\n            `| blocked: #${this._blockedUpdates}`);\r\n\r\n        if (!this._block) {\r\n            return;\r\n        }\r\n        this._block = false;\r\n        if (this._blockedUpdates > 0) {\r\n            this._blockedUpdates = 0;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns whether or not the control is paused.\r\n     * @returns - True if paused, else false.\r\n     */\r\n    get paused(): boolean {\r\n        return this._pause;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the control is blocking updates.\r\n     * @returns - True if blocked, else false.\r\n     */\r\n    get blocked(): boolean {\r\n        return this._block;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the controllable, for which updates, frames, and swaps are invoked whenever rendering is\r\n     * invalidated and an updated multi-frame is required. Swap is detached from frame since rendering an intermediate\r\n     * frame is usually done offscreen and explicit swap control can be useful.\r\n     * @param controllable - Controllable for update, frame, and swap invocation.\r\n     */\r\n    set controllable(controllable: Controllable | undefined) {\r\n        if (controllable === this._controllable) {\r\n            return;\r\n        }\r\n        this._controllable = controllable;\r\n        this.update();\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the multi-frame number. The number is greater than or equal to zero. Multi-frame number is implemented\r\n     * as a property and allows for change callback.\r\n     * @returns - Multi-frame number.\r\n     */\r\n    get multiFrameNumber(): number {\r\n        return this._multiFrameNumber;\r\n    }\r\n\r\n    /**\r\n     * Changes the multi-frame number. If the provided value equals the current number set, nothing happens. If the\r\n     * provided value is negative, the multi-frame number is set to 1.\r\n     * @param multiFrameNumber - The multi-frame number targeted for rendering.\r\n     */\r\n    set multiFrameNumber(multiFrameNumber: number) {\r\n        const value: number = Math.max(1, isNaN(multiFrameNumber) ? 1 : multiFrameNumber);\r\n        if (value === this._multiFrameNumber) {\r\n            return;\r\n        }\r\n\r\n        this._multiFrameNumber = value;\r\n        this.multiFrameNumberNext();\r\n\r\n        logIf(value !== multiFrameNumber, LogLevel.Debug,\r\n            `multi-frame number adjusted to ${value}, given ${multiFrameNumber}`);\r\n\r\n        if (this.debugFrameNumber > this.multiFrameNumber) {\r\n            this.debugFrameNumber = this.multiFrameNumber;\r\n        } else {\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to multi-frame number changes.\r\n     */\r\n    get multiFrameNumber$(): Observable<number> {\r\n        return this._multiFrameNumberSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the debug-frame number greater than or equal to zero.\r\n     * @returns - Debug-frame number.\r\n     */\r\n    get debugFrameNumber(): number {\r\n        return this._debugFrameNumber;\r\n    }\r\n\r\n    /**\r\n     * Sets the debug.-frame number (debug number) that, if greater than zero, causes the rendering to halt when the\r\n     * current frame number (frame number) equals the debug number. Debugging can be disabled by setting the debug\r\n     * number to zero.\r\n     *\r\n     * If the debug number is greater than the frame number rendering is restarted by means of an update(). If the\r\n     * debug number is less than the frame number the rendering continues and halts accordingly. If the debug number\r\n     * equals the current debug number set, nothing happens. If the debug number is greater than the multi-frame\r\n     * number, it is reduced to the multi-frame number.\r\n     *\r\n     * Note: in contrast to setting the multi-frame number, setting the debug-frame number unpauses the controller.\r\n     *\r\n     * @param debugFrameNumber - Debug-frame number.\r\n     */\r\n    set debugFrameNumber(debugFrameNumber: number) {\r\n        const value: number = clamp(isNaN(debugFrameNumber) ? 0 : debugFrameNumber, 0, this.multiFrameNumber);\r\n        if (value === this._debugFrameNumber) {\r\n            return;\r\n        }\r\n\r\n        this._debugFrameNumber = value;\r\n        this.debugFrameNumberNext();\r\n\r\n        logIf(value !== debugFrameNumber, LogLevel.Debug,\r\n            `debug-frame number adjusted to ${value}, given ${debugFrameNumber}`);\r\n\r\n        if (this._block) {\r\n            return;\r\n        }\r\n\r\n        if (this.debugFrameNumber < this._frameNumber) {\r\n            this.prepare();\r\n        } else if (!this._pendingRequest) {\r\n            this.unpause();\r\n            this.request();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to debug-frame number changes.\r\n     */\r\n    get debugFrameNumber$(): Observable<number> {\r\n        return this._debugFrameNumberSubject.asObservable();\r\n    }\r\n\r\n\r\n    // /**\r\n    //  * Sets the multi-frame delay in milliseconds. This is used to delay rendering of subsequent intermediate frames\r\n    //  * after an update.\r\n    //  * @param multiFrameDelay - A multi-frame delay in milliseconds.\r\n    //  */\r\n\r\n    // set multiFrameDelay(multiFrameDelay: number) {\r\n    //     const value: number = Math.max(0, multiFrameDelay);\r\n    //     if (value === this._multiFrameDelay) {\r\n    //         return;\r\n    //     }\r\n    //     this._multiFrameDelay = value;\r\n    // }\r\n\r\n    // /**\r\n    //  * Time in milliseconds used to delay rendering of subsequent intermediate frames after an update.\r\n    //  * @returns - The current multi-frame delay in milliseconds.\r\n    //  */\r\n    // get multiFrameDelay(): number {\r\n    //     return this._multiFrameDelay;\r\n    // }\r\n\r\n\r\n    /**\r\n     * The current multi-frame number; it is less than or equal to the multi-frame number and enumerates the last\r\n     * rendered frame. Note that this does not denote the number of 'completed' multi-frames rendered (not a continuous\r\n     * frame count).\r\n     * @returns - The current (intermediate) frame number.\r\n     */\r\n    get frameNumber(): number {\r\n        return this._frameNumber;\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to frame number changes.\r\n     */\r\n    get frameNumber$(): Observable<number> {\r\n        return this._frameNumberSubject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the total number of rendered (requested and probably completed) intermediate frames.\r\n     * @returns - The total number of intermediate frames rendered.\r\n     */\r\n    get intermediateFrameCount(): number {\r\n        return this._intermediateFrameCount;\r\n    }\r\n\r\n    /**\r\n     * Returns the total number of completed multi-frames.\r\n     * @returns - The total number of multi-frames completed.\r\n     */\r\n    get multiFrameCount(): number {\r\n        return this._multiFrameCount;\r\n    }\r\n\r\n    /**\r\n     * Provides the average time it takes to render an intermediate frame within the current displayed multi-frame (if\r\n     * a new multi-frame is triggered, the average frame time is reset).\r\n     * @returns - Average frame time (intermediate frame rendering) in ms\r\n     */\r\n    get averageFrameTime(): number {\r\n        return this._frameNumber === 0 ? 0.0 : this._multiFrameTime / this._frameNumber;\r\n    }\r\n\r\n    /**\r\n     * Provides the update time tracked for the current multi-frame.\r\n     * @returns - Time of the multi-frame update (before first intermediate frame is rendered) in ms\r\n     */\r\n    get updateFrameTime(): number {\r\n        return this._updateFrameTime;\r\n    }\r\n\r\n    /**\r\n     * Provides the minimum rendering time tracked over all intermediate frames of the current multi-frame.\r\n     * @returns - Minimum intermediate frame time in ms\r\n     */\r\n    get minimumFrameTime(): number {\r\n        return this._intermediateFrameTimes[0];\r\n    }\r\n\r\n    /**\r\n     * Provides the maximum rendering time tracked over all intermediate frames of the current multi-frame. Note that\r\n     * the maximum frame time is most often caused by the first intermediate frame within a multi-frame due to lazy\r\n     * stage initialization or reconfiguration.\r\n     * @returns - Maximum intermediate frame time in ms\r\n     */\r\n    get maximumFrameTime(): number {\r\n        return this._intermediateFrameTimes[1];\r\n    }\r\n\r\n    /**\r\n     * The time in milliseconds that passed since the current multi-frame (up to the current frame number) was\r\n     * requested. This time excludes time spent paused (e.g., caused by halting rendering at debug-frame number).\r\n     * Note that this is not a measure of frame rendering performance. The number of frame requests per second might be\r\n     * limited to 60Hz even though the rendering of an intermediate frame takes only a few milliseconds.\r\n     * @returns - Time passed for current multi-frame in milliseconds.\r\n     */\r\n    get multiFrameTime(): number {\r\n        return this._frameNumber === 0 ? 0.0 : this._multiTime[1] - this._multiTime[0];\r\n    }\r\n    /**\r\n     * The frames per second is based on the average number of a full intermediate frame request up to the current\r\n     * frame number.\r\n     * @returns - Number of frames per second based on the current multi-frame\r\n     */\r\n    get framesPerSecond(): number {\r\n        return this._frameNumber === 0 ? 0.0 : 1000.0 / (this.multiFrameTime / this._frameNumber);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace Controller {\r\n\r\n    export enum RequestType { Update, NonOptionalUpdate, Prepare, Frame }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n\r\n/**\r\n * Wrapper for drawable objects by means of multiple vertex buffer that could be bound to a vertex array. If the\r\n * context supports vertex array objects either natively (webgl2) or by extension, the drawable buffer are bound\r\n * only once on initialization and only a single VAO bind and unbind is required for a rendering pass.\r\n *\r\n * The VertexArray can be used wrapped around any VertexBuffer interface:\r\n * ```\r\n * export class ScreenFillingTriangle extends VertexArray {\r\n * // ...\r\n *     bind(index: GLuint): void { ...  }\r\n *     unbind(index: GLuint): void { ... }\r\n *     draw(): void { ... }\r\n * }\r\n *\r\n * export class ScreenFillingTriangleVAO extends VertexArray<ScreenFillingTriangle> { }\r\n * ```\r\n *\r\n * With that the screen-filling triangle can be drawn as follows:\r\n * ```\r\n * this.someTriangleVAO.draw();\r\n * ```\r\n */\r\nexport class VertexArray extends AbstractObject<any> implements Bindable {\r\n\r\n    /**\r\n     * Default vertex array, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_VERTEX_ARRAY = undefined;\r\n\r\n\r\n    /**\r\n     * Flag to track one-time initialization (in case vertex arrays are supported).\r\n     */\r\n    protected _buffersBound = false;\r\n\r\n    /**\r\n     * The feature specific bind function. This is mapped on initialization either to native VAO bind, extension based\r\n     * VAO bind or directly to the drawable's bind.\r\n     */\r\n    protected _bind: () => void;\r\n    /**\r\n     * The feature specific unbind function. This is mapped on initialization either to native VAO unbind, extension\r\n     * based VAO unbind or directly to the drawable's unbind.\r\n     */\r\n    protected _unbind: () => void;\r\n\r\n\r\n    /**\r\n     * Depending on the context features, a vertex array object is created and the bind method is specified (either\r\n     * native, by extension, or none/direct bind).\r\n     * @param bindBOs - Function that should bind all VBOs and IBOs required for drawing.\r\n     * @param unbindBOs - Function that should unbind all VBOs and IBOs used for drawing.\r\n     */\r\n    protected create(bindBOs: () => void, unbindBOs: () => void): any /* WebGLVertexArrayObject */ | undefined {\r\n\r\n        if (this.context.isWebGL2 || this.context.supportsVertexArrayObject) {\r\n            const gl2facade = this.context.gl2facade;\r\n\r\n            this._object = gl2facade.createVertexArray();\r\n            /* note that gl.isVertexArray requires the vertex array to be bound */\r\n            this._valid = this._object !== undefined;\r\n\r\n            this._bind = () => {\r\n                gl2facade.bindVertexArray(this.object);\r\n                if (this._buffersBound) {\r\n                    return;\r\n                }\r\n                bindBOs();\r\n                this._buffersBound = true;\r\n            };\r\n            this._unbind = () => gl2facade.bindVertexArray(VertexArray.DEFAULT_VERTEX_ARRAY);\r\n\r\n        } else {\r\n            this._bind = () => bindBOs();\r\n            this._unbind = () => unbindBOs();\r\n            this._valid = true;\r\n        }\r\n\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * On deletion either the VAO is deleted (when VAOs are supported natively or by extension) or nothing happens. Note\r\n     * that the VAO does not own any of its associated buffers (which can be shared over multiple VAO instances or\r\n     * used directly).\r\n     */\r\n    protected delete(): void {\r\n        if (!this.context.isWebGL2 && !this.context.supportsVertexArrayObject) {\r\n            this._valid = false;\r\n            return;\r\n        }\r\n\r\n        assert(this._object !== undefined, `expected WebGLVertexArrayObject object`);\r\n        this._context.gl2facade.deleteVertexArray(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._buffersBound = false;\r\n    }\r\n\r\n    /**\r\n     * Invokes the preset bind function.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(): void {\r\n        this._bind();\r\n    }\r\n\r\n    /**\r\n     * Invokes the preset unbind function.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(): void {\r\n        this._unbind();\r\n    }\r\n\r\n    /**\r\n     * Can be used to enforce rebinding all buffers, e.g., when data has changed.\r\n     */\r\n    invalidate(): void {\r\n        this._buffersBound = false;\r\n    }\r\n\r\n}\r\n","\r\nimport { mat4, vec3 } from 'gl-matrix';\r\nimport { m4 } from './gl-matrix-extensions';\r\n\r\nimport { DEG2RAD, log, LogLevel } from './auxiliaries';\r\nimport { GLsizei2 } from './tuples';\r\n\r\n\r\n/**\r\n * Virtual 3D camera specified by eye, center, up, fovy, near, far, and a viewport size. It provides access to cached\r\n * view, projection, and view projection matrices. Cached by means of whenever one of the attributes change, all\r\n * matrices are invalidated and recalculated only once and only when requested. Please note that eye denotes the\r\n * position in a virtual 3D scene and center denotes the position which is being looked at.\r\n */\r\nexport class Camera {\r\n\r\n    private static readonly DEFAULT_EYE: vec3 = vec3.fromValues(0.0, 0.0, 1.0);\r\n    private static readonly DEFAULT_CENTER: vec3 = vec3.fromValues(0.0, 0.0, 0.0);\r\n    private static readonly DEFAULT_UP: vec3 = vec3.fromValues(0.0, 1.0, 0.0);\r\n\r\n    private static readonly DEFAULT_FOVY = 45.0;\r\n\r\n    private static readonly DEFAULT_NEAR = 2.0;\r\n    private static readonly DEFAULT_FAR = 8.0;\r\n\r\n\r\n    /** @see {@link eye} */\r\n    protected _eye: vec3;\r\n\r\n    /** @see {@link center} */\r\n    protected _center: vec3;\r\n\r\n    /** @see {@link up} */\r\n    protected _up: vec3;\r\n\r\n    /** @see {@link fovy} */\r\n    protected _fovy = Camera.DEFAULT_FOVY;\r\n\r\n    /** @see {@link near} */\r\n    protected _near = Camera.DEFAULT_NEAR;\r\n\r\n    /** @see {@link far} */\r\n    protected _far = Camera.DEFAULT_FAR;\r\n\r\n    /** @see {@link viewport} */\r\n    protected _viewport: GLsizei2 = [1, 1];\r\n\r\n    /** @see {@link aspect} */\r\n    protected _aspect: GLfloat = 1.0;\r\n\r\n    /** @see {@link view} */\r\n    protected _view: mat4 | undefined;\r\n    /** @see {@link viewInverse} */\r\n    protected _viewInverse: mat4 | undefined | null;\r\n\r\n    /** @see {@link projection} */\r\n    protected _projection: mat4 | undefined;\r\n    /** @see {@link projectionInverse} */\r\n    protected _projectionInverse: mat4 | undefined | null;\r\n\r\n    /** @see {@link viewProjection} */\r\n    protected _viewProjection: mat4 | undefined;\r\n    /** @see {@link viewProjectionInverse} */\r\n    protected _viewProjectionInverse: mat4 | undefined | null;\r\n\r\n    /** @see {@link altered} */\r\n    protected _altered = false;\r\n\r\n\r\n    /**\r\n     * Computes a vertical field of view angle based on the display height and distance to eye. Since both parameters\r\n     * are highly dependent of the device, this function can only be used to derive a rough estimate for a reasonable\r\n     * field of view. Note that both parameters should be passed using the same unit, e.g., inch or centimeters.\r\n     * @param elementDisplayHeight - Height of an element on the display.\r\n     * @param eyeToDisplayDistance - Distance from the users eye to that element.\r\n     * @returns - Vertical field of view angle in radian.\r\n     */\r\n    static calculateFovY(elementDisplayHeight: number, eyeToDisplayDistance: number): number {\r\n        return Math.atan(elementDisplayHeight * 0.5 / eyeToDisplayDistance) * 2.0;\r\n    }\r\n\r\n    /**\r\n     * Constructor setting up the camera's eye, center and up vectors.\r\n     * @param eye - The viewpoint of the virtual camera\r\n     * @param center - The look-at point in the scene\r\n     * @param up - The up-vector of the virtual camera\r\n     */\r\n    constructor(eye?: vec3, center?: vec3, up?: vec3) {\r\n        this._eye = eye ? vec3.clone(eye) : vec3.clone(Camera.DEFAULT_EYE);\r\n        this._center = center ? vec3.clone(center) : vec3.clone(Camera.DEFAULT_CENTER);\r\n        this._up = up ? vec3.clone(up) : vec3.clone(Camera.DEFAULT_UP);\r\n    }\r\n\r\n\r\n    /**\r\n     * Invalidates derived matrices, i.e., view, projection, and view-projection. The view should be invalidated on\r\n     * eye, center, and up changes. The projection should be invalidated on fovy, viewport, near, and far changes.\r\n     * The view projection invalidates whenever either one or both view and projection are to be invalidated.\r\n     */\r\n    protected invalidate(invalidateView: boolean, invalidateProjection: boolean): void {\r\n        if (invalidateView) {\r\n            this._view = undefined;\r\n            this._viewInverse = undefined;\r\n        }\r\n        if (invalidateProjection) {\r\n            this._projection = undefined;\r\n            this._projectionInverse = undefined;\r\n        }\r\n        if (invalidateView || invalidateProjection) {\r\n            this._viewProjection = undefined;\r\n            this._viewProjectionInverse = undefined;\r\n        }\r\n        this._altered = true;\r\n    }\r\n\r\n    /**\r\n     * Position of the virtual camera in a virtual 3D scene, the point of view.\r\n     */\r\n    get eye(): vec3 {\r\n        return this._eye;\r\n    }\r\n\r\n    /**\r\n     * Sets the eye. Invalidates the view.\r\n     */\r\n    set eye(eye: vec3) {\r\n        if (vec3.equals(this._eye, eye)) {\r\n            return;\r\n        }\r\n        this._eye = vec3.clone(eye);\r\n        this.invalidate(true, false);\r\n    }\r\n\r\n    /**\r\n     * Look-at point into a virtual 3D scene.\r\n     */\r\n    get center(): vec3 {\r\n        return this._center;\r\n    }\r\n\r\n    /**\r\n     * Sets the center. Invalidates the view.\r\n     */\r\n    set center(center: vec3) {\r\n        if (vec3.equals(this._center, center)) {\r\n            return;\r\n        }\r\n        this._center = vec3.clone(center);\r\n        this.invalidate(true, false);\r\n    }\r\n\r\n    /**\r\n     * Up-vector of the virtual camera.\r\n     */\r\n    get up(): vec3 {\r\n        return this._up;\r\n    }\r\n\r\n    /**\r\n     * Sets the up vector. Invalidates the view.\r\n     */\r\n    set up(up: vec3) {\r\n        if (vec3.equals(this._up, up)) {\r\n            return;\r\n        }\r\n        this._up = vec3.clone(up);\r\n        this.invalidate(true, false);\r\n    }\r\n\r\n    /**\r\n     * Vertical field of view in degree.\r\n     */\r\n    get fovy(): GLfloat {\r\n        return this._fovy;\r\n    }\r\n\r\n    /**\r\n     * Sets the vertical field-of-view. Invalidates the projection.\r\n     */\r\n    set fovy(fovy: GLfloat) {\r\n        if (this._fovy === fovy) {\r\n            return;\r\n        }\r\n        this._fovy = fovy;\r\n        this.invalidate(false, true);\r\n    }\r\n\r\n    /**\r\n     * Distance of near-plane in view coordinates.\r\n     */\r\n    get near(): GLfloat {\r\n        return this._near;\r\n    }\r\n\r\n    /**\r\n     * Sets the distance to the near clipping plane. Invalidates the projection.\r\n     */\r\n    set near(near: GLfloat) {\r\n        if (this._near === near) {\r\n            return;\r\n        }\r\n        if (this._near >= this._far) {\r\n            log(LogLevel.Warning, `near expected to be smaller than far (${this._far}), given ${near}`);\r\n            return;\r\n        }\r\n        this._near = near;\r\n        this.invalidate(false, true);\r\n    }\r\n\r\n    /**\r\n     * Distance of far-plane in view coordinates.\r\n     */\r\n    get far(): GLfloat {\r\n        return this._far;\r\n    }\r\n\r\n    /**\r\n     * Sets the distance to the far clipping plane. Invalidates the projection.\r\n     */\r\n    set far(far: GLfloat) {\r\n        if (this._far === far) {\r\n            return;\r\n        }\r\n        if (this._near >= this._far) {\r\n            log(LogLevel.Warning, `far expected to be greater than near (${this._near}), given ${far}`);\r\n            return;\r\n        }\r\n        this._far = far;\r\n        this.invalidate(false, true);\r\n    }\r\n\r\n    /**\r\n     * Sets the viewport size. Invalidates the projection.\r\n     */\r\n    set viewport(size: GLsizei2) {\r\n        if (this._viewport[0] === size[0] && this._viewport[1] === size[1]) {\r\n            return;\r\n        }\r\n        this._viewport = size;\r\n        this.invalidate(false, true);\r\n    }\r\n\r\n    /**\r\n     * The size of the target viewport used to determine the aspect ratio for subsequent perspective matrix projection\r\n     * computation.\r\n     */\r\n    get viewport(): GLsizei2 {\r\n        return this._viewport;\r\n    }\r\n\r\n    /**\r\n     * Access to the viewport width.\r\n     */\r\n    get width(): GLsizei {\r\n        return this._viewport[0];\r\n    }\r\n\r\n    /**\r\n     * Access to the viewport height.\r\n     */\r\n    get height(): GLsizei {\r\n        return this._viewport[1];\r\n    }\r\n\r\n    /**\r\n     * Sets the aspect ratio (width over height). However, this is not derived from viewport to allow for\r\n     * differentiation between viewport size and scale.\r\n     */\r\n    set aspect(aspect: GLfloat) {\r\n        if (this._aspect === aspect) {\r\n            return;\r\n        }\r\n        this._aspect = aspect;\r\n    }\r\n\r\n    /**\r\n     * Computes the ratio of width over height (set explicitly for differentiation between viewport size and scale).\r\n     */\r\n    get aspect(): GLfloat {\r\n        return this._aspect;\r\n    }\r\n\r\n    /**\r\n     * Either returns the cached view matrix or derives the current one after invalidation and caches it.\r\n     */\r\n    get view(): mat4 {\r\n        if (this._view) { // return cached value\r\n            return this._view;\r\n        }\r\n        this._view = mat4.lookAt(m4(), this._eye, this._center, this._up);\r\n        return this._view;\r\n    }\r\n\r\n    /**\r\n     * Either returns the inverse cached view matrix or derives the current one after invalidation and caches it.\r\n     */\r\n    get viewInverse(): mat4 | null {\r\n        if (this._viewInverse !== undefined) { // return cached value\r\n            return this._viewInverse;\r\n        }\r\n        this._viewInverse = mat4.invert(m4(), this.view);\r\n        return this._viewInverse;\r\n    }\r\n\r\n    /**\r\n     * Either returns the cached projection matrix or derives the current one after invalidation and caches it.\r\n     */\r\n    get projection(): mat4 {\r\n        if (this._projection) { // return cached value\r\n            return this._projection;\r\n        }\r\n        this._projection = mat4.perspective(m4(), this.fovy * DEG2RAD, this.aspect, this.near, this.far);\r\n        return this._projection;\r\n    }\r\n\r\n    /**\r\n     * Either returns the cached inverse projection matrix or derives the current one after invalidation and caches it.\r\n     */\r\n    get projectionInverse(): mat4 | null {\r\n        if (this._projectionInverse !== undefined) { // return cached value\r\n            return this._projectionInverse;\r\n        }\r\n        this._projectionInverse = mat4.invert(m4(), this.projection);\r\n        return this._projectionInverse;\r\n    }\r\n\r\n    /**\r\n     * Returns the view projection matrix based on view and projection. This is also cached (since matrix\r\n     * multiplication is involved).\r\n     */\r\n    get viewProjection(): mat4 {\r\n        if (this._viewProjection) { // return cached value\r\n            return this._viewProjection;\r\n        }\r\n        this._viewProjection = mat4.multiply(m4(), this.projection, this.view);\r\n        return this._viewProjection;\r\n    }\r\n\r\n    /**\r\n     * Returns the inverse view projection matrix based on view and projection. This is also cached (since matrix\r\n     * multiplication is involved).\r\n     */\r\n    get viewProjectionInverse(): mat4 | null {\r\n        if (this._viewProjectionInverse !== undefined) { // return cached value\r\n            return this._viewProjectionInverse;\r\n        }\r\n        this._viewProjectionInverse = mat4.invert(m4(), this.viewProjection);\r\n        return this._viewProjectionInverse;\r\n    }\r\n\r\n    /**\r\n     * Whether or not any other public property has changed. Please note that the alteration status is detached from\r\n     * caching state of lazily computed properties.\r\n     */\r\n    get altered(): boolean {\r\n        return this._altered;\r\n    }\r\n\r\n    /**\r\n     * Intended for resetting alteration status.\r\n     */\r\n    set altered(status: boolean) {\r\n        this._altered = status;\r\n    }\r\n\r\n}\r\n","\r\nimport { mat4, vec2, vec3 } from 'gl-matrix';\r\n\r\nimport { m4, v3 } from './gl-matrix-extensions';\r\n\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n\r\n/**\r\n * Math for camera modification based on the first person metaphor.\r\n */\r\nexport class FirstPersonModifier extends CameraModifier {\r\n\r\n    protected static readonly DEFAULT_SENSITIVITY = 0.0008;\r\n\r\n\r\n    /**\r\n     * Current rotation matrix.\r\n     */\r\n    protected _rotation: mat4 = mat4.create();\r\n\r\n    /** @see {@link sensitivity} */\r\n    protected _sensitivity: number = FirstPersonModifier.DEFAULT_SENSITIVITY;\r\n\r\n\r\n    /**\r\n     * Initiate a new camera modification at a specific event position.\r\n     * @param point - Position of the current event to start the modification at.\r\n     */\r\n    initiate(point: vec2): void {\r\n        Object.assign(this._reference, this._camera);\r\n\r\n        /* Retrieve initial event position. */\r\n        this._initialPoint = point;\r\n    }\r\n\r\n    /**\r\n     * Update the ... .r.t. a specific event position.\r\n     * @param point - Position of the current event used to update the yaw and pitch.\r\n     */\r\n    process(point: vec2, movement?: vec2): void {\r\n        /* Current event position is always the same as initial, when pointer lock is active. */\r\n        this._currentPoint = point;\r\n\r\n        const magnitudes = vec2.create();\r\n        if (movement === undefined) {\r\n            vec2.subtract(magnitudes, this._initialPoint, this._currentPoint);\r\n        } else {\r\n            vec2.copy(magnitudes, movement);\r\n        }\r\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\r\n\r\n        /* Difference between two subsequent events, thus, initial position is reset. */\r\n        vec2.copy(this._initialPoint, this._currentPoint);\r\n\r\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\r\n        vec3.normalize(centerToEye, centerToEye);\r\n        const strafe = vec3.cross(v3(), centerToEye, this._reference.up);\r\n\r\n        const yaw = mat4.fromRotation(m4(), -magnitudes[0], this._reference.up);\r\n        const pitch = mat4.fromRotation(m4(), magnitudes[1], strafe);\r\n\r\n        mat4.mul(this._rotation, pitch, yaw);\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Actually applies the trackball rotation to the given camera.\r\n     */\r\n    update(): void {\r\n        if (this._camera === undefined) {\r\n            return;\r\n        }\r\n\r\n        const T = mat4.fromTranslation(m4(), this._reference.eye);\r\n        mat4.multiply(T, T, this._rotation);\r\n        mat4.translate(T, T, vec3.negate(v3(), this._reference.eye));\r\n\r\n        // const up = vec3.transformMat4(v3(), [0.0, 1.0, 0.0], this._rotation);\r\n        // const eye = vec3.transformMat4(v3(), this._reference.eye, T);\r\n        const center = vec3.transformMat4(v3(), this._reference.center, T);\r\n\r\n\r\n        // this._camera.up = up;\r\n        // this._camera.eye = eye;\r\n        this._camera.center = center;\r\n\r\n        Object.assign(this._reference, this._camera);\r\n    }\r\n\r\n\r\n    /**\r\n     * Rotational sensitivity.\r\n     */\r\n    set sensitivity(sensitivity: number) {\r\n        this._sensitivity = sensitivity;\r\n    }\r\n\r\n    get sensitivity(): number {\r\n        return this._sensitivity;\r\n    }\r\n\r\n}\r\n","\r\nimport { mat4, quat, vec2, vec3 } from 'gl-matrix';\r\n\r\nimport { m4, v2, v3 } from './gl-matrix-extensions';\r\n\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n\r\n/**\r\n * Math for camera rotation based on the trackball metaphor. The rotation computed by an initial (@see startRotate) and\r\n * subsequent (@see updateRotate) event points and can be applied to a camera via an explicit update (@see update).\r\n */\r\nexport class TrackballModifier extends CameraModifier {\r\n\r\n    protected static readonly DEFAULT_SENSITIVITY = 0.002;\r\n\r\n\r\n    /**\r\n     * Current rotation matrix.\r\n     */\r\n    protected _rotation: mat4 = mat4.create();\r\n\r\n    /** @see {@link sensitivity} */\r\n    protected _sensitivity: number = TrackballModifier.DEFAULT_SENSITIVITY;\r\n\r\n\r\n    /**\r\n     * Initiate a new trackball rotation at a specific event position.\r\n     * @param point - Position of the current event to start the trackball rotation at.\r\n     */\r\n    initiate(point: vec2): void {\r\n        /* Retrieve initial event position. */\r\n        this._initialPoint = point;\r\n    }\r\n\r\n    /**\r\n     * Update the trackball rotation w.r.t. a specific event position.\r\n     * @param point - Position of the current event to continue/update the trackball rotation at.\r\n     */\r\n    process(point: vec2): void {\r\n        /* Retrieve current event positions. */\r\n        this._currentPoint = point;\r\n\r\n        const magnitudes = vec2.subtract(v2(), this._initialPoint, this._currentPoint);\r\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\r\n\r\n        /* Rotation uses difference between two events, thus, initial position is reset. */\r\n        vec2.copy(this._initialPoint, this._currentPoint);\r\n\r\n        /* Create rotation with respect to arbitrary camera center and up vector. */\r\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\r\n        vec3.normalize(centerToEye, centerToEye);\r\n        const up = vec3.normalize(v3(), this._reference.up);\r\n\r\n        /* Create vertical rotation axis. */\r\n        const ortho = vec3.cross(v3(), centerToEye, up);\r\n        vec3.scale(up, up, magnitudes[1]);\r\n        vec3.scale(ortho, ortho, magnitudes[0]);\r\n\r\n        /* Create overall rotation axis for quaternion based rotation. */\r\n        const axis = vec3.cross(v3(), vec3.add(v3(), up, ortho), centerToEye);\r\n        vec3.normalize(axis, axis);\r\n\r\n        /* Create quaternion and modify rotation transformation. */\r\n        const q = quat.setAxisAngle(quat.create(), axis, vec2.len(magnitudes));\r\n        mat4.multiply(this._rotation, this._rotation, mat4.fromQuat(m4(), q));\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Actually applies the trackball rotation to the given camera.\r\n     */\r\n    update(): void {\r\n        if (this._camera === undefined) {\r\n            return;\r\n        }\r\n\r\n        /* Adjust for arbitrary camera center and rotate using quaternion based rotation. */\r\n        const T = mat4.fromTranslation(m4(), this._reference.center);\r\n        mat4.multiply(T, T, this._rotation);\r\n        mat4.translate(T, T, vec3.negate(v3(), this._reference.center));\r\n\r\n        const up = vec3.transformMat4(v3(), [0.0, 1.0, 0.0], this._rotation);\r\n        const eye = vec3.transformMat4(v3(), this._reference.eye, T);\r\n\r\n        this._camera.up = up;\r\n        this._camera.eye = eye;\r\n    }\r\n\r\n\r\n    /**\r\n     * Rotational sensitivity.\r\n     */\r\n    set sensitivity(sensitivity: number) {\r\n        this._sensitivity = sensitivity;\r\n    }\r\n\r\n    get sensitivity(): number {\r\n        return this._sensitivity;\r\n    }\r\n\r\n}\r\n","\r\nimport { mat4, vec2, vec3 } from 'gl-matrix';\r\n\r\nimport { m4, v2, v3 } from './gl-matrix-extensions';\r\n\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n\r\n/**\r\n * Math for camera rotation based on the turntable metaphor. The rotation computed by an initial (@see startRotate) and\r\n * subsequent (@see updateRotate) event points and can be applied to a camera via an explicit update (@see update).\r\n * In contrast to the trackball, this metaphor is usually less confusing for non-professionals.\r\n */\r\nexport class TurntableModifier extends CameraModifier {\r\n\r\n    protected static readonly DEFAULT_SENSITIVITY = 0.002;\r\n\r\n\r\n    /**\r\n     * Current rotation matrix.\r\n     */\r\n    protected _rotation: mat4 = m4();\r\n\r\n    protected _maxAzimuth: number | undefined = +Math.PI * 0.5 - 1e-4;\r\n    protected _minAzimuth: number | undefined = -Math.PI * 0.5 + 1e-4;\r\n\r\n    protected _xAxisScreenSpace = v3();\r\n    protected _azimuth: number;\r\n\r\n\r\n    /** @see {@link sensitivity} */\r\n    protected _sensitivity: number = TurntableModifier.DEFAULT_SENSITIVITY;\r\n\r\n\r\n    /**\r\n     * Initiate a new turntable rotation at a specific event position.\r\n     * @param point - Position of the current event to derive the magnitude for rotation from.\r\n     */\r\n    initiate(point: vec2): void {\r\n        Object.assign(this._reference, this._camera);\r\n\r\n        /* Retrieve initial event position. */\r\n        this._initialPoint = point;\r\n\r\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\r\n        vec3.normalize(centerToEye, centerToEye);\r\n\r\n        this._xAxisScreenSpace = vec3.cross(v3(), [0.0, 1.0, 0.0], centerToEye);\r\n        this._azimuth = Math.acos(vec3.dot(centerToEye, [0.0, 1.0, 0.0]));\r\n        this._azimuth = Math.PI * 0.5 - this._azimuth;\r\n    }\r\n\r\n    /**\r\n     * Update the turntable rotation w.r.t. a specific event position.\r\n     * @param point - Position of the current event to derive the magnitude for rotation from.\r\n     */\r\n    process(point: vec2): void {\r\n        /* Retrieve current event positions. */\r\n        this._currentPoint = point;\r\n\r\n        const magnitudes = vec2.subtract(v2(), this._initialPoint, this._currentPoint);\r\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\r\n\r\n        if (this._minAzimuth) {\r\n            magnitudes[1] = Math.min(this._azimuth - this._minAzimuth, magnitudes[1]);\r\n        }\r\n        if (this._maxAzimuth) {\r\n            magnitudes[1] = Math.max(this._azimuth - this._maxAzimuth, magnitudes[1]);\r\n        }\r\n\r\n        mat4.rotateY(this._rotation, m4(), magnitudes[0]);\r\n        mat4.rotate(this._rotation, this._rotation, magnitudes[1], this._xAxisScreenSpace);\r\n\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Actually applies the trackball rotation to the given camera.\r\n     */\r\n    update(): void {\r\n        if (this._camera === undefined) {\r\n            return;\r\n        }\r\n\r\n        /* Adjust for arbitrary camera center and rotate using quaternion based rotation. */\r\n        const T = mat4.fromTranslation(m4(), this._reference.center);\r\n        mat4.multiply(T, T, this._rotation);\r\n        mat4.translate(T, T, vec3.negate(v3(), this._reference.center));\r\n\r\n        const up = vec3.transformMat4(v3(), [0.0, 1.0, 0.0], this._rotation);\r\n        const eye = vec3.transformMat4(v3(), this._reference.eye, T);\r\n\r\n        this._camera.up = up;\r\n        this._camera.eye = eye;\r\n    }\r\n\r\n\r\n    /**\r\n     * Rotational sensitivity.\r\n     */\r\n    set sensitivity(sensitivity: number) {\r\n        this._sensitivity = sensitivity;\r\n    }\r\n\r\n    get sensitivity(): number {\r\n        return this._sensitivity;\r\n    }\r\n\r\n}\r\n","\r\n\r\nimport { assert, rand } from './auxiliaries';\r\nimport { KernelF32 } from './kernel';\r\n\r\n\r\n/**\r\n * Kernel providing random values in [-1,+1] for two components. The first sample is fixed at [0.0, 0.0] since the\r\n * kernel is intended for use of NDC offsets.\r\n *\r\n * Example for using this kernel:\r\n * ```\r\n * this._aaKernel.size = multiFrameNumber; // regenerates when multi-frame number changes\r\n * let ndcOffset = this._aaKernel.value(frameNumber);\r\n * ndcOffset[0] = ndcOffset[0] / this._intermediateFBO.width;\r\n * ndcOffset[1] = ndcOffset[1] / this._intermediateFBO.height;\r\n * ```\r\n */\r\nexport class RandomSquareKernel extends KernelF32 {\r\n\r\n    /**\r\n     * RandomSquareKernel is fixed to one-dimension (x-axis) and 2-components per sample.\r\n     * @param width - Width of the kernel along its x-axis.\r\n     */\r\n    constructor(width: GLsizei) {\r\n        super(2, width);\r\n        this.generate();\r\n    }\r\n\r\n    /**\r\n     * Generates for each sample random components in [-1.0, +1.0] except for the first.\r\n     */\r\n    protected generate(): void {\r\n        assert(this.width > 0, `expected every kernel to comprise at least one element`);\r\n        this.set([0.0, 0.0], 0);\r\n        for (let i = 1; i < this.width; ++i) {\r\n            this.set([rand(-0.5, +0.5), rand(-0.5, +0.5)], i);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Seems to only work if the getter of this kernels width setter is redefined here.\r\n     */\r\n    get width(): GLsizei {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * Changes the size of the kernel and triggers regeneration of all values.\r\n     */\r\n    set width(width: GLsizei) {\r\n        if (this._width === width) {\r\n            return;\r\n        }\r\n        this._width = width;\r\n        this.resize();\r\n        this.generate();\r\n    }\r\n\r\n}\r\n","import { RenderView } from './renderview';\r\nimport { XRFrame, XRFrameOfReference, XRInputPose, XRInputSource } from './webxr';\r\n\r\ninterface XRInputData {\r\n    source: XRInputSource;\r\n    /** When tracking is lost, the pose might be `null` */\r\n    pose: XRInputPose | null;\r\n}\r\n\r\n/**\r\n */\r\nexport class FrameData {\r\n    private _time: number;\r\n    private _frame: XRFrame;\r\n    private _frameOfReference: XRFrameOfReference;\r\n    private _renderViews: RenderView[] = [];\r\n    private _renderViewsValid = false;\r\n    private _inputData: XRInputData[] = [];\r\n    private _inputDataValid = false;\r\n\r\n    /** The timestamp passed to requestAnimationFrame */\r\n    get time(): number { return this._time; }\r\n    set time(time: number) {\r\n        this._time = time;\r\n    }\r\n\r\n    get frame(): XRFrame { return this._frame; }\r\n    set frame(frame: XRFrame) {\r\n        this._frame = frame;\r\n        this._renderViewsValid = false;\r\n        this._inputDataValid = false;\r\n    }\r\n\r\n    get frameOfReference(): XRFrameOfReference { return this._frameOfReference; }\r\n    set frameOfReference(frameOfReference: XRFrameOfReference) {\r\n        this._frameOfReference = frameOfReference;\r\n        this._inputDataValid = false;\r\n    }\r\n\r\n    get renderViews(): RenderView[] {\r\n        if (this._renderViewsValid) {\r\n            return this._renderViews;\r\n        }\r\n\r\n        const pose = this.frame.getDevicePose(this.frameOfReference);\r\n        // Getting the pose may fail if, for example, tracking is lost.\r\n        if (pose) {\r\n            const views = this._frame.views;\r\n\r\n            // Re-using the same array to avoid allocations per frame -> adjust length in case\r\n            // number of views changes\r\n            if (views.length !== this._renderViews.length) {\r\n                this._renderViews.length = views.length;\r\n            }\r\n            for (let i = 0; i < views.length; ++i) {\r\n                const view = views[i];\r\n                if (!this._renderViews[i]) {\r\n                    this._renderViews[i] = new RenderView();\r\n                }\r\n                this._renderViews[i].set(\r\n                    view.projectionMatrix,\r\n                    pose.getViewMatrix(view),\r\n                    this.frame.session.baseLayer.getViewport(view)!,\r\n                );\r\n            }\r\n        } // else: return last frame's data (assumption: object is reused)\r\n\r\n        this._renderViewsValid = true;\r\n        return this._renderViews;\r\n    }\r\n\r\n    get inputData(): XRInputData[] {\r\n        if (this._inputDataValid) {\r\n            return this._inputData;\r\n        }\r\n\r\n        const sources = this._frame.session.getInputSources();\r\n        if (sources.length !== this.inputData.length) {\r\n            this.inputData.length = sources.length;\r\n        }\r\n\r\n        for (let i = 0; i < sources.length; ++i) {\r\n            const source = sources[i];\r\n            const pose = this._frame.getInputPose(sources[i], this.frameOfReference);\r\n            if (!this.inputData[i]) {\r\n                this.inputData[i] = {} as XRInputData;\r\n            }\r\n            this.inputData[i].source = source;\r\n            this.inputData[i].pose = pose;\r\n        }\r\n\r\n        this._inputDataValid = true;\r\n        return this._inputData;\r\n    }\r\n}\r\n","import { mat4, vec3 } from 'gl-matrix';\r\nimport { XRViewport } from './webxr';\r\n\r\n/**\r\n * WebXR helper class to hold render configuration per XRView,\r\n * i.e. per eye for standard VR/AR.\r\n * NOTE: Optimized to avoid allocations during render loop.\r\n */\r\nexport class RenderView {\r\n    private _cameraPosition = vec3.create();\r\n    private _cameraPositionValid = false; // use extra flag to avoid allocations during render loop\r\n    private _inverseViewMatrix: mat4;\r\n\r\n    private _projectionMatrix: mat4;\r\n    get projectionMatrix(): mat4 {\r\n        return this._projectionMatrix;\r\n    }\r\n    private _viewMatrix: mat4;\r\n    get viewMatrix(): mat4 {\r\n        return this._viewMatrix;\r\n    }\r\n    private _viewProjectionMatrix: mat4;\r\n    private _viewProjectionMatrixValid = false; // use extra flag to avoid allocations during render loop\r\n\r\n    private _viewport: XRViewport;\r\n    get viewport(): XRViewport {\r\n        return this._viewport;\r\n    }\r\n\r\n    set(projectionMatrix: Float32Array, viewMatrix: Float32Array, viewport: XRViewport): void {\r\n        this._projectionMatrix = projectionMatrix as mat4;\r\n        this._viewMatrix = viewMatrix as mat4;\r\n        this._viewport = viewport;\r\n\r\n        this._cameraPositionValid = false;\r\n        this._viewProjectionMatrixValid = false;\r\n    }\r\n\r\n    /**\r\n     * Computes camera position from viewMatrix and caches it.\r\n     */\r\n    get cameraPosition(): vec3 {\r\n        if (this._cameraPositionValid) {\r\n            return this._cameraPosition;\r\n        }\r\n        if (!this._inverseViewMatrix) {\r\n            this._inverseViewMatrix = mat4.create();\r\n        }\r\n\r\n        this._cameraPosition[0] = 0;\r\n        this._cameraPosition[1] = 0;\r\n        this._cameraPosition[2] = 0;\r\n\r\n        mat4.invert(this._inverseViewMatrix, this.viewMatrix);\r\n        vec3.transformMat4(this._cameraPosition, this._cameraPosition, this._inverseViewMatrix);\r\n\r\n        this._cameraPositionValid = true;\r\n        return this._cameraPosition;\r\n    }\r\n\r\n    /** Computes viewProjection matrix and caches it */\r\n    get viewProjectionMatrix(): Float32Array {\r\n        if (this._viewProjectionMatrixValid) {\r\n            return this._viewProjectionMatrix;\r\n        }\r\n        if (!this._viewProjectionMatrix) {\r\n            this._viewProjectionMatrix = mat4.create();\r\n        }\r\n        mat4.multiply(this._viewProjectionMatrix, this.projectionMatrix, this.viewMatrix);\r\n        this._viewProjectionMatrixValid = true;\r\n        return this._viewProjectionMatrix;\r\n    }\r\n}\r\n","import { FrameData } from './framedata';\r\nimport { Renderer } from './renderer';\r\n\r\n/**\r\n * Specialization of `Renderer` to support WebXR.\r\n * It adds default empty implementation for the abstract `Renderer` methods not relevant\r\n * for WebXR (`onPrepare`, `onUpdate`, `onFrame`, `onSwap`) and adds a new abstract method (`onXRFrame`)\r\n * that receives all XR specific input data.\r\n */\r\nexport abstract class XRRenderer extends Renderer {\r\n    /**\r\n     * NOT called when using WebXR (a new frame is always invoked because the view parameters generally change always)\r\n     * Override when the renderer can also be used without WebXR.\r\n     * @returns - Whether to redraw\r\n     */\r\n    protected onUpdate(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * NOT called when using WebXR (multi-frame rendering is not supported)\r\n     * Override when the renderer can also be used without WebXR.\r\n     */\r\n    protected onPrepare(): void { }\r\n\r\n    /**\r\n     * NOT called when using WebXR (see `onXRFrame` below)\r\n     */\r\n    protected onFrame(frameNumber: number): void { }\r\n\r\n    /**\r\n     * Actual frame call specified by inheritor for WebXR.\r\n     * This should be used for actual rendering implementation.\r\n     *\r\n     * If the renderer should be work with and without WebXR, implement both `onFrame` and `onXRFrame`\r\n     * and handle the different sources for view parameters there.\r\n     * (`FrameData` for WebXR and (generally) `Camera` for non-WebXR) .\r\n     */\r\n    protected abstract onXRFrame(frameData: FrameData): void;\r\n\r\n    /**\r\n     * NOT called when using WebXR.\r\n     * Override when the renderer can also be used without WebXR.\r\n     */\r\n    protected onSwap(): void { }\r\n\r\n    xrframe(frameData: FrameData): any {\r\n        this.onXRFrame(frameData);\r\n    }\r\n}\r\n","\r\nimport { validate } from './properties';\r\n\r\n\r\n/** Namespace that comprises various utils (also cleans up documentation). */\r\nnamespace fetch {\r\n\r\n    const failed = (url: string, request: XMLHttpRequest) =>\r\n        `fetching '${url}' failed (${request.status}): ${request.statusText}`;\r\n\r\n    /**\r\n     * Creates a promise for an asynchronous xml/http request on a given URL. If an URL is fetched successfully, the\r\n     * promise is resolved with a parsed JSON object. An error code and message can be caught otherwise.\r\n     * @param url - Uniform resource locator string referencing a JSON file.\r\n     * @param transform - Callback to a function that transforms the fetched data into an instance of targeted type.\r\n     * @returns - A promise that resolves on a parsed JSON object if successful.\r\n     */\r\n    export function fetchAsync<T>(url: string, transform: { (data: any): T }): Promise<T> {\r\n\r\n        const response = new Promise<T>((resolve, reject) => {\r\n            const request = new XMLHttpRequest();\r\n            request.open('GET', url, true);\r\n\r\n            request.onload = () => {\r\n                if (request.status < 200 || request.status >= 300) {\r\n                    reject(failed(url, request));\r\n                    return;\r\n                }\r\n\r\n                const data = request.responseText;\r\n                const object: T = transform(data);\r\n                resolve(object);\r\n            };\r\n\r\n            request.onerror = () => reject(failed(url, request));\r\n            request.ontimeout = () => reject(failed(url, request));\r\n\r\n            request.send();\r\n        });\r\n        return response;\r\n    }\r\n\r\n    export interface FetchTransform<T> { (data: any): T | undefined; }\r\n\r\n    /**\r\n     * Creates a promise for an asynchronous xml/http request on a given URL. If an URL is fetched successfully, the\r\n     * promise is resolved with a parsed JSON object. An error code and message can be caught otherwise.\r\n     * @param url - Uniform resource locator string referencing a JSON file.\r\n     * @param transform - Callback to a function that transforms the fetched data into an instance of targeted type.\r\n     * @param schema - Optional schema, that if specified, is used to validate the fetched json data.\r\n     * @returns - A promise that resolves on a parsed JSON object if successful.\r\n     */\r\n    export function fetchJsonAsync<T>(url: string, transform: FetchTransform<T>, schema?: any): Promise<T> {\r\n\r\n        const response = new Promise<T>((resolve, reject) => {\r\n            const request = new XMLHttpRequest();\r\n            request.open('GET', url, true);\r\n\r\n            request.onload = () => {\r\n                if (request.status < 200 || request.status >= 300) {\r\n                    reject(failed(url, request));\r\n                    return;\r\n                }\r\n\r\n                const json = request.responseText;\r\n                if (schema !== undefined && !validate(json, schema)) {\r\n                    return;\r\n                }\r\n\r\n                let data: any;\r\n                try {\r\n                    data = JSON.parse(json);\r\n                } catch (error) {\r\n                    reject(`fetching '${url}' failed (${error.name}): ${error.message}`);\r\n                    return;\r\n                }\r\n\r\n                const object = transform(data);\r\n                if (object === undefined) {\r\n                    reject(`fetching '${url}' failed (TransformError): transforming the object failed.`);\r\n                    return;\r\n                }\r\n                resolve(object);\r\n            };\r\n\r\n            request.onerror = () => reject(failed(url, request));\r\n            request.ontimeout = () => reject(failed(url, request));\r\n\r\n            request.send();\r\n        });\r\n        return response;\r\n    }\r\n\r\n}\r\n\r\nexport = fetch;\r\n","\r\nimport { Validator } from 'jsonschema';\r\n\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\nimport { ChangeLookup } from './changelookup';\r\n\r\n\r\nnamespace properties {\r\n\r\n    /**\r\n     * Validates if an object (POJO/JSON) adheres to a specific structure using a JSON schema.\r\n     * @param instance - Object to validate.\r\n     * @param schema - JSON schema used for validation.\r\n     * @param references - Schema references for types etc.\r\n     * @returns - True iff the provided instance in valid according to the schema.\r\n     */\r\n    export function validate(instance: any, schema: object, references?: Array<[object, string]>): boolean {\r\n        const validator = new Validator();\r\n        if (references !== undefined) {\r\n            for (const reference of references) {\r\n                validator.addSchema(reference[0], reference[1]);\r\n            }\r\n        }\r\n        /* Validate of (sub) schema of given POJO/JSON. */\r\n        const result = validator.validate(instance, schema);\r\n\r\n        logIf(!result.valid, LogLevel.Warning, `schema expected to be valid:\\n${result.toString()}`);\r\n        return result.valid;\r\n    }\r\n\r\n\r\n    /**\r\n     * Complements default values for all (nested) properties and array's of objects of a given object (POJO/JSON).\r\n     * ```\r\n     * const schema: any = { type: 'object', properties: {\r\n     *          foo: { type: 'object', properties: {\r\n     *              bar: { type: 'string', default: 'moep' },\r\n     *              baz: { type: 'string' } } } } };\r\n     *\r\n     * const object: any = { };\r\n     * JsonSchema.complement(object, schema);\r\n     * console.log(object.foo.bar); // should exist and output 'moep'\r\n     * ```\r\n     *\r\n     * @param instance - Object to complement default values for.\r\n     * @param schema - Schema used for validation.\r\n     */\r\n    export function complement(instance: any | undefined, schema: any): void {\r\n        if (instance === undefined) {\r\n            return;\r\n        }\r\n        assert((schema.hasOwnProperty('properties') && (schema as any)['type'] === 'object') ||\r\n            (schema.hasOwnProperty('items') && (schema as any)['type'] === 'array'),\r\n            `expected schema to have 'properties' or 'items', given ${schema}`);\r\n\r\n        /* tslint:disable-next-line:switch-default */\r\n        switch ((schema as any)['type']) {\r\n\r\n            case 'object':\r\n                const propertiesSchema = (schema as any)['properties'];\r\n                const properties = Object.getOwnPropertyNames(propertiesSchema);\r\n\r\n                for (const key of properties) {\r\n                    const propertySchema = propertiesSchema[key];\r\n                    const type: string | undefined = propertySchema['type'];\r\n\r\n                    const isObject = type === 'object';\r\n                    const isDefined = instance.hasOwnProperty(key);\r\n\r\n                    const hasProperties = propertySchema.hasOwnProperty('properties');\r\n                    const hasDefault = propertySchema.hasOwnProperty('default');\r\n\r\n                    assert((hasProperties && isObject) || (!hasProperties && !isObject),\r\n                        `expected property '${key}' to be of type 'object', given '${propertySchema['type']}'`);\r\n\r\n                    if (isDefined && hasProperties) {\r\n                        /* Invoke recursive defaulting for already defined object with properties. */\r\n                        complement(instance[key], propertySchema);\r\n\r\n                    } else if (!isDefined && hasDefault) {\r\n                        /* Default value for not yet defined property. */\r\n                        Object.defineProperty(instance, key, {\r\n                            value: propertySchema['default'],\r\n                            writable: true,\r\n                        });\r\n                    }\r\n                    // Don't complement non-existent objects on target tree\r\n                }\r\n                break;\r\n\r\n            case 'array':\r\n                const itemsSchema = (schema as any)['items'];\r\n                if (itemsSchema['type'] !== 'object') {\r\n                    break;\r\n                }\r\n                /* Invoke recursive defaulting for array of objects. */\r\n                for (const name of Object.getOwnPropertyNames(instance)) {\r\n                    if (name === 'length') {\r\n                        continue;\r\n                    }\r\n                    complement(instance[name], itemsSchema);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deep comparison of two objects. It returns whether or not changes have been found (returns true) or objects\r\n     * seem to be equal w.r.t. to their property structure and respective values (returns false). All changes that\r\n     * are found will be passed to the alteration lookup.\r\n     * @param objectL - Left operand for deep comparison.\r\n     * @param objectR - Right operand for deep comparison.\r\n     * @param lookup - Actual alteration lookup used for top-down property traversal.\r\n     * @returns - False iff both objects are equal w.r.t. structure and values. True otherwise.\r\n     */\r\n    export function compare(objectL: any | undefined, objectR: any | undefined,\r\n        tracker?: ChangeLookup, path: string = ''): boolean {\r\n\r\n        const track = tracker !== undefined;\r\n        assert(!track || (tracker as object).hasOwnProperty('any'),\r\n            `expected allocation lookup object to have 'any' key`);\r\n\r\n        if ((objectL === undefined && objectR !== undefined) || (objectL !== undefined && objectR === undefined)) {\r\n            if (track) {\r\n                (tracker as ChangeLookup).alter(path);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let equals = true;\r\n\r\n        /* Primitive compare if at least one operand is neither object nor array. */\r\n        let types: [string, string] = [typeof objectL, typeof objectR];\r\n        const isArray: [boolean, boolean] = [objectL instanceof Array, objectR instanceof Array];\r\n\r\n        if ((!isArray[0] || !isArray[1]) && (types[0] !== 'object' || types[1] !== 'object')) {\r\n            equals = objectL === objectR;\r\n            if (!equals && track) {\r\n                (tracker as ChangeLookup).alter(`${path}`);\r\n            }\r\n            return !equals;\r\n        }\r\n\r\n        /* Get set of unique names of both objects. */\r\n        const names: Array<string> = Array.from(new Set<string>(\r\n            Array<string>().concat(Object.getOwnPropertyNames(objectL), Object.getOwnPropertyNames(objectR))).values());\r\n\r\n        /* Deep compare if both operands are either object or array. */\r\n        for (const name of names) {\r\n            if (name === 'length') {\r\n                continue;\r\n            }\r\n            const values = [(objectL as any)[name], (objectR as any)[name]];\r\n            types = [typeof values[0], typeof values[1]];\r\n\r\n            const propertyPath = `${path}${path.length > 0 && !isArray[0] ? '.' : ''}${!isArray[0] ? name : ''}`;\r\n\r\n            if ((values[0] instanceof Array && values[1] instanceof Array) ||\r\n                (types[0] === 'object' && types[1] === 'object')) {\r\n                equals = equals && !compare(values[0], values[1], tracker, propertyPath);\r\n            } else {\r\n                if (types[0] === types[1] && values[0] === values[1]) {\r\n                    continue;\r\n                }\r\n                equals = false;\r\n                if (track) {\r\n                    (tracker as ChangeLookup).alter(propertyPath);\r\n                }\r\n            }\r\n        }\r\n        return !equals;\r\n    }\r\n\r\n}\r\n\r\nexport = properties;\r\n","\r\nimport { assert } from './auxiliaries';\r\nimport { GLclampf4 } from './tuples';\r\n\r\nimport { Framebuffer } from './framebuffer';\r\nimport { Initializable } from './initializable';\r\n\r\n\r\n/**\r\n * Default framebuffer with framebuffer interface. It is intended for use as default buffer binding and enables lazy\r\n * target size reconfiguration of stages.\r\n *\r\n * ```\r\n * this._someStage.frame(this._nullFBO, frameNumber, multiFrameNumber);\r\n * ```\r\n *\r\n * Note that this buffer does query its size from the current context's canvas.\r\n */\r\nexport class DefaultFramebuffer extends Framebuffer {\r\n\r\n    /**\r\n     * @override\r\n     * Default framebuffer cannot be created.\r\n     */\r\n    protected create(): WebGLFramebuffer | undefined {\r\n        this._object = Framebuffer.DEFAULT_FRAMEBUFFER;\r\n        this._valid = true;\r\n\r\n        /* Initialize with default clear values */\r\n        this._clearColors = new Array<GLclampf4>(1);\r\n        this._clearDepth = 1.0;\r\n        this._clearStencil = 0;\r\n\r\n        this.clear = this.es2Clear;\r\n\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Default framebuffer cannot be deleted.\r\n     */\r\n    protected delete(): void {\r\n        this._object = undefined;\r\n        this._valid = false;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @returns - Always false, since default buffer cannot have any attachments.\r\n     */\r\n    protected hasAttachment(attachment: GLenum): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Binds the default framebuffer object to the provided target.\r\n     * @param target - Specifying the binding point (target).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(target: GLenum = this.context.gl.FRAMEBUFFER): void {\r\n        this.context.gl.bindFramebuffer(target, this._object);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * Sets the clear color used for clearing the default color buffer. In order to have transparency working, the\r\n     * canvas needs to have the alpha  attribute enabled. This stage also supports premultiplied alpha, which is applied\r\n     * automatically when the context's `premultipliedAlpha` attribute is set.\r\n     * @param color - RGBA clear color.\r\n     */\r\n    clearColor(color: GLclampf4): void {\r\n        super.clearColor(color);\r\n    }\r\n\r\n    /**\r\n     * Resets the size (important for valid size change detection in stages).\r\n     */\r\n    resize(): void {\r\n        assert(false, `the default framebuffer cannot be resized directly`);\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: returns the renderable width of the canvas back buffer.\r\n     */\r\n    get width(): GLsizei {\r\n        return this.context.gl.canvas.width as GLsizei;\r\n    }\r\n\r\n    /**\r\n     * Convenience accessor: returns the renderable height of the canvas back buffer.\r\n     */\r\n    get height(): GLsizei {\r\n        return this.context.gl.canvas.height as GLsizei;\r\n    }\r\n\r\n}\r\n","\r\nimport { RandomSquareKernel } from './randomsquarekernel';\r\n\r\n\r\n/**\r\n * An anti-aliasing kernel which provides NDC offsets for anti-aliasing, e.g., when using multi-frame sampling.\r\n */\r\nexport class AntiAliasingKernel extends RandomSquareKernel {\r\n\r\n    /**\r\n     * AntiAliasingKernel is fixed to one-dimension (x-axis) and 2-components per sample.\r\n     * @param width - Width of the kernel along its x-axis.\r\n     */\r\n    constructor(width: GLsizei) {\r\n        super(width);\r\n    }\r\n\r\n    /**\r\n     * Invokes regeneration of all values. If width is either 8 or 64 pre-built kernels will be loaded (golden set). In\r\n     * any other case, a random square kernel will be created.\r\n     */\r\n    protected generate(): void {\r\n        switch (this._width) {\r\n            case 8:\r\n                this.fromJSON(require('./data/goldenset08.json'));\r\n                break;\r\n\r\n            case 64:\r\n                this.fromJSON(require('./data/goldenset64.json'));\r\n                break;\r\n\r\n            default:\r\n                super.generate();\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\r\nimport { GLsizei2 } from './tuples';\r\n\r\nimport { ChangeLookup } from './changelookup';\r\nimport { Context } from './context';\r\nimport { Framebuffer } from './framebuffer';\r\nimport { Initializable } from './initializable';\r\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\r\nimport { Program } from './program';\r\nimport { Shader } from './shader';\r\nimport { Texture2 } from './texture2';\r\nimport { Wizard } from './wizard';\r\n\r\n\r\n/**\r\n * This pass accumulates the color attachment 0 of a framebuffer, e.g., the result of an intermediate frame, into an\r\n * accumulation buffer. For accumulation the frame number is used to derive the accumulation weight. For rendering to\r\n * texture, a textured ndc-filling triangle is used.\r\n *\r\n * The accumulation pass can be used as follows:\r\n * ```\r\n * this.accumulate.initialize();\r\n * this.accumulate.texture = this.intermediateFBO.texture(gl2facade.COLOR_ATTACHMENT0);\r\n * this.accumulate.update();\r\n * this.accumulate.frame(frameNumber);\r\n * ```\r\n */\r\nexport class AccumulatePass extends Initializable {\r\n\r\n    /**\r\n     * Read-only access to the objects context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n    /**\r\n     * Alterable auxiliary object for tracking changes on this object's input and lazy updates.\r\n     */\r\n    protected readonly _altered = Object.assign(new ChangeLookup(), {\r\n        any: false, texture: false, precision: false, passThrough: false,\r\n    });\r\n\r\n\r\n    /** @see {@link texture} */\r\n    protected _texture: Texture2;\r\n\r\n    /** @see {@link precision} */\r\n    protected _precision: Wizard.Precision = Wizard.Precision.half;\r\n\r\n    /** @see {@link passThrough} */\r\n    protected _passThrough: boolean;\r\n\r\n    /**\r\n     * Two rgba-framebuffers used for accumulation (buffer ping-ponging is used for alternating the buffers for read\r\n     * and write access due to a limitation in WebGL).\r\n     */\r\n    protected _accumulationFBOs: [Framebuffer, Framebuffer];\r\n    protected _accumulationTextures: [Texture2, Texture2];\r\n\r\n\r\n    /**\r\n     * Stores the index of the last buffer written to.\r\n     */\r\n    protected _write: GLuint = 0;\r\n\r\n    /**\r\n     * Geometry used to draw on. This is not provided by default to allow for geometry sharing. If no triangle is given,\r\n     * the ndc triangle will be created and managed internally.\r\n     */\r\n    protected _ndcTriangle: NdcFillingTriangle;\r\n\r\n    /**\r\n     * Tracks ownership of the ndc-filling triangle.\r\n     */\r\n    protected _ndcTriangleShared = false;\r\n\r\n    protected _program: Program;\r\n    protected _uWeight: WebGLUniformLocation;\r\n\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n    }\r\n\r\n\r\n    /**\r\n     * Specializes this pass's initialization. This pass requires an ndc-filling triangle, a single accumulation\r\n     * program, and two accumulation framebuffers for ping pong (simultaneous read and write is currently not allowed\r\n     * by webgl). All attribute and dynamic uniform locations are cached.\r\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\r\n     * triangle will be created internally.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(ndcTriangle?: NdcFillingTriangle): boolean {\r\n        const gl = this._context.gl;\r\n\r\n        this._accumulationFBOs = [\r\n            new Framebuffer(this._context, 'AccumPingFBO'),\r\n            new Framebuffer(this._context, 'AccumPongFBO')];\r\n\r\n        this._accumulationTextures = [\r\n            new Texture2(this._context, 'AccumPingTexture'),\r\n            new Texture2(this._context, 'AccumPongTexture')];\r\n\r\n        /* Configure program-based accumulate. */\r\n\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (accumulate)');\r\n        vert.initialize(require('./shaders/ndcvertices.vert'));\r\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'accumulate.frag');\r\n        frag.initialize(require('./shaders/accumulate.frag'));\r\n\r\n        this._program = new Program(this._context, 'AccumulateProgram');\r\n        this._program.initialize([vert, frag]);\r\n\r\n        this._uWeight = this._program.uniform('u_weight');\r\n        this._program.bind();\r\n        gl.uniform1f(this._uWeight, 0.0);\r\n        gl.uniform1i(this._program.uniform('u_accumulationTexture'), 0);\r\n        gl.uniform1i(this._program.uniform('u_currentFrameTexture'), 1);\r\n        this._program.unbind();\r\n\r\n\r\n        if (ndcTriangle === undefined) {\r\n            this._ndcTriangle = new NdcFillingTriangle(this._context, 'NdcFillingTriangle-Accumulate');\r\n        } else {\r\n            this._ndcTriangle = ndcTriangle;\r\n            this._ndcTriangleShared = true;\r\n        }\r\n\r\n        if (!this._ndcTriangle.initialized) {\r\n            const aVertex = this._program.attribute('a_vertex', 0);\r\n            this._ndcTriangle.initialize(aVertex);\r\n        } else {\r\n            this._program.attribute('a_vertex', this._ndcTriangle.aVertex);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Specializes this pass's uninitialization. Program and geometry resources are released (if allocated). Cached\r\n     * uniform and attribute locations are invalidated.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        if (!this._ndcTriangleShared && this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.uninitialize();\r\n        }\r\n        this._program.uninitialize();\r\n\r\n        this._accumulationFBOs[0].uninitialize();\r\n        this._accumulationFBOs[1].uninitialize();\r\n        this._accumulationTextures[0].uninitialize();\r\n        this._accumulationTextures[1].uninitialize();\r\n\r\n        this._write = 0;\r\n    }\r\n\r\n    /**\r\n     * Initialize accumulation textures and FBOs (if not initialized yet). Then verifies if the texture's size has\r\n     * changed, and if so, resizes the accumulation buffers.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    update(): void {\r\n        if (!this._texture || !this._texture.valid) {\r\n            log(LogLevel.Warning, `valid texture for accumulation update expected, given ${this._texture}`);\r\n            return;\r\n        }\r\n\r\n        if (this._passThrough) {\r\n            return;\r\n        }\r\n\r\n        const sizeAltered = this._altered.texture || this._accumulationTextures[0].width !== this._texture.width ||\r\n            this._accumulationTextures[0].height !== this._texture.height;\r\n        if (!this._altered.any && !sizeAltered) {\r\n            assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid,\r\n                `valid accumulation framebuffers expected`);\r\n            return;\r\n        }\r\n\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        /* Create and initialize accumulation texture and FBOs. */\r\n\r\n        const textureSize = this._texture.size;\r\n\r\n        if (!this._accumulationTextures[0].initialized) {\r\n            const internalFormat = Wizard.queryInternalTextureFormat(this._context, gl.RGBA, this._precision);\r\n            this._accumulationTextures[0].initialize(textureSize[0], textureSize[1],\r\n                internalFormat[0], gl.RGBA, internalFormat[1]);\r\n            this._accumulationTextures[1].initialize(textureSize[0], textureSize[1],\r\n                internalFormat[0], gl.RGBA, internalFormat[1]);\r\n\r\n        } else {\r\n            if (this._altered.texture || sizeAltered) {\r\n                this._accumulationTextures[0].resize(this._texture.width, this._texture.height);\r\n                this._accumulationTextures[1].resize(this._texture.width, this._texture.height);\r\n            }\r\n            if (this._altered.precision) {\r\n                const internalFormat = Wizard.queryInternalTextureFormat(this._context, gl.RGBA, this._precision);\r\n                this._accumulationTextures[0].reformat(internalFormat[0], gl.RGBA, internalFormat[1]);\r\n                this._accumulationTextures[1].reformat(internalFormat[0], gl.RGBA, internalFormat[1]);\r\n            }\r\n        }\r\n\r\n        if (!this._accumulationFBOs[0].initialized) {\r\n            this._accumulationFBOs[0].initialize([[gl2facade.COLOR_ATTACHMENT0, this._accumulationTextures[0]]]);\r\n            this._accumulationFBOs[1].initialize([[gl2facade.COLOR_ATTACHMENT0, this._accumulationTextures[1]]]);\r\n        }\r\n\r\n        assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid,\r\n            `valid accumulation framebuffers expected`);\r\n\r\n        this._altered.reset();\r\n    }\r\n\r\n    /**\r\n     * An accumulation frame binds the two accumulation textures (ping-pong framebuffer), one for read, the other for\r\n     * write/accumulating into. A screen-aligned triangle is used to fill the viewport and mix the input texture with\r\n     * the weight of 1 / (frameNumber + 1) with the previous accumulation result. If no texture is specified, pass\r\n     * through is used.\r\n     * @param frameNumber - Frame number used to select the current read and write framebuffer as well as frame weight.\r\n     * @param viewport - If specified, the viewport for accumulation will be set to the given width and height. If not,\r\n     * the currently set viewport is used.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    frame(frameNumber: number, viewport?: GLsizei2): void {\r\n        assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid,\r\n            `valid framebuffer objects for accumulation expected (initialize or update was probably not be called`);\r\n\r\n        if (this._passThrough || this._texture === undefined) {\r\n            return;\r\n        }\r\n        logIf(!this._texture || !this._texture.valid, LogLevel.Warning,\r\n            `valid texture for accumulation frame expected, given ${this._texture}`);\r\n\r\n        const gl = this._context.gl;\r\n\r\n        if (viewport !== undefined) {\r\n            gl.viewport(0, 0, viewport[0], viewport[1]);\r\n        }\r\n\r\n        const readIndex = frameNumber % 2;\r\n        const writeIndex = this._write = 1 - readIndex;\r\n\r\n        const accumTexture = this._accumulationTextures[readIndex];\r\n        const frameTexture = this._texture;\r\n\r\n        accumTexture.bind(gl.TEXTURE0);\r\n        frameTexture.bind(gl.TEXTURE1);\r\n\r\n        this._program.bind();\r\n        gl.uniform1f(this._uWeight, 1.0 / (frameNumber + 1));\r\n\r\n        this._accumulationFBOs[writeIndex].bind(gl.DRAW_FRAMEBUFFER); // bind draw only does not work for IE and EDGE\r\n        this._ndcTriangle.bind();\r\n        this._ndcTriangle.draw();\r\n        this._ndcTriangle.unbind();\r\n        this._accumulationFBOs[writeIndex].unbind(gl.DRAW_FRAMEBUFFER);\r\n\r\n        /** Every pass is expected to bind its own program when drawing, thus, unbinding is not necessary. */\r\n        // this.program.unbind();\r\n\r\n        accumTexture.unbind(gl.TEXTURE0);\r\n        frameTexture.unbind(gl.TEXTURE1);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the texture that is to be accumulated. The ping and pong render textures will be resized on next frame\r\n     * automatically if the texture size changed.\r\n     * @param texture - Framebuffer that is to be accumulated.\r\n     */\r\n    set texture(texture: Texture2) {\r\n        this.assertInitialized();\r\n        if (this._texture !== texture) {\r\n            this._texture = texture;\r\n            this._altered.alter('texture');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows to specify the accumulation precision.\r\n     */\r\n    set precision(precision: Wizard.Precision) {\r\n        this.assertInitialized();\r\n        if (this._precision !== precision) {\r\n            this._precision = precision;\r\n            this._altered.alter('precision');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Allows to skip accumulation. If pass through is enabled, nothing will be rendered on frame at all and the\r\n     * ping pong render textures will be reduced to a minimum size of [1, 1] until pass through is disabled.\r\n     */\r\n    set passThrough(passThrough: boolean) {\r\n        this.assertInitialized();\r\n\r\n        if (this._passThrough === passThrough) {\r\n            return;\r\n        }\r\n\r\n        if (this._passThrough && this._accumulationTextures[0].initialized) {\r\n            this._accumulationTextures[0].uninitialize();\r\n            this._accumulationTextures[1].uninitialize();\r\n        }\r\n        if (this._passThrough && this._accumulationFBOs[0].initialized) {\r\n            this._accumulationFBOs[0].uninitialize();\r\n            this._accumulationFBOs[1].uninitialize();\r\n        }\r\n\r\n        this._passThrough = passThrough;\r\n        this._altered.alter('passThrough');\r\n    }\r\n\r\n    /**\r\n     * Returns the framebuffer last accumulated into. Note: the accumulation buffer is represented by two framebuffers\r\n     * swapped for read and write every frame. The accumulation result is in the first color attachment.\r\n     * @returns - The rgba framebuffer last accumulated into.\r\n     */\r\n    get framebuffer(): Framebuffer | undefined {\r\n        return this._passThrough ? undefined : this._accumulationFBOs[this._write];\r\n    }\r\n\r\n}\r\n","\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\nimport { Framebuffer } from './framebuffer';\r\nimport { Initializable } from './initializable';\r\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\r\nimport { Program } from './program';\r\nimport { Shader } from './shader';\r\nimport { Texture2 } from './texture2';\r\n\r\n\r\n/**\r\n * This rendering pass blits the color attachment of a given rgba-framebuffer into the target buffer provided on frame.\r\n * For rendering, a direct blit is used. However, if this is not supported, a textured, screen-aligned triangle is used\r\n * for blitting as fallback.\r\n *\r\n * The blit component can be used as follows:\r\n * ```\r\n * this.blit.framebuffer = this.intermediateFBO;\r\n * this.blit.frame(this.defaultFBO, null, null);\r\n * ```\r\n */\r\nexport class BlitPass extends Initializable {\r\n\r\n    /**\r\n     * Read-only access to the objects context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n    /** @see {@link target} */\r\n    protected _target: Framebuffer;\r\n\r\n    /** @see {@link framebuffer} */\r\n    protected _framebuffer: Framebuffer;\r\n\r\n    /** @see {@link readBuffer} */\r\n    protected _readBuffer: GLenum;\r\n\r\n    /** @see {@link drawBuffer} */\r\n    protected _drawBuffer: GLenum;\r\n\r\n    /* Indirect blit and fallback implementation. */\r\n\r\n    /**\r\n     * Geometry used to draw on. This is not provided by default to allow for geometry sharing. If no triangle is given,\r\n     * the ndc triangle will be created and managed internally.\r\n     */\r\n    protected _ndcTriangle: NdcFillingTriangle;\r\n\r\n    /**\r\n     * Tracks ownership of the ndc-filling triangle.\r\n     */\r\n    protected _ndcTriangleShared = false;\r\n\r\n    protected _program: Program;\r\n\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n    }\r\n\r\n    /**\r\n     * Uses direct blit via glBlitFramebuffer for blitting a single read buffer into the given target's draw buffer.\r\n     */\r\n    private functionBlit(): void {\r\n        const gl = this._context.gl;\r\n\r\n        this._target.bind(gl.DRAW_FRAMEBUFFER);\r\n        this._framebuffer.bind(gl.READ_FRAMEBUFFER);\r\n        gl.readBuffer(this._readBuffer);\r\n        gl.drawBuffers([this._drawBuffer]);\r\n\r\n        /**\r\n         * The glClear is somehow required to make the blit work. Reducing the clear area to zero is intended to reduce\r\n         * the actual load of clear.\r\n         */\r\n        gl.enable(gl.SCISSOR_TEST);\r\n        gl.scissor(0, 0, 0, 0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.disable(gl.SCISSOR_TEST);\r\n\r\n        gl.blitFramebuffer(0, 0, this._framebuffer.width, this._framebuffer.height, 0, 0\r\n            , this._target.width, this._target.height, gl.COLOR_BUFFER_BIT, gl.NEAREST);\r\n\r\n        this._framebuffer.unbind(gl.READ_FRAMEBUFFER);\r\n        this._target.unbind(gl.DRAW_FRAMEBUFFER);\r\n    }\r\n\r\n    /**\r\n     * Uses indirect blit by drawing a textured, screen-aligned triangle into the given target framebuffer.\r\n     */\r\n    private programBlit(): void {\r\n        assert(this._ndcTriangle && this._ndcTriangle.initialized, `expected an initialized ndc triangle`);\r\n        const gl = this._context.gl;\r\n\r\n        gl.viewport(0, 0, this._target.width, this._target.height);\r\n\r\n        this._program.bind();\r\n\r\n        const texture = this._framebuffer.texture(this._readBuffer) as Texture2;\r\n        texture.bind(gl.TEXTURE0);\r\n\r\n        const target = this._context.isWebGL2 ? gl.DRAW_FRAMEBUFFER : gl.FRAMEBUFFER;\r\n        this._target.bind(target);\r\n        this._ndcTriangle.bind();\r\n        this._ndcTriangle.draw();\r\n        this._ndcTriangle.unbind();\r\n        this._target.unbind(target);\r\n\r\n        texture.unbind();\r\n\r\n        /* Every pass is expected to bind its own program when drawing, thus, unbinding is not necessary. */\r\n        // this.program.unbind();\r\n    }\r\n\r\n    /**\r\n     * Specializes this pass's initialization. This pass either requires blitFramebuffer support or creates screen-\r\n     * aligned triangle geometry and a single program. All attribute and dynamic uniform locations are cached.\r\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\r\n     * triangle will be created internally.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(ndcTriangle?: NdcFillingTriangle): boolean {\r\n        const gl = this._context.gl;\r\n\r\n        /* Configure program-based blit. */\r\n\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (blit)');\r\n        vert.initialize(require('./shaders/ndcvertices.vert'));\r\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'blit.frag');\r\n        frag.initialize(require('./shaders/blit.frag'));\r\n\r\n        this._program = new Program(this._context, 'BlitProgram');\r\n        this._program.initialize([vert, frag]);\r\n\r\n        this._program.bind();\r\n        gl.uniform1i(this._program.uniform('u_texture'), 0);\r\n        this._program.unbind();\r\n\r\n\r\n        if (ndcTriangle === undefined) {\r\n            this._ndcTriangle = new NdcFillingTriangle(this._context, 'NdcFillingTriangle-Blit');\r\n        } else {\r\n            this._ndcTriangle = ndcTriangle;\r\n            this._ndcTriangleShared = true;\r\n        }\r\n\r\n        if (!this._ndcTriangle.initialized) {\r\n            const aVertex = this._program.attribute('a_vertex', 0);\r\n            this._ndcTriangle.initialize(aVertex);\r\n        } else {\r\n            this._program.attribute('a_vertex', this._ndcTriangle.aVertex);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Specializes this pass's uninitialization. Program and geometry resources are released (if allocated). Cached\r\n     * uniform and attribute locations are invalidated.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        if (!this._ndcTriangleShared && this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.uninitialize();\r\n        }\r\n        this._program.uninitialize();\r\n    }\r\n\r\n    /**\r\n     * A blit frame either blits or draws the color attachment of the given framebuffer to the target framebuffer. For\r\n     * program based/indirect blit a viewport filling area, i.e., a screen-aligned triangle is used.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    frame(): void {\r\n        logIf(!this._target || !this._target.valid, LogLevel.Warning, `valid target expected, given ${this._target}`);\r\n        logIf(!this._framebuffer || !this._framebuffer.valid, LogLevel.Warning,\r\n            `valid framebuffer for blitting from expected, given ${this._framebuffer}`);\r\n\r\n        const gl = this._context.gl;\r\n\r\n        switch (this._readBuffer) {\r\n            /* falls through */\r\n            case gl.DEPTH_ATTACHMENT:\r\n            case gl.STENCIL_ATTACHMENT:\r\n            case gl.DEPTH_STENCIL_ATTACHMENT:\r\n                return this.programBlit();\r\n            default:\r\n                break;\r\n        }\r\n\r\n        /* BlitFramebuffer is not an extension and, thus, it does not need to be enabled. */\r\n        if (this._context.supportsBlitFramebuffer) {\r\n            return this.functionBlit();\r\n        }\r\n        this.programBlit();\r\n    }\r\n\r\n    /**\r\n     * Sets the framebuffer that is to be blitted.\r\n     * @param framebuffer - Framebuffer that is to be blitted.\r\n     */\r\n    set framebuffer(framebuffer: Framebuffer) {\r\n        this.assertInitialized();\r\n        this._framebuffer = framebuffer;\r\n    }\r\n\r\n    /**\r\n     * The read buffer to blit from (currently, this is expected to refer to a texture attachment of this._framebuffer).\r\n     * @param readBuffer - GLenum that is to be queried from the FBO.\r\n     */\r\n    set readBuffer(readBuffer: GLenum) {\r\n        this.assertInitialized();\r\n        this._readBuffer = readBuffer;\r\n    }\r\n\r\n    /**\r\n     * The draw buffer to blit to (currently, this is expected to refer to a texture attachment of this._target or\r\n     * gl.BACK). Please note that this will be ignored if WebGL 1 is used without a WEBGL_draw_buffer extension.\r\n     * Furthermore, if the drawBuffer is gl.BACK, a DefaultBuffer is expected as target.\r\n     * @param drawBuffer - GLenum that specifies the draw buffer.\r\n     */\r\n    set drawBuffer(drawBuffer: GLenum) {\r\n        this.assertInitialized();\r\n        this._drawBuffer = drawBuffer;\r\n    }\r\n\r\n    /**\r\n     * Framebuffer to blit the given framebuffer (@see framebuffer} into.\r\n     * @param target - Framebuffer to blit into.\r\n     */\r\n    set target(target: Framebuffer) {\r\n        this.assertInitialized();\r\n        this._target = target;\r\n    }\r\n\r\n}\r\n","/**\r\n * IE11 polyfill for string.repeat function, from\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat#Polyfill\r\n */\r\nif (String.prototype.repeat === undefined) {\r\n    // tslint:disable-next-line:space-before-function-paren\r\n    String.prototype.repeat = function (count): string {\r\n        'use strict';\r\n        if (this === null) {\r\n            throw new TypeError('can\\'t convert ' + this + ' to object');\r\n        }\r\n        const str = '' + this;\r\n        count = +count;\r\n        if (count !== count) {\r\n            count = 0;\r\n        }\r\n        if (count < 0) {\r\n            throw new RangeError('repeat count must be non-negative');\r\n        }\r\n        if (count === Infinity) {\r\n            throw new RangeError('repeat count must be less than infinity');\r\n        }\r\n        count = Math.floor(count);\r\n        if (str.length === 0 || count === 0) {\r\n            return '';\r\n        }\r\n        // Ensuring count is a 31-bit integer allows us to heavily optimize the\r\n        // main part. But anyway, most current (August 2014) browsers can't handle\r\n        // strings 1 << 28 chars or longer, so:\r\n        if (str.length * count >= 1 << 28) {\r\n            throw new RangeError('repeat count must not overflow maximum string size');\r\n        }\r\n        let rpt = '';\r\n        for (let i = 0; i < count; i++) {\r\n            rpt += str;\r\n        }\r\n        return rpt;\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * IE11 polyfill for string.startsWith function, from https://stackoverflow.com/a/30867255.\r\n */\r\nif (String.prototype.startsWith === undefined) {\r\n    /* tslint:disable-next-line:space-before-function-paren */\r\n    String.prototype.startsWith = function (searchString, position): boolean {\r\n        position = position || 0;\r\n        return this.indexOf(searchString, position) === position;\r\n    };\r\n}\r\n\r\n/**\r\n * IE11 polyfill for Array.forEach function, from ...\r\n */\r\nif (Array.prototype.forEach === undefined) {\r\n    /* tslint:disable-next-line:space-before-function-paren */\r\n    Array.prototype.forEach = (action, that /*opt*/) => {\r\n        const n = this.length;\r\n        /* tslint:disable-prefer-for-of */\r\n        for (let i = 0; i < n; i++) {\r\n            if (i in this) {\r\n                action.call(that, this[i], i, this);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * IE11 polyfill for Math.log10 function\r\n */\r\nif (Math.log10 === undefined) {\r\n    /* tslint:disable-next-line:space-before-function-paren */\r\n    Math.log10 = (x) => Math.log(x) * Math.LOG10E;\r\n}\r\n\r\n/**\r\n * IE11 polyfill for Number.EPSILON.\r\n */\r\ninterface NumberPolyfill {\r\n    EPSILON: number;\r\n}\r\nif (Number.EPSILON === undefined) {\r\n    (Number as NumberPolyfill).EPSILON = Math.pow(2, -52);\r\n}\r\n\r\n/**\r\n * IE11 polyfill for Array.prototype.slice\r\n */\r\n[Float32Array, Float64Array, Uint8Array, Int8Array, Uint16Array, Int16Array, Uint32Array, Int32Array]\r\n    .forEach((type) => {\r\n        if (type.prototype.slice === undefined) {\r\n            (type.prototype.slice as any) = Array.prototype.slice;\r\n        }\r\n    });\r\n","\r\nexport { branch, commit, version } from './version';\r\n\r\nexport { Context } from './context';\r\nexport { Canvas } from './canvas';\r\nexport { Controller } from './controller';\r\n\r\nexport { Initializable } from './initializable';\r\n\r\nexport { ContextMasquerade } from './contextmasquerade';\r\nexport { ExtensionsHash } from './extensionshash';\r\nexport { ChangeLookup } from './changelookup';\r\nexport { MouseEventProvider } from './mouseeventprovider';\r\nexport { TouchEventProvider } from './toucheventprovider';\r\nexport { EventHandler } from './eventhandler';\r\n\r\nexport { Buffer } from './buffer';\r\nexport { Color } from './color';\r\nexport { ColorScale } from './colorscale';\r\nexport { DefaultFramebuffer } from './defaultframebuffer';\r\nexport { Framebuffer } from './framebuffer';\r\nexport { Geometry } from './geometry';\r\nexport { Program } from './program';\r\nexport { Renderbuffer } from './renderbuffer';\r\nexport { Renderer, Invalidate } from './renderer';\r\nexport { Shader } from './shader';\r\nexport { Texture2 } from './texture2';\r\nexport { TextureCube } from './texturecube';\r\nexport { VertexArray } from './vertexarray';\r\nexport { Wizard } from './wizard';\r\n\r\nexport { Camera } from './camera';\r\nexport { CameraModifier } from './cameramodifier';\r\nexport { Navigation } from './navigation';\r\nexport { FirstPersonModifier } from './firstpersonmodifier';\r\nexport { PanModifier } from './panmodifier';\r\nexport { PointerLock } from './pointerlock';\r\nexport { TrackballModifier } from './trackballmodifier';\r\nexport { TurntableModifier } from './turntablemodifier';\r\nexport { ZoomModifier } from './zoommodifier';\r\n\r\nexport { NdcFillingRectangle } from './ndcfillingrectangle';\r\nexport { NdcFillingTriangle } from './ndcfillingtriangle';\r\n\r\nexport { AbstractKernel } from './kernel';\r\nexport { AntiAliasingKernel } from './antialiasingkernel';\r\nexport { RandomSquareKernel } from './randomsquarekernel';\r\nexport { KernelF32, KernelI32, KernelI8, KernelUI32, KernelUI8 } from './kernel';\r\n\r\nexport { AccumulatePass } from './accumulatepass';\r\nexport { BlitPass } from './blitpass';\r\nexport { ReadbackPass } from './readbackpass';\r\n\r\n\r\nimport * as root_auxiliaries from './auxiliaries';\r\nexport import auxiliaries = root_auxiliaries;\r\n\r\nexport { vec2, vec3, vec4 } from 'gl-matrix';\r\nexport { mat2, mat3, mat4 } from 'gl-matrix';\r\n\r\nimport * as root_gl_matrix_extensions from './gl-matrix-extensions';\r\nexport import gl_matrix_extensions = root_gl_matrix_extensions;\r\n\r\nimport * as root_tuples from './tuples';\r\nexport import tuples = root_tuples;\r\n\r\nexport { XRController } from './xrcontroller';\r\nexport { XRRenderer } from './xrrenderer';\r\nexport { FrameData } from './framedata';\r\nexport { RenderView } from './renderview';\r\n","\r\n\r\n/**\r\n * Provided via the git-revision-webgl-operate and define plugins.\r\n */\r\ndeclare var GIT_REV_VERSION: string;\r\ndeclare var GIT_REV_COMMIT: string;\r\ndeclare var GIT_REV_BRANCH: string;\r\n\r\n/**\r\n * `gloperate.branch` provides the git revision branch at build-time.\r\n */\r\nexport const branch = typeof GIT_REV_BRANCH !== 'undefined' ? `${GIT_REV_BRANCH}` : undefined;\r\n\r\n/**\r\n * `gloperate.commit` provides the git revision commit at build-time.\r\n */\r\nexport const commit = typeof GIT_REV_COMMIT !== 'undefined' ? `${GIT_REV_COMMIT}` : undefined;\r\n\r\n/**\r\n * `gloperate.version` provides the git revision version at build-time.\r\n */\r\nexport const version = typeof GIT_REV_VERSION !== 'undefined' ? `${GIT_REV_VERSION}` : undefined;\r\n","\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nimport { assert, prettyPrintBytes } from './auxiliaries';\r\n\r\n\r\n/**\r\n * This register enables monitoring of memory (de)allocations and is intended for use in WebGL context for internal GPU\r\n * memory allocation tracking. For it, a unique identifier for registration has to be created:\r\n * ```\r\n * let gpuAllocReg = this.context.gpuAllocationRegister;\r\n * const identifier = gpuAllocReg.createUniqueIdentifier('gpu-object');\r\n * ```\r\n *\r\n * Then allocations, deallocations, and reallocations can be registered:\r\n * ```\r\n * gpuAllocReg.allocate(identifier, this.sizeofRGBAColorAttachment());\r\n * gpuAllocReg.allocate(identifier, this.sizeofDepthStencilAttachment());\r\n * // ... reallocation\r\n * gpuAllocReg.reallocate(identifier,\r\n *     this.sizeofRGBAColorAttachment() + this.sizeofDepthStencilAttachment());\r\n * // ... uninitialize\r\n * gpuAllocReg.reallocate(identifier, 0);\r\n * ```\r\n *\r\n * Requesting the allocated memory can be done as follows:\r\n * ```\r\n * // memory allocated by identifier:\r\n * console.log(mfCanvas.context.gpuAllocationRegister.toString());\r\n * //> IntermediateFBO: 10.582MiB, AccumulationPingFBO: 21.163MiB, AccumulationPongFBO: 21.163MiB\r\n *\r\n * // memory allocated over all identifiers:\r\n * console.log(mfCanvas.context.gpuAllocationRegister.bytesToString());\r\n * //> 52.908MiB\r\n * ```\r\n */\r\nexport class AllocationRegister {\r\n\r\n    /**\r\n     * Map that provides access to the accumulated memory allocations for all registered identifiers.\r\n     */\r\n    protected _bytesByIdentifier = new Map<string, GLsizei>();\r\n\r\n    /** @see {@link bytes} */\r\n    protected _bytes: GLsizei = 0;\r\n    protected _bytesSubject = new ReplaySubject<[GLsizei, string]>(1);\r\n\r\n    /**\r\n     * Utility for communicating this._bytes changes to its associated subject.\r\n     */\r\n    protected bytesNext(): void {\r\n        this._bytesSubject.next([this._bytes, this.bytesToString()]);\r\n    }\r\n\r\n\r\n    /**\r\n     * Asserts existence of an identifier.\r\n     * @param identifier - Identifier to assert the existence of.\r\n     */\r\n    protected assertIdentifier(identifier: string): void {\r\n        assert(this._bytesByIdentifier.has(identifier), `allocation identifier unknown`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a unique identifier based on a given identifier: if the identifier is already unique it is returned as\r\n     * is. If not, an enumerated identifier is returned, e.g., 'TempFBO-2' when 'TempFBO' already exists. This also\r\n     * enables tracking for the identifier, thus, it should always be called before tracking/monitoring.\r\n     * @param identifier - Requested identifier for allocation registration.\r\n     * @returns - Unique identifier (might differ from given identifier) for which allocation registration is enabled.\r\n     */\r\n    createUniqueIdentifier(identifier: string): string {\r\n        let uniqueIdentifier: string = identifier;\r\n        let unificationSuffix = 2;\r\n\r\n        while (this._bytesByIdentifier.has(uniqueIdentifier)) {\r\n            uniqueIdentifier = `${identifier}-${unificationSuffix}`;\r\n            ++unificationSuffix;\r\n        }\r\n\r\n        this._bytesByIdentifier.set(uniqueIdentifier, 0);\r\n        return uniqueIdentifier;\r\n    }\r\n\r\n    /**\r\n     * Removes a previously created unique identifier from the allocation registry.\r\n     * @param identifier - Identifier that is to be deleted from allocation registration.\r\n     */\r\n    deleteUniqueIdentifier(identifier: string): void {\r\n        assert(this._bytesByIdentifier.has(identifier), `identifier expected to be known for allocation registration`);\r\n        this._bytesByIdentifier.delete(identifier);\r\n    }\r\n\r\n    /**\r\n     * Registers allocated bytes for a given identifier.\r\n     * @param identifier - Identifier to register the allocated bytes for.\r\n     * @param allocate - Allocated bytes to register for identifier.\r\n     */\r\n    allocate(identifier: string, allocate: number): void {\r\n        this.assertIdentifier(identifier);\r\n\r\n        assert(allocate >= 0, `positive number of bytes expected for allocation, given ${allocate}`);\r\n\r\n        /* Nothing to do if no bytes are allocated */\r\n        if (allocate === 0) {\r\n            return;\r\n        }\r\n\r\n        const bytes = (this._bytesByIdentifier.get(identifier)!) + allocate;\r\n        this._bytesByIdentifier.set(identifier, bytes);\r\n\r\n        this._bytes = this._bytes + allocate; // allocate total\r\n        this.bytesNext();\r\n    }\r\n\r\n    /**\r\n     * Registers deallocated bytes for a given identifier.\r\n     * @param identifier - Identifier to register the deallocated bytes for.\r\n     * @param allocate - Number of deallocated bytes to register for identifier.\r\n     */\r\n    deallocate(identifier: string, deallocate: number): void {\r\n        this.assertIdentifier(identifier);\r\n\r\n        const bytes = this._bytesByIdentifier.get(identifier)!;\r\n        assert(deallocate >= 0, `positive number of bytes expected for deallocation, given ${deallocate}`);\r\n        assert(deallocate <= bytes, `deallocation cannot exceed previous allocations of ${bytes}, given ${deallocate}`);\r\n\r\n        /* Nothing to do if no bytes are deallocated */\r\n        if (deallocate === 0) {\r\n            return;\r\n        }\r\n\r\n        this._bytesByIdentifier.set(identifier, bytes - deallocate);\r\n\r\n        this._bytes = this._bytes - deallocate; // deallocate total\r\n        this.bytesNext();\r\n    }\r\n\r\n    /**\r\n     * Resets the previously allocated bytes for the given identifier and registers the given allocated bytes instead.\r\n     * @param identifier - Identifier to register the reallocated bytes for.\r\n     * @param allocate - Number of reallocated bytes to register for identifier.\r\n     */\r\n    reallocate(identifier: string, reallocate: number): void {\r\n        this.assertIdentifier(identifier);\r\n        assert(reallocate >= 0, `positive number of bytes expected for reallocation, given ${reallocate}`);\r\n\r\n        const previousBytes = this._bytesByIdentifier.get(identifier)!;\r\n\r\n        /* Nothing to do if same size should be reallocated */\r\n        if (previousBytes === reallocate) {\r\n            return;\r\n        }\r\n\r\n        this._bytes = this._bytes - previousBytes; // deallocate total\r\n        this._bytesByIdentifier.set(identifier, reallocate);\r\n\r\n        this._bytes = this._bytes + reallocate; // allocate total\r\n        this.bytesNext();\r\n    }\r\n\r\n    /**\r\n     * Provides access to the allocated bytes for an identifier as well as the overall allocated bytes (when identifier\r\n     * is undefined, default). If the identifier is undefined, the overall allocated number of bytes is returned.\r\n     * @param identifier - Identifier to return the allocated bytes for.\r\n     * @param allocate - Number of allocated bytes registered for identifier.\r\n     */\r\n    allocated(identifier?: string): number {\r\n        if (identifier === undefined) {\r\n            return this._bytes;\r\n        }\r\n        this.assertIdentifier(identifier);\r\n        return this._bytesByIdentifier.get(identifier)!;\r\n    }\r\n\r\n    /**\r\n     * Provides a pretty printed string of the allocated bytes of this register and their identifier. The output for a\r\n     * register of three objects could be as follows:\r\n     * ```\r\n     * IntermediateFBO: 10.582MiB, AccumulationPingFBO: 21.163MiB, AccumulationPongFBO: 21.163MiB\r\n     * ```\r\n     * @returns - Pretty printed string of all memory allocations.\r\n     */\r\n    toString(): string {\r\n        const output = new Array<string>();\r\n        this._bytesByIdentifier.forEach((bytes: number, identifier: string) => {\r\n            output.push(`${identifier}: ${prettyPrintBytes(bytes)}`);\r\n        });\r\n        return output.join(', ');\r\n    }\r\n\r\n    /**\r\n     * Provides a pretty printed string of the overall number of bytes or a specific identifier. If the identifier is\r\n     * undefined, the overall number of bytes is pretty printed.\r\n     * @param identifier - Identifier to pretty print the bytes for.\r\n     * @returns - Pretty printed string of the requested number of bytes.\r\n     */\r\n    bytesToString(identifier?: string): string {\r\n        return prettyPrintBytes(this.allocated(identifier));\r\n    }\r\n\r\n\r\n    /**\r\n     * Cache for the overall number of allocated bytes (over all identifiers). This should always be the sum of the\r\n     * bytes allocated over each identifier, which can be validated using validate().\r\n     *\r\n     * This property can be observed, e.g., `allocationRegister.bytesObservable.subscribe()`.\r\n     */\r\n    get bytes(): GLsizei {\r\n        return this._bytes;\r\n    }\r\n\r\n    /**\r\n     * Observable that can be used to subscribe to bytes value changes. Yields a 2-tuple of overall allocated bytes as\r\n     * number and pretty printed string.\r\n     */\r\n    get bytes$(): Observable<[GLsizei, string]> {\r\n        return this._bytesSubject.asObservable();\r\n    }\r\n}\r\n","\r\n\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Context } from './context';\r\n\r\n\r\nexport type TexImage2DData = GLintptr | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement |\r\n    ImageBitmap | ImageData | ArrayBufferView | undefined;\r\n\r\n\r\n/**\r\n * A WebGL 2 facade, simplifying the access to gl functions that are either not available, exposed via extension or\r\n * supported directly, e.g., in webgl2. All gl features/interfaces handled by this facade are mandatory.\r\n */\r\nexport class GL2Facade {\r\n\r\n    /* tslint:disable:member-ordering variable-name */\r\n\r\n    /**\r\n     * @param context - Wrapped gl context for function resolution.\r\n     * @param extensions - Identifiers of mandatory extensions for which the support is asserted.\r\n     */\r\n    constructor(context: Context) {\r\n        assert(context !== undefined, `gl2 facade expects a valid WebGL context`);\r\n\r\n        this.queryHalfFloatSupport(context);\r\n        this.queryColorAttachments(context);\r\n        this.queryInstancedArraySupport(context);\r\n        this.queryDrawBuffersSupport(context);\r\n        this.queryVertexArrayObjectSupport(context);\r\n        this.queryMaxUniformVec3Components(context);\r\n        this.queryTexImageInterface(context);\r\n    }\r\n\r\n\r\n    // HALF FLOAT\r\n\r\n    /**\r\n     * Stores the HALF_FLOAT enum if supported. @see {@link HALF_FLOAT}\r\n     */\r\n    protected _halfFloat: GLenum;\r\n\r\n    /**\r\n     * The HALF_FLOAT format enum. Is `undefined` if not supported.\r\n     */\r\n    get HALF_FLOAT(): GLenum {\r\n        return this._halfFloat;\r\n    }\r\n\r\n    /**\r\n     *  For WebGL1 the HALF_FLOAT enum needs to be saved via the extension object.\r\n     */\r\n    protected queryHalfFloatSupport(context: Context): void {\r\n        switch (context.backend) {\r\n            case Context.BackendType.WebGL1:\r\n                this._halfFloat = context.supportsTextureHalfFloat && context.textureHalfFloat ?\r\n                    context.textureHalfFloat.HALF_FLOAT_OES : undefined;\r\n                break;\r\n\r\n            case Context.BackendType.WebGL2:\r\n            /* falls through */\r\n            default:\r\n                this._halfFloat = context.gl.HALF_FLOAT;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    // COLOR ATTACHMENTS\r\n\r\n    /**\r\n     * Stores the lowest color attachment identifier.\r\n     */\r\n    protected _colorAttachmentMin: GLenum;\r\n    /**\r\n     * The lowest color attachment identifier format enum.\r\n     */\r\n    get COLOR_ATTACHMENT_MIN(): GLenum {\r\n        return this._colorAttachmentMin;\r\n    }\r\n\r\n    /**\r\n     * Stores the highest supported color attachment identifier.\r\n     */\r\n    protected _colorAttachmentMax: GLenum;\r\n\r\n    /**\r\n     * Stores all context/backend sepcific color attachment identifier for COLOR_ATTACHMENT# getter.\r\n     */\r\n    protected _colorAttachments: Array<GLenum>;\r\n\r\n    /**\r\n     * The lowest color attachment identifier format enum.\r\n     * Is at least `COLOR_ATTACHMENT_MIN`.\r\n     */\r\n    get COLOR_ATTACHMENT_MAX(): GLenum {\r\n        return this._colorAttachmentMax;\r\n    }\r\n\r\n    get COLOR_ATTACHMENT0(): GLenum {\r\n        return this._colorAttachments[0];\r\n    }\r\n    get COLOR_ATTACHMENT1(): GLenum {\r\n        return this._colorAttachments[1];\r\n    }\r\n    get COLOR_ATTACHMENT2(): GLenum {\r\n        return this._colorAttachments[2];\r\n    }\r\n    get COLOR_ATTACHMENT3(): GLenum {\r\n        return this._colorAttachments[3];\r\n    }\r\n    get COLOR_ATTACHMENT4(): GLenum {\r\n        return this._colorAttachments[4];\r\n    }\r\n    get COLOR_ATTACHMENT5(): GLenum {\r\n        return this._colorAttachments[5];\r\n    }\r\n    get COLOR_ATTACHMENT6(): GLenum {\r\n        return this._colorAttachments[6];\r\n    }\r\n    get COLOR_ATTACHMENT7(): GLenum {\r\n        return this._colorAttachments[7];\r\n    }\r\n    get COLOR_ATTACHMENT8(): GLenum {\r\n        return this._colorAttachments[8];\r\n    }\r\n    get COLOR_ATTACHMENT9(): GLenum {\r\n        return this._colorAttachments[9];\r\n    }\r\n    get COLOR_ATTACHMENT10(): GLenum {\r\n        return this._colorAttachments[10];\r\n    }\r\n    get COLOR_ATTACHMENT11(): GLenum {\r\n        return this._colorAttachments[11];\r\n    }\r\n    get COLOR_ATTACHMENT12(): GLenum {\r\n        return this._colorAttachments[12];\r\n    }\r\n    get COLOR_ATTACHMENT13(): GLenum {\r\n        return this._colorAttachments[13];\r\n    }\r\n    get COLOR_ATTACHMENT14(): GLenum {\r\n        return this._colorAttachments[14];\r\n    }\r\n    get COLOR_ATTACHMENT15(): GLenum {\r\n        return this._colorAttachments[15];\r\n    }\r\n\r\n    /**\r\n     * Queries the valid range of color attachments and provides an interface for convenience.\r\n     */\r\n    protected queryColorAttachments(context: Context): void {\r\n        const gl = context.gl;\r\n\r\n        this._colorAttachments = new Array<GLenum>(16);\r\n        this._colorAttachments[0] = gl.COLOR_ATTACHMENT0;\r\n\r\n        /**\r\n         * In WebGL, draw buffers is supported by extension, in WebGL2 by default.\r\n         * This maps the various default color attachment identifier to a unified interface.\r\n         */\r\n        switch (context.backend) {\r\n            case Context.BackendType.WebGL1:\r\n                const drawBuffers = context.supportsDrawBuffers ? context.drawBuffers : undefined;\r\n\r\n                this._colorAttachmentMin = this._colorAttachments[0];\r\n                this._colorAttachmentMax = this._colorAttachmentMin + (drawBuffers ?\r\n                    gl.getParameter(drawBuffers.MAX_COLOR_ATTACHMENTS_WEBGL) : 0) as GLenum;\r\n\r\n                this._colorAttachments[0] = drawBuffers ? drawBuffers.COLOR_ATTACHMENT0_WEBGL : gl.COLOR_ATTACHMENT0;\r\n                if (!drawBuffers) {\r\n                    break;\r\n                }\r\n                for (let i = 1; i < 16; ++i) {\r\n                    // Enums are assumed to be incremental in their definition ...\r\n                    this._colorAttachments[i] = drawBuffers.COLOR_ATTACHMENT0_WEBGL + i;\r\n                }\r\n                break;\r\n\r\n            case Context.BackendType.WebGL2:\r\n            /* falls through */\r\n            default:\r\n                this._colorAttachmentMin = context.gl.COLOR_ATTACHMENT0;\r\n                this._colorAttachmentMax = context.gl.COLOR_ATTACHMENT0\r\n                    + gl.getParameter(gl.MAX_COLOR_ATTACHMENTS) as GLenum;\r\n\r\n                for (let i = 0; i < 16; ++i) {\r\n                    // Enums are assumed to be incremental in their definition ...\r\n                    this._colorAttachments[i] = gl.COLOR_ATTACHMENT0 + i;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    // INSTANCED ARRAYS\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays/drawArraysInstancedANGLE\r\n     */\r\n    drawArraysInstanced: (mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei) => void;\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays/drawElementsInstancedANGLE\r\n     */\r\n    drawElementsInstanced: (mode: GLenum, count: GLint, type: GLsizei, offset: GLintptr, primcount: GLsizei) => void;\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays/vertexAttribDivisorANGLE\r\n     */\r\n    vertexAttribDivisor: (index: GLuint, divisor: GLuint) => void;\r\n\r\n    /**\r\n     * Evaluate wether or not ANGLE_instanced_arrays is supported (either by extension or in WebGL2 by default) and, if\r\n     * supported, binds the associated functions.\r\n     * @param context - WebGL context to query extension support in\r\n     */\r\n    protected queryInstancedArraySupport(context: Context): void {\r\n        if (!context.isWebGL2 && !context.supportsInstancedArrays) {\r\n            return;\r\n        }\r\n\r\n        this.drawArraysInstanced = context.isWebGL2 ?\r\n            (mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei) =>\r\n                context.gl.drawArraysInstanced(mode, first, count, instanceCount) :\r\n            (mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei) =>\r\n                context.instancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\r\n\r\n        this.drawElementsInstanced = context.isWebGL2 ?\r\n            (mode: GLenum, count: GLint, type: GLsizei, offset: GLintptr, primcount: GLsizei) =>\r\n                context.gl.drawElementsInstanced(mode, count, type, offset, primcount) :\r\n            (mode: GLenum, count: GLint, type: GLsizei, offset: GLintptr, primcount: GLsizei) =>\r\n                context.instancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, primcount);\r\n\r\n        this.vertexAttribDivisor = context.isWebGL2 ?\r\n            (index: GLuint, divisor: GLuint) => context.gl.vertexAttribDivisor(index, divisor) :\r\n            (index: GLuint, divisor: GLuint) => context.instancedArrays.vertexAttribDivisorANGLE(index, divisor);\r\n    }\r\n\r\n\r\n    // DRAW BUFFERS\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL\r\n     */\r\n    drawBuffers: ((buffers: Array<GLenum>) => void) | undefined = undefined;\r\n\r\n    /**\r\n     * Evaluate wether or not WEBGL_draw_buffers is supported (either by extension or in WebGL2 by default) and, if\r\n     * supported, binds the associated functions.\r\n     * @param context - WebGL context to query extension support in.\r\n     * @returns - True if WEBGL_draw_buffers is supported and associated functions are bound.\r\n     */\r\n    protected queryDrawBuffersSupport(context: Context): void {\r\n        if (!context.isWebGL2 && !context.supportsDrawBuffers) {\r\n            return;\r\n        }\r\n\r\n        this.drawBuffers = context.isWebGL2 ?\r\n            (buffers: Array<GLenum>) => context.gl.drawBuffers(buffers) :\r\n            (buffers: Array<GLenum>) => context.drawBuffers.drawBuffersWEBGL(buffers);\r\n    }\r\n\r\n\r\n    // VERTEX ARRAY\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/createVertexArray\r\n     */\r\n    createVertexArray: () => any /* WebGLVertexArrayObject */;\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/createVertexArray\r\n     */\r\n    deleteVertexArray: (arrayObject: any /* WebGLVertexArrayObject */) => void;\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/isVertexArray\r\n     */\r\n    isVertexArray: (arrayObject: any /* WebGLVertexArrayObject */) => GLboolean;\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/bindVertexArray\r\n     */\r\n    bindVertexArray: (arrayObject: any /* WebGLVertexArrayObject */) => void;\r\n\r\n    protected queryVertexArrayObjectSupport(context: Context): void {\r\n        if (!context.isWebGL2 && !context.supportsVertexArrayObject) {\r\n            return;\r\n        }\r\n\r\n        this.createVertexArray = context.isWebGL2 ?\r\n            () => context.gl.createVertexArray() :\r\n            () => context.vertexArrayObject.createVertexArrayOES();\r\n\r\n        this.deleteVertexArray = context.isWebGL2 ?\r\n            (arrayObject: any) => context.gl.deleteVertexArray(arrayObject) :\r\n            (arrayObject: any) => context.vertexArrayObject.deleteVertexArrayOES(arrayObject);\r\n\r\n        this.isVertexArray = context.isWebGL2 ?\r\n            (arrayObject: any) => context.gl.isVertexArray(arrayObject) :\r\n            (arrayObject: any) => context.vertexArrayObject.isVertexArrayOES(arrayObject);\r\n\r\n        this.bindVertexArray = context.isWebGL2 ?\r\n            (arrayObject: any) => context.gl.bindVertexArray(arrayObject) :\r\n            (arrayObject: any) => context.vertexArrayObject.bindVertexArrayOES(arrayObject);\r\n    }\r\n\r\n\r\n    // MAX UNIFORM COMPONENTS\r\n\r\n    /** @see {@link maxUniformVec3Components} */\r\n    protected _maxUniformVec3Components: GLint | undefined;\r\n    /**\r\n     * The maximum number of floats, integers, or booleans that can be in storage for a vertex shader.\r\n     */\r\n    get maxUniformVec3Components(): GLint | undefined {\r\n        return this._maxUniformVec3Components;\r\n    }\r\n\r\n    /**\r\n     * Query and store the maximum number of floats, integers, or booleans that can be in storage for a vertex shader.\r\n     * @param context - WebGL context to query the value in.\r\n     */\r\n    protected queryMaxUniformVec3Components(context: Context): void {\r\n        const gl = context.gl;\r\n\r\n        this._maxUniformVec3Components = context.isWebGL2\r\n            ? gl.getParameter(gl.MAX_VERTEX_UNIFORM_COMPONENTS)\r\n            : gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS) * 3;\r\n    }\r\n\r\n\r\n    // TEX IMAGE INTERFACE\r\n\r\n\r\n    /**\r\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\r\n     */\r\n    texImage2D: (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei,\r\n        border: GLint, format: GLenum, type: GLenum, source?: TexImage2DData, offset?: GLintptr) => void;\r\n\r\n    protected queryTexImageInterface(context: Context): void {\r\n        const gl = context.gl;\r\n\r\n        if (context.isWebGL2) {\r\n            this.texImage2D = (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei,\r\n                border: GLint, format: GLenum, type: GLenum, source?: TexImage2DData, offset?: GLintptr) => {\r\n                /* Please note that source must be 'null', not '0' nor 'undefined' for ie and edge to work. */\r\n                if (source instanceof ArrayBuffer) {\r\n                    return gl.texImage2D(target, level, internalformat, width, height, border\r\n                        /* tslint:disable-next-line:no-null-keyword */\r\n                        , format, type, source === undefined ? null : source, offset);\r\n                }\r\n                assert(offset === undefined, `offset expected to be undefined for non ArrayBuffer source`);\r\n                return gl.texImage2D(target, level, internalformat, width, height, border\r\n                    /* tslint:disable-next-line:no-null-keyword */\r\n                    , format, type, source === undefined ? null : source);\r\n            };\r\n\r\n        } else {\r\n            this.texImage2D = (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei,\r\n                border: GLint, format: GLenum, type: GLenum, source?: TexImage2DData, offset?: GLintptr) => {\r\n\r\n                if (source === undefined) {\r\n                    /* tslint:disable-next-line:no-null-keyword */\r\n                    return gl.texImage2D(target, level, internalformat, width, height, border, format, type, null);\r\n                }\r\n                if (source instanceof Int8Array\r\n                    || source instanceof Uint8Array\r\n                    || source instanceof Uint8ClampedArray\r\n                    || source instanceof Int16Array\r\n                    || source instanceof Uint16Array\r\n                    || source instanceof Int32Array\r\n                    || source instanceof Uint32Array\r\n                    || source instanceof Float32Array\r\n                    || source instanceof Float64Array\r\n                    || source instanceof DataView) {\r\n                    return gl.texImage2D(target, level, internalformat, width, height, border, format, type, source);\r\n                }\r\n                return gl.texImage2D(target, level, internalformat, format, type, source);\r\n            };\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nimport { assert, logIf, LogLevel } from './auxiliaries';\r\nimport { GLsizei2 } from './tuples';\r\n\r\n\r\n/**\r\n * Mixin that incorporates resize event handling. The mixin depends on the global window resize event and forwards any\r\n * resize event to every existing instance of this class (global tracking).\r\n */\r\nexport abstract class Resizable {\r\n\r\n    /**\r\n     * Event identifier for resize event (single point of definition).\r\n     */\r\n    private static readonly EVENT_IDENTIFIER = 'resize';\r\n\r\n    /**\r\n     * Array for referencing all instances of resizable.\r\n     */\r\n    private static instances: Array<Resizable> = [];\r\n\r\n    /**\r\n     * Resize event availability (cached value).\r\n     */\r\n    private static eventSupported = false;\r\n\r\n\r\n    /**\r\n     * This function is called when the window is resized (and the event listener was successfully registered). The\r\n     * event is forwarded to each registered resizable object.\r\n     */\r\n    protected static resize(): void {\r\n        assert(Resizable.instances.length > 0, `resize event received without a single resizable registered`);\r\n        Resizable.instances.forEach((item) => item.onResize());\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    /**\r\n     * Retrieves the native width and height of a given element in device pixel (size on screen in physical pixels). If\r\n     * the element is not found, or either window or its device pixel ratio are not defined, a default vec2 is returned.\r\n     * @param element - DOM element to get the width and height in (native) pixel from.\r\n     * @returns - Size of the element in native screen pixels.\r\n     */\r\n    static elementSize(element: HTMLElement): GLsizei2 {\r\n        if (element === undefined || window === undefined || typeof window.devicePixelRatio !== 'number') {\r\n            return [0, 0];\r\n        }\r\n\r\n        const scale = window.devicePixelRatio;\r\n        const style = getComputedStyle(element);\r\n        const size: GLsizei2 = [parseInt(style.width as string, 10), parseInt(style.height as string, 10)];\r\n\r\n        size[0] = Math.round(size[0] * scale);\r\n        size[1] = Math.round(size[1] * scale);\r\n\r\n        return size;\r\n    }\r\n\r\n\r\n    /**\r\n     * Every instance of resizable is registered in the global list of resizable instances. The first instance, however,\r\n     * triggers the registration of the global window resize event listener.\r\n     */\r\n    constructor() {\r\n        if (Resizable.instances.length === 0) { // initialize once\r\n            const event = `on${Resizable.EVENT_IDENTIFIER}`;\r\n            /* istanbul ignore next */\r\n            Resizable.eventSupported = document && (event in document.documentElement || event in document.body);\r\n\r\n            logIf(!Resizable.eventSupported, LogLevel.Warning, `resize event not supported`);\r\n        }\r\n        /* istanbul ignore next */\r\n        if (Resizable.instances.length === 0 && Resizable.eventSupported) {\r\n            window.addEventListener(Resizable.EVENT_IDENTIFIER, this._resizeEventListener);\r\n        }\r\n        Resizable.instances.push(this);\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    protected _resizeEventListener = () => Resizable.resize();\r\n\r\n    /**\r\n     * Unregister this instance from the global list of resizable instances. On destruction of the last instance, the\r\n     * resize event handle is removed. Please note that destruction needs to be invoked explicitly.\r\n     */\r\n    protected dispose(): void {\r\n        const i = Resizable.instances.indexOf(this);\r\n        assert(i !== -1, `invalid reference counting of resizable instances`);\r\n\r\n        Resizable.instances.splice(i, 1);\r\n\r\n        /* istanbul ignore next */\r\n        if (Resizable.instances.length === 0 && Resizable.eventSupported) {\r\n            window.removeEventListener(Resizable.EVENT_IDENTIFIER, this._resizeEventListener);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * This function is invoked when a resize event happened.\r\n     */\r\n    protected abstract onResize(): void;\r\n\r\n}\r\n","\r\nimport { clamp } from './gl-matrix-extensions';\r\n\r\nimport { assert } from './auxiliaries';\r\nimport { Color } from './color';\r\nimport { fetchJsonAsync } from './fetch';\r\n\r\n\r\n// /**\r\n//  * Basic color gradient representation that uses color stops, a color at a specific position, to allow for color\r\n//    queries\r\n//  * at arbitrary positions. The gradient provides {@link Color} instances to facilitate the use of various color\r\n//    spaces.\r\n//  * ```\r\n//  * const gradient = new ColorGradient();\r\n//  * gradient.add(new gloperate.Color([0.09, 0.43, 0.58]), 0.2);\r\n//  * gradient.add(new gloperate.Color([0.97, 0.98, 0.98]), 0.8);\r\n//  * ...\r\n//  * gradient.color(0.66).rgb; // [0.7646666765213013, 0.8516666889190674, 0.8866666555404663]\r\n//  * gradient.lerpSpace = ColorGradient.LerpSpace.LAB;\r\n//  * gradient.color(0.66).rgb; // [0.8264121413230896, 0.8263672590255737, 0.8262822031974792]\r\n//  * ```\r\n//  */\r\n\r\n\r\nexport class ColorScale {\r\n\r\n    /**\r\n     * Color scale preset file schema.\r\n     */\r\n    private static readonly SCHEMA: any = require('./data/colorscalepresets.schema.json');\r\n\r\n    /** @see{@link hint} */\r\n    protected _hint: ColorScale.InterpolationHint;\r\n\r\n    /** @ee{@link colors} */\r\n    protected _colors = new Array<Color>();\r\n\r\n\r\n    /**\r\n     * Returns the stride for interleaved arrays of color components based on the array type.\r\n     * @param type - One of the supported color array types.\r\n     */\r\n    protected static stride(type: ColorScale.ArrayType): number {\r\n        switch (type) {\r\n            default:\r\n            case ColorScale.ArrayType.RGB:\r\n            case ColorScale.ArrayType.RGBf:\r\n                return 3;\r\n            case ColorScale.ArrayType.RGBA:\r\n            case ColorScale.ArrayType.RGBAf:\r\n                return 4;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Fetches a color schema file, and, if successful, picks a preset for the specified number of steps. If the named\r\n     * preset cannot be found, a list of all available presets within the file is logged and undefined is returned. If\r\n     * the preset does not specify exact colors for the requested number of steps, the color array with the most colors\r\n     * and linear interpolation in CIE-LAB is used to generate the scale.\r\n     *\r\n     * The following preset libraries are included within webgl-operate but are required to be loaded dynamically (in\r\n     * order to reduce bundle size and memory use):\r\n     * ```\r\n     * ColorScale.fromPreset('./colorbrewer.json', 'YlGnBu', 7);\r\n     * ColorScale.fromPreset('./smithwalt.json', 'viridis', 16);\r\n     * ```\r\n     * And resolving the promise:\r\n     * ```\r\n     * var scale = undefined;\r\n     * gloperate.ColorScale.fromPreset('./data/colorbrewer.json', 'YlGnBu', 5).then((value) => scale = value);\r\n     * ```\r\n     * @param url - Uniform resource locator string referencing a json file complying to the JSON color schema.\r\n     * @param preset - Name of a preset to choose from the json file.\r\n     * @param stepCount - Number of steps to be used for the resulting color scheme.\r\n     * @returns - Undefined if loading and validating the json failed or the preset was not found. Else, a color scale.\r\n     */\r\n    static fromPreset(url: string, preset: string, stepCount: number): Promise<ColorScale> {\r\n\r\n        /* This transforms the fetched json data into a color scale. */\r\n        const transform = (data: any): ColorScale | undefined => {\r\n\r\n            /* Find named preset. */\r\n            let p: ColorScale.Preset | undefined;\r\n            for (const item of data) {\r\n                if (item.identifier !== preset) {\r\n                    continue;\r\n                }\r\n                p = item as ColorScale.Preset;\r\n                break;\r\n            }\r\n            if (p === undefined) {\r\n                return undefined;\r\n            }\r\n\r\n            const type = p.format;\r\n            const stride = ColorScale.stride(type);\r\n\r\n            /* Find best color array match for targeted step count. The best match is either the exact number of\r\n            colors or the largest available number. */\r\n            const colorsByStepCount = p.colors;\r\n            let index = colorsByStepCount.length - 1;\r\n            for (let i = 0; i < colorsByStepCount.length; ++i) {\r\n                if (colorsByStepCount[i].length !== stepCount * stride) {\r\n                    continue;\r\n                }\r\n                index = i;\r\n                break;\r\n            }\r\n            const colors = colorsByStepCount[index];\r\n\r\n            /* Check if there is a matching positions array to the selected color array. */\r\n            const positionsByStepCount = p.positions;\r\n            if (positionsByStepCount === undefined) {\r\n                return ColorScale.fromArray(colors, type, stepCount, undefined);\r\n            }\r\n\r\n            let positions: Array<number> | undefined;\r\n            for (let i = 0; i < positionsByStepCount.length; ++i) {\r\n                if (positionsByStepCount![i].length !== colors.length) {\r\n                    continue;\r\n                }\r\n                positions = positionsByStepCount![i];\r\n            }\r\n            return ColorScale.fromArray(colors, type, stepCount, positions);\r\n\r\n        };\r\n        return fetchJsonAsync<ColorScale>(url, transform, ColorScale.SCHEMA.properties);\r\n    }\r\n\r\n    /**\r\n     * Creates a color scale from a set of colors and (optional) positions for a specific step count. If no positions\r\n     * are specified, the colors are spread equally. A step count of 1 returns the first color.\r\n     * @param interleavedColorComponents - Interleaved array of color components, e.g., red, green, and blue.\r\n     * @param type - The array type specifying the number of subsequent color components for each color.\r\n     * @param stepCount - Number of colors to be computed from the color scale.\r\n     * @param positions - Interleaved array of positions, matching the length of the color array divided by stride.\r\n     * @returns - A color scale of fixed number and position of colors for index and linear interpolation access.\r\n     */\r\n    static fromArray(interleavedColorComponents: Array<number>, type: ColorScale.ArrayType,\r\n        stepCount: number, positions?: Array<number>): ColorScale {\r\n        if (stepCount === 0 || interleavedColorComponents.length === 0) {\r\n            return new ColorScale();\r\n        }\r\n\r\n        const array = interleavedColorComponents; // just a shorter handle\r\n        const stride = ColorScale.stride(type);\r\n        const size = array.length / stride;\r\n        const colors = new Array<Color>(size);\r\n\r\n        /* Transform the interleaved array values into instances of Color. */\r\n        for (let i = 0; i < array.length; i += stride) {\r\n            const color = new Color();\r\n            switch (type) {\r\n                case ColorScale.ArrayType.RGB:\r\n                    color.fromUI8(array[i + 0], array[i + 1], array[i + 2]);\r\n                    break;\r\n                case ColorScale.ArrayType.RGBA:\r\n                    color.fromUI8(array[i + 0], array[i + 1], array[i + 2], array[i + 3]);\r\n                    break;\r\n                case ColorScale.ArrayType.RGBf:\r\n                    color.fromF32(array[i + 0], array[i + 1], array[i + 2]);\r\n                    break;\r\n                case ColorScale.ArrayType.RGBAf:\r\n                    color.fromF32(array[i + 0], array[i + 1], array[i + 2], array[i + 3]);\r\n                    break;\r\n                default:\r\n            }\r\n            colors[i / stride] = color;\r\n        }\r\n\r\n        const scale = new ColorScale();\r\n\r\n        /* No further computation required if colors already match step count and no positions are given. */\r\n        if (positions === undefined && stepCount === size) {\r\n            scale._colors = colors;\r\n            return scale;\r\n        }\r\n\r\n        if (stepCount === 1) {\r\n            scale._colors.push(colors[0]);\r\n        }\r\n\r\n        /* Note: At this point, stepCount is always > 1. */\r\n\r\n        /* Provide equally distributed positions if none are given. */\r\n        if (positions === undefined) {\r\n            positions = new Array(size);\r\n            positions[0] = 0.0;\r\n\r\n            for (let i = 1; i < size; ++i) {\r\n                positions[i] = i / (size - 1);\r\n            }\r\n        }\r\n        assert(positions.length === colors.length, `expected number of positions to match number of colors`);\r\n\r\n        let lower = 0;\r\n        let upper = lower + 1;\r\n        const last = size - 1;\r\n\r\n        /* Compute requested number of colors using linear interpolation of positioned colors. */\r\n        for (let i = 0; i < stepCount; ++i) {\r\n            const position = i === 0 ? 0 : i / (stepCount - 1);\r\n\r\n            /* If position is before first or after last stop, return that stop respectively. */\r\n            if (position <= positions[lower]) {\r\n                scale._colors.push(colors[lower]);\r\n                continue;\r\n            } else if (positions[last] <= position) {\r\n                scale._colors.push(colors[last]);\r\n                continue;\r\n            }\r\n\r\n            /* There are at least two stops and the position is within these stops ... */\r\n\r\n            for (let u = lower + 1; u < size; ++u) {\r\n                if (positions[u] < position) {\r\n                    continue;\r\n                }\r\n                upper = u;\r\n                lower = u - 1;\r\n                break;\r\n            }\r\n            const a = (position - positions[lower]) / (positions[upper] - positions[lower]);\r\n            scale._colors.push(Color.mix(colors[lower], colors[upper], a, Color.Space.LAB));\r\n        }\r\n        return scale;\r\n    }\r\n\r\n\r\n    /**\r\n     * Queries the color at a given position by identifying the adjacent stops (lower and upper bound) and either\r\n     * interpolating between these or picking the nearest of both. In case no stop exists, a default color will be\r\n     * returned. If only one color exists, this color is always returned no matter the position. If the position is\r\n     * out of bounds, either the first or last stop's color is returned.\r\n     * @param position - Position in [0.0, 1.0] to linear interpolate the color at.\r\n     * @param space - The color space that is to be used for linear interpolation of two colors.\r\n     * @returns - Color, depending on the gradient type either linearly or nearest filtered color.\r\n     */\r\n    lerp(position: number, space: Color.Space = Color.Space.LAB): Color | undefined {\r\n\r\n        if (this._colors.length === 0) {\r\n            return undefined;\r\n        }\r\n        if (this._colors.length === 1) {\r\n            return this._colors[0];\r\n        }\r\n\r\n        /* Return first or last color if position is 0.0 or 1.0 respectively. */\r\n        const clamped = clamp(position, 0.0, 1.0);\r\n        if (clamped <= 0.0) {\r\n            return this._colors[0];\r\n        } else if (clamped >= 1.0) {\r\n            return this._colors[this._colors.length - 1];\r\n        }\r\n\r\n        /* Find lower and upper bound for the given position. */\r\n        const posIndex = position * this._colors.length; // Position in index space.\r\n        const lower = Math.floor(posIndex);\r\n        const upper = lower + 1;\r\n        assert(upper < this._colors.length, `expected upper not exceed maximum color index`);\r\n\r\n        if (this._hint === ColorScale.InterpolationHint.Nearest) {\r\n            return this._colors[posIndex - lower > upper - posIndex ? lower : upper];\r\n        }\r\n        return Color.mix(this._colors[lower], this._colors[upper], posIndex - lower, space);\r\n    }\r\n\r\n    /**\r\n     * Returns the color with specified index. If the index is out of bounds, undefined is returned. Alternatively, the\r\n     * color array can be used directly @see{@link colors}.\r\n     * @param index - Index of the color to access.\r\n     */\r\n    color(index: number): Color | undefined {\r\n        if (index < 0 || index >= this._colors.length) {\r\n            return undefined;\r\n        }\r\n        return this._colors[index];\r\n    }\r\n\r\n    /**\r\n     * Returns the array containing the colors of the color scale.\r\n     */\r\n    get colors(): Array<Color> {\r\n        return this._colors;\r\n    }\r\n    set colors(colors: Array<Color>) {\r\n        this._colors = colors;\r\n    }\r\n\r\n\r\n    /**\r\n     * The interpolation hint used when accessing a color using interpolation, e.g., @see{@link lerp}.\r\n     */\r\n    set hint(hint: ColorScale.InterpolationHint) {\r\n        this._hint = hint;\r\n    }\r\n    get hint(): ColorScale.InterpolationHint {\r\n        return this._hint;\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts the color scale into an array of interleaved unsigned int values of the requested color space.\r\n     * @param space - Color space that is to be used for the array.\r\n     * @param alpha - Whether or not alpha is to be included.\r\n     */\r\n    bitsUI8(space: Color.Space = Color.Space.RGB, alpha: boolean = true): Uint8Array {\r\n        const size = this._colors.length;\r\n        const stride = alpha ? 4 : 3;\r\n        const bits = new Uint8Array(size * stride);\r\n\r\n        for (let i = 0; i < size; ++i) {\r\n            const color = this._colors[i].tuple(space, alpha);\r\n            bits[i * stride + 0] = color[0] * 255;\r\n            bits[i * stride + 1] = color[1] * 255;\r\n            bits[i * stride + 2] = color[2] * 255;\r\n            if (alpha) {\r\n                bits[i * stride + 3] = color[3] * 255;\r\n            }\r\n        }\r\n        return bits;\r\n    }\r\n\r\n    /**\r\n     * Converts the color scale into an array of interleaved float values of the requested color space.\r\n     * @param space - Color space that is to be used for the array.\r\n     * @param alpha - Whether or not alpha is to be included.\r\n     */\r\n    bitsF32(space: Color.Space = Color.Space.RGB, alpha: boolean = true): Float32Array {\r\n        const size = this._colors.length;\r\n        const stride = alpha ? 4 : 3;\r\n        const bits = new Float32Array(size * stride);\r\n\r\n        for (let i = 0; i < size; ++i) {\r\n            const color = this._colors[i].tuple(space, alpha);\r\n            bits[i * stride + 0] = color[0];\r\n            bits[i * stride + 1] = color[1];\r\n            bits[i * stride + 2] = color[2];\r\n            if (alpha) {\r\n                bits[i * stride + 3] = color[3];\r\n            }\r\n        }\r\n        return bits;\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides read access to the number of colors of this scale. This is a shortcut for this.colors.length.\r\n     */\r\n    get length(): number {\r\n        return this._colors.length;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace ColorScale {\r\n\r\n    /**\r\n     * Color interpolation type for a color scale.\r\n     */\r\n    export enum InterpolationHint {\r\n        Linear = 'linear',\r\n        Nearest = 'nearest',\r\n    }\r\n\r\n    export enum ScaleType {\r\n        sequential = 'sequential',\r\n        diverging = 'diverging',\r\n        qualitative = 'qualitative',\r\n    }\r\n\r\n    export enum ArrayType {\r\n        RGB = 'rgb',\r\n        RGBf = 'rgbf',\r\n        RGBA = 'rgba',\r\n        RGBAf = 'rgbaf',\r\n    }\r\n\r\n    export interface Preset {\r\n        identifier: string;\r\n        type: ScaleType | undefined;\r\n        format: ArrayType;\r\n        colors: Array<Array<number>>;\r\n        positions: Array<Array<number>> | undefined;\r\n    }\r\n\r\n}\r\n\r\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    this.unresolvedRefs.push(uri);\n  }\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!(schemas instanceof Array)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if (!options) {\n    options = {};\n  }\n  var propertyName = options.propertyName || 'instance';\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var base = urilib.resolve(options.base||anonymousBase, schema.id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, propertyName, base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if (schema) {\n    var result = this.validateSchema(instance, schema, options, ctx);\n    if (!result) {\n      throw new Error('Result undefined');\n    }\n    return result;\n  }\n  throw new SchemaError('no schema specified', schema);\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n    // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (schema['extends'] instanceof Array) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema;\n  if (switchSchema = shouldResolve(schema)) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.propertyPath, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n}\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref;\n  if(ref = shouldResolve(schema)) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n}\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance) === 'object' && !(instance instanceof Array) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'exclusiveMinimum': true,\n  'exclusiveMaximum': true,\n  'additionalItems': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      return v.id && ('<' + v.id + '>') || (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  options.throwError = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n\n  if (! res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n      ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var msg = (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n      ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, properties[property], options, ctx);\n    }\n\n    var prop = Object.hasOwnProperty.call(instance, property) ? instance[property] : undefined;\n    var res = this.validateSchema(prop, properties[property], options, ctx.makeChild(properties[property], property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existance tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"additionalProperty \" + JSON.stringify(property) + \" exists in instance when not allowed\",\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var expr = new RegExp(pattern);\n      if (!expr.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, patternProperties[pattern], options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], patternProperties[pattern], options, ctx.makeChild(patternProperties[pattern], property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    })\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (!schema.items) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    var items = Array.isArray(schema.items) ? (schema.items[i] || schema.additionalItems) : schema.items;\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = true;\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    valid = instance > schema.minimum;\n  } else {\n    valid = instance >= schema.minimum;\n  }\n  if (!valid) {\n    result.addError({\n      name: 'minimum',\n      argument: schema.minimum,\n      message: \"must have a minimum value of \" + schema.minimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid;\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    valid = instance < schema.maximum;\n  } else {\n    valid = instance <= schema.maximum;\n  }\n  if (!valid) {\n    result.addError({\n      name: 'maximum',\n      argument: schema.maximum,\n      message: \"must have a maximum value of \" + schema.maximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument)\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatability with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\"\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(instance[n]===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.match(schema.pattern)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates that every item in an instance array is unique, when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  function testArrays (v, i, a) {\n    for (var j = i + 1; j < a.length; j++) if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n    return true;\n  }\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var schemaId = type && type.id && ('<' + type.id + '>') || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","\r\nimport { assert, log, LogLevel } from './auxiliaries';\r\nimport { byteSizeOfFormat } from './formatbytesizes';\r\n\r\nimport { Bindable } from './bindable';\r\nimport { TexImage2DData } from './gl2facade';\r\nimport { Initializable } from './initializable';\r\nimport { AbstractObject } from './object';\r\n\r\n\r\n/**\r\n * Wrapper for an WebGL cube texture providing size accessors and requiring for bind, unbind, resize, validity, and\r\n * initialization implementations. The texture cube object is created on initialization and deleted on uninitialization.\r\n * After being initialized, the texture cube can be resized, reformated, and data can set directly or via load:\r\n * ```\r\n * const cubeMap = new TextureCube(context, 'CubeMap');\r\n * cubeMap.initialize(512, gl.RGB8, gl.RGB, gl.UNSIGNED_BYTE);\r\n * cubeMap.load({\r\n *     positiveX: 'data/cubemap.px.png', negativeX: 'data/cubemap.nx.png',\r\n *     positiveY: 'data/cubemap.py.png', negativeY: 'data/cubemap.ny.png',\r\n *     positiveZ: 'data/cubemap.pz.png', negativeZ: 'data/cubemap.nz.png',\r\n * }).then(() => this.invalidate(true);\r\n * ```\r\n * Please note that each of the six textures of a texture cube is required to be of the exact same, square dimensions.\r\n * This is reflected within this classes interface by providing a single size property in favor to width and height.\r\n */\r\nexport class TextureCube extends AbstractObject<WebGLTexture> implements Bindable {\r\n\r\n    /**\r\n     * Default texture, e.g., used for unbind.\r\n     */\r\n    static readonly DEFAULT_TEXTURE = undefined;\r\n\r\n    /** @see {@link size} */\r\n    protected _size: GLsizei = 0;\r\n\r\n    /** @see {@link internalFormat} */\r\n    protected _internalFormat: GLenum = 0;\r\n\r\n    /** @see {@link format} */\r\n    protected _format: GLenum = 0;\r\n\r\n    /** @see {@link type} */\r\n    protected _type: GLenum = 0;\r\n\r\n    /**\r\n     * For tracking approximate use of GPU storage in bytes per face.\r\n     */\r\n    protected _bytes: Array<GLsizei> = [0, 0, 0, 0, 0, 0];\r\n\r\n\r\n    /**\r\n     * Provides an ID for each of the six texture cube identifier (0: +x, 1: -x, 2: +y, 3: -y, 4: +z, 5: -z).\r\n     * @param face - Texture cube face identifier, e.g., `TEXTURE_CUBE_MAP_POSITIVE_X`.\r\n     * @returns - Face ID in the following sequence: 0: +x, 1: -x, 2: +y, 3: -y, 4: +z, 5: -z.\r\n     */\r\n    protected faceID(face: GLenum): GLint {\r\n        const gl = this._context.gl;\r\n        switch (face) {\r\n            case gl.TEXTURE_CUBE_MAP_POSITIVE_X:\r\n                return 0;\r\n            case gl.TEXTURE_CUBE_MAP_NEGATIVE_X:\r\n                return 1;\r\n            case gl.TEXTURE_CUBE_MAP_POSITIVE_Y:\r\n                return 2;\r\n            case gl.TEXTURE_CUBE_MAP_NEGATIVE_Y:\r\n                return 3;\r\n            case gl.TEXTURE_CUBE_MAP_POSITIVE_Z:\r\n                return 4;\r\n            case gl.TEXTURE_CUBE_MAP_NEGATIVE_Z:\r\n                return 5;\r\n            default:\r\n                assert(false, `expected texture cube map identifier (${gl.TEXTURE_CUBE_MAP_POSITIVE_X}, ` +\r\n                    `${gl.TEXTURE_CUBE_MAP_NEGATIVE_X}, ${gl.TEXTURE_CUBE_MAP_POSITIVE_Y}, ` +\r\n                    `${gl.TEXTURE_CUBE_MAP_NEGATIVE_Y}, ${gl.TEXTURE_CUBE_MAP_POSITIVE_Z}, or` +\r\n                    `${gl.TEXTURE_CUBE_MAP_NEGATIVE_Z}), given ${face}`);\r\n                return -1;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Create a texture object on the GPU.\r\n     * @param size - Initial size (width/height) of each face, which are required to be a square texture.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     */\r\n    protected create(size: GLsizei, internalFormat: GLenum, format: GLenum, type: GLenum): WebGLTexture | undefined {\r\n\r\n        assert(size > 0, `texture cube requires valid size (width/height) of greater than zero`);\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        this._object = gl.createTexture();\r\n\r\n        this._size = size;\r\n        this._internalFormat = internalFormat;\r\n        this._format = format;\r\n        this._type = type;\r\n\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._object);\r\n\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, this._internalFormat,\r\n            this._size, this._size, 0, this._format, this._type);\r\n\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, TextureCube.DEFAULT_TEXTURE);\r\n        /* note that gl.isTexture requires the texture to be bound */\r\n        this._valid = gl.isTexture(this._object);\r\n        this.context.allocationRegister.reallocate(this._identifier, 0);\r\n\r\n        return this._object;\r\n    }\r\n\r\n    /**\r\n     * Delete the texture object on the GPU. This should have the reverse effect of `create`.\r\n     */\r\n    protected delete(): void {\r\n        assert(this._object instanceof WebGLTexture, `expected WebGLTexture object`);\r\n        this._context.gl.deleteTexture(this._object);\r\n\r\n        this._object = undefined;\r\n        this._valid = false;\r\n\r\n        this._internalFormat = 0;\r\n        this._format = 0;\r\n        this._type = 0;\r\n\r\n        this._size = 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * Bind the texture object to a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    bind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._object);\r\n    }\r\n\r\n    /**\r\n     * Unbind the texture object from a texture unit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    unbind(unit?: GLenum): void {\r\n        const gl = this.context.gl;\r\n        if (unit) {\r\n            gl.activeTexture(unit);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, TextureCube.DEFAULT_TEXTURE);\r\n    }\r\n\r\n    /**\r\n     * Asynchronous load of multiple images (specified per texture cube face) via URI or data URI. Please note\r\n     * that the texture will not be resized and is assumed to be resized upfront accordingly.\r\n     * @param urisByFace - URI linking the image that should be loaded for a specific face. Data URI is also supported.\r\n     * @param crossOrigin - Enable cross origin data loading.\r\n     * @returns - Promise for handling images load status.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    load(urisByFace: TextureCube.PerFaceURI, crossOrigin: boolean = false): Promise<void> {\r\n\r\n        const gl = this.context.gl;\r\n        return new Promise((resolve, reject) => {\r\n            const images = new Array<[GLenum, string]>();\r\n\r\n            if (urisByFace.positiveX) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_POSITIVE_X, urisByFace.positiveX]);\r\n            }\r\n            if (urisByFace.negativeX) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_NEGATIVE_X, urisByFace.negativeX]);\r\n            }\r\n            if (urisByFace.positiveY) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_POSITIVE_Y, urisByFace.positiveY]);\r\n            }\r\n            if (urisByFace.negativeY) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, urisByFace.negativeY]);\r\n            }\r\n            if (urisByFace.positiveZ) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_POSITIVE_Z, urisByFace.positiveZ]);\r\n            }\r\n            if (urisByFace.negativeZ) {\r\n                images.push([gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, urisByFace.negativeZ]);\r\n            }\r\n\r\n            let waiting = images.length;\r\n            for (const tuple of images) {\r\n                const image = new Image();\r\n                image.onerror = () => reject();\r\n\r\n                image.onload = () => {\r\n                    if (image.width !== image.height) {\r\n                        log(LogLevel.Warning, `image ignored, width and height expected to be equal (square image)`);\r\n                        return;\r\n                    }\r\n                    if (image.width !== this._size) {\r\n                        log(LogLevel.Warning, `image ignored, width and height expected to match ` +\r\n                            `this texture's size ${this._size}, given ${image.width}`);\r\n                        return;\r\n                    }\r\n                    this.data([tuple[0], image]);\r\n\r\n                    /* Resolve the promise when all requested images have been loaded. */\r\n                    waiting = waiting - 1;\r\n                    if (waiting === 0) {\r\n                        resolve();\r\n                    }\r\n                };\r\n\r\n                if (crossOrigin) {\r\n                    image.crossOrigin = 'anonymous';\r\n                }\r\n                /* Trigger asynchronous loading of image data. */\r\n                image.src = tuple[1];\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Pass data of six images to the texture cube object.\r\n     * @param data - Per face texel data that will be copied into the objects data store. Either provided via object\r\n     * or as tuple, providing the data associated to the targeted face (as GLenum).\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    data(data: TextureCube.PerFaceData | [GLenum, TexImage2DData], bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n        const gl2facade = this.context.gl2facade;\r\n\r\n        let bytesPerFace = this._size * this._size * byteSizeOfFormat(this.context, this._internalFormat as GLenum);\r\n        // Fix in case of implicit float and half-float texture generation (e.g., in webgl with half_float support).\r\n        if (this._type === this.context.gl2facade.HALF_FLOAT && this._internalFormat !== this.context.gl.RGBA16F) {\r\n            bytesPerFace *= 2;\r\n        } else if (this._type === this.context.gl.FLOAT && this._internalFormat !== this.context.gl.RGBA16F) {\r\n            bytesPerFace *= 4;\r\n        }\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n\r\n        if (data instanceof Array && data.length === 2) { /* if tuple is provided... */\r\n            gl2facade.texImage2D(data[0], 0, this._internalFormat,\r\n                this._size, this._size, 0, this._format, this._type, data[1]);\r\n            const id = this.faceID(data[0]);\r\n            this.context.allocationRegister.deallocate(this._identifier, this._bytes[id]);\r\n            this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n            this._bytes[id] = bytesPerFace;\r\n\r\n        } else {\r\n            const perFaceData = data as TextureCube.PerFaceData;\r\n\r\n            if (perFaceData.positiveX !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, this._internalFormat,\r\n                    this._size, this._size, 0, this._format, this._type, perFaceData.positiveX);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[0]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[0] = bytesPerFace;\r\n            }\r\n            if (perFaceData.negativeX !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, this._internalFormat,\r\n                    this._size, this._size, 0, this._format, this._type, perFaceData.negativeX);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[1]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[1] = bytesPerFace;\r\n            }\r\n            if (perFaceData.positiveY !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, this._internalFormat,\r\n                    this._size, this._size, 0, this._format, this._type, perFaceData.positiveY);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[2]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[2] = bytesPerFace;\r\n            }\r\n            if (perFaceData.negativeY !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, this._internalFormat,\r\n                    this._size, this._size, 0, this._format, this._type, perFaceData.negativeY);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[3]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[3] = bytesPerFace;\r\n            }\r\n            if (perFaceData.positiveZ !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, this._internalFormat,\r\n                    this._size, this._size, 0, this._format, this._type, perFaceData.positiveZ);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[4]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[4] = bytesPerFace;\r\n            }\r\n            if (perFaceData.negativeZ !== undefined) {\r\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, this._internalFormat,\r\n                    this._size, this._size, 0, this._format, this._type, perFaceData.negativeZ);\r\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[5]);\r\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\r\n                this._bytes[5] = bytesPerFace;\r\n            }\r\n        }\r\n\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's magnification and minification filter.\r\n     * @param mag - Value for the TEXTURE_MAG_FILTER parameter.\r\n     * @param min - Value for the TEXTURE_MIN_FILTER parameter.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    filter(mag: GLenum, min: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, mag);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, min);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the texture object's wrapping function for s and t coordinates.\r\n     * @param wrap_s - Value for the TEXTURE_WRAP_S parameter.\r\n     * @param wrap_t - Value for the TEXTURE_WRAP_T parameter.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    /* tslint:disable-next-line:variable-name */\r\n    wrap(wrap_s: GLenum, wrap_t: GLenum, bind: boolean = true, unbind: boolean = true): void {\r\n        const gl = this.context.gl;\r\n\r\n        if (bind) {\r\n            this.bind();\r\n        }\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, wrap_s);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, wrap_t);\r\n        if (unbind) {\r\n            this.unbind();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This can be used to reformat the texture image without creating a new texture object. Please note that this\r\n     * resets the texture's image data to undefined. @see {@link data} for setting new image data.\r\n     * @param internalFormat - Internal format of the texture object.\r\n     * @param format - Format of the texture data even though no data is passed.\r\n     * @param type - Data type of the texel data.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    reformat(internalFormat: GLenum, format?: GLenum, type?: GLenum,\r\n        bind: boolean = true, unbind: boolean = true): void {\r\n\r\n        if (internalFormat === this._internalFormat\r\n            && (format === undefined || format === this._format)\r\n            && (type === undefined || type === this._type)) {\r\n            return;\r\n        }\r\n        assert(internalFormat !== undefined, `valid internal format expected`);\r\n        this._internalFormat = internalFormat;\r\n\r\n        if (format) {\r\n            this._format = format;\r\n        }\r\n        if (type) {\r\n            this._type = type;\r\n        }\r\n\r\n        this.data({ clearOnUndefined: true }, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * This should be used to efficiently resize the texture.\r\n     * @param size - Targeted/new size (width/height) of the texture in px.\r\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\r\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\r\n     */\r\n    @Initializable.assert_initialized()\r\n    resize(size: GLsizei, bind: boolean = true, unbind: boolean = true): void {\r\n        if (size === this._size) {\r\n            return;\r\n        }\r\n        this._size = size;\r\n\r\n        this.data({ clearOnUndefined: true }, bind, unbind);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of bytes this object approximately allocates on the GPU. The size will be zero when no\r\n     * image data was passed to the texture object.\r\n     */\r\n    get bytes(): GLsizei {\r\n        this.assertInitialized();\r\n        return this.context.allocationRegister.allocated(this._identifier);\r\n    }\r\n\r\n    /**\r\n     * Cached internal format of the texture for efficient resize. This can only be changed by re-initialization.\r\n     */\r\n    get internalFormat(): GLenum {\r\n        this.assertInitialized();\r\n        return this._internalFormat as GLenum;\r\n    }\r\n\r\n    /**\r\n     * Cached format of the data provided to the texture object for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get format(): GLenum {\r\n        this.assertInitialized();\r\n        return this._format as GLenum;\r\n    }\r\n\r\n    /**\r\n     * Cached type of the data provided to the texture used for efficient resize. This is set on initialization and\r\n     * might change on data transfers.\r\n     */\r\n    get type(): GLenum {\r\n        this.assertInitialized();\r\n        return this._type as GLenum;\r\n    }\r\n\r\n    /**\r\n     * The width/height of the texture object (each cube map face is required to be a square).\r\n     */\r\n    get size(): GLsizei {\r\n        this.assertInitialized();\r\n        return this._size;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace TextureCube {\r\n\r\n    export interface PerFaceURI {\r\n        positiveX?: string;\r\n        negativeX?: string;\r\n        positiveY?: string;\r\n        negativeY?: string;\r\n        positiveZ?: string;\r\n        negativeZ?: string;\r\n    }\r\n\r\n    export interface PerFaceData {\r\n        positiveX?: TexImage2DData;\r\n        negativeX?: TexImage2DData;\r\n        positiveY?: TexImage2DData;\r\n        negativeY?: TexImage2DData;\r\n        positiveZ?: TexImage2DData;\r\n        negativeZ?: TexImage2DData;\r\n        clearOnUndefined: boolean;\r\n    }\r\n\r\n}\r\n","\r\nimport { vec2 } from 'gl-matrix';\r\n\r\nimport { Camera } from './camera';\r\nimport { EventHandler } from './eventhandler';\r\nimport { MouseEventProvider } from './mouseeventprovider';\r\nimport { PointerLock } from './pointerlock';\r\nimport { Invalidate } from './renderer';\r\n\r\nimport { FirstPersonModifier } from './firstpersonmodifier';\r\nimport { TrackballModifier } from './trackballmodifier';\r\nimport { TurntableModifier } from './turntablemodifier';\r\n\r\n\r\n/**\r\n * This navigation is merely a design template/recipe for more refined, specialized navigation and provides some basic,\r\n * commonly used camera modifier such as turntable, first-person, as well as trackball. This implementation is also\r\n * unfinished and will be continued as soon as possible (e.g., first-person navigation is not usable for now).\r\n * @todo - Refine and comment this class to be usable at least as common/most-basic navigation auxiliary.\r\n */\r\nexport class Navigation {\r\n\r\n    /**\r\n     * The navigation's invalidation callback. This should usually be setup by the owning renderer and invoke the\r\n     * same callback the renderer has been given by the canvas. This invalidation is required, when continuous\r\n     * rendering is not present, events might cause need for new rendering requests.\r\n     */\r\n    protected _invalidate: Invalidate;\r\n\r\n    /** @see {@link camera} */\r\n    protected _camera: Camera;\r\n\r\n    /**\r\n     * Currently active metaphor.\r\n     */\r\n    protected _metaphor: Navigation.Metaphor;\r\n\r\n    /**\r\n     * Identifies the active camera modifier.\r\n     */\r\n    protected _mode: Navigation.Modes | undefined;\r\n\r\n    /**\r\n     * Specifies, whether or not rotation mode should be invoked on any move event, regardless of buttons.\r\n     */\r\n    protected _alwaysRotateOnMove = false;\r\n\r\n    /**\r\n     * First person camera modifier.\r\n     */\r\n    protected _firstPerson: FirstPersonModifier | undefined;\r\n\r\n    /**\r\n     * Trackball camera modifier.\r\n     */\r\n    protected _trackball: TrackballModifier | undefined;\r\n\r\n    /**\r\n     * Turntable camera modifier.\r\n     */\r\n    protected _turntable: TurntableModifier | undefined;\r\n\r\n    /**\r\n     * Even handler used to forward/map events to specific camera modifiers.\r\n     */\r\n    protected _eventHandler: EventHandler;\r\n\r\n\r\n    constructor(invalidate: Invalidate, mouseEventProvider: MouseEventProvider) {\r\n        this._invalidate = invalidate;\r\n\r\n        /* Create event handler that listens to mouse events. */\r\n        this._eventHandler = new EventHandler(invalidate, mouseEventProvider, undefined);\r\n\r\n        /* Listen to mouse events. */\r\n        this._eventHandler.pushMouseDownHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\r\n            this.onMouseDown(latests, previous));\r\n        this._eventHandler.pushMouseUpHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\r\n            this.onMouseUp(latests, previous));\r\n        this._eventHandler.pushMouseMoveHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\r\n            this.onMouseMove(latests, previous));\r\n\r\n        this._eventHandler.pushClickHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\r\n            this.onClick(latests, previous));\r\n\r\n        // this._eventHandler.pushMouseWheelHandler((latests: Array<WheelEvent>, previous: Array<WheelEvent>) =>\r\n        //     this.onWheel(latests, previous));\r\n\r\n        /* Explicitly use the setter here to create the appropriate modifier. */\r\n        this.metaphor = Navigation.Metaphor.Turntable;\r\n    }\r\n\r\n\r\n    /**\r\n     * Resolves the event to camera modifier mapping by returning the responsible camera modifier.\r\n     * @param event - Event to retrieve navigation mode for.\r\n     */\r\n    protected mode(event: MouseEvent | TouchEvent | KeyboardEvent): Navigation.Modes | undefined {\r\n\r\n        const isPrimaryButtonDown = (event as MouseEvent).buttons & 1;\r\n        const isMouseDown = event.type === 'mousedown';\r\n        const isMouseMove = event.type === 'mousemove';\r\n\r\n        const isPointerLockedRotate = PointerLock.active() && this._alwaysRotateOnMove;\r\n\r\n        if (isPointerLockedRotate || ((isMouseDown || isMouseMove) && isPrimaryButtonDown)) {\r\n            return Navigation.Modes.Rotate;\r\n\r\n            // } else if ((event.type === 'mousedown' || event.type === 'mousemove')\r\n            //     && ((event as MouseEvent).buttons & 2)) {\r\n            //     return Navigation.Modes.Zoom;\r\n\r\n            // } else if (event.type === 'wheel') {\r\n            //     return Navigation.Modes.ZoomStep;\r\n            // }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected rotate(event: MouseEvent | TouchEvent, start: boolean): void {\r\n        const point = this._eventHandler.offsets(event)[0];\r\n\r\n        switch (this._metaphor) {\r\n            case Navigation.Metaphor.FirstPerson:\r\n                const firstPerson = this._firstPerson as FirstPersonModifier;\r\n                let movement: vec2 | undefined;\r\n                if (PointerLock.active() && event instanceof MouseEvent) {\r\n                    movement = vec2.fromValues((event as MouseEvent).movementX, (event as MouseEvent).movementY);\r\n                }\r\n                start ? firstPerson.initiate(point) : firstPerson.process(point, movement);\r\n                event.preventDefault();\r\n                break;\r\n\r\n            case Navigation.Metaphor.Trackball:\r\n                const trackball = this._trackball as TrackballModifier;\r\n                start ? trackball.initiate(point) : trackball.process(point);\r\n                event.preventDefault();\r\n                break;\r\n\r\n            case Navigation.Metaphor.Turntable:\r\n                const turntable = this._turntable as TurntableModifier;\r\n                start ? turntable.initiate(point) : turntable.process(point);\r\n                event.preventDefault();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    protected onMouseDown(latests: Array<MouseEvent>, previous: Array<MouseEvent>): void {\r\n        const event: MouseEvent = latests[latests.length - 1];\r\n        // for (const event of latests) {\r\n\r\n        this._mode = this.mode(event);\r\n        switch (this._mode) {\r\n            case Navigation.Modes.Zoom:\r\n                // this.startZoom(event);\r\n                break;\r\n\r\n            case Navigation.Modes.Rotate:\r\n                this.rotate(event, true);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n            // }\r\n        }\r\n    }\r\n\r\n    protected onMouseUp(latests: Array<MouseEvent>, previous: Array<MouseEvent>): void {\r\n        const event: MouseEvent = latests[latests.length - 1];\r\n\r\n        // for (const event of latests) {\r\n        if (undefined === this._mode) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        // }\r\n    }\r\n\r\n    protected onMouseMove(latests: Array<MouseEvent>, previous: Array<MouseEvent>): void {\r\n        const event: MouseEvent = latests[latests.length - 1];\r\n        // for (const event of latests) {\r\n\r\n        const modeWasUndefined = (this._mode === undefined);\r\n        this._mode = this.mode(event);\r\n        switch (this._mode) {\r\n            // case Navigation.Modes.Zoom:\r\n            //     // modeWasUndefined ? this.startZoom(event) : this.updateZoom(event);\r\n            //     break;\r\n\r\n            case Navigation.Modes.Rotate:\r\n                this.rotate(event, modeWasUndefined);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n            // }\r\n        }\r\n    }\r\n\r\n    protected onClick(latests: Array<MouseEvent>, previous: Array<MouseEvent>): void {\r\n        // const event: MouseEvent = latests[latests.length - 1];\r\n    }\r\n\r\n\r\n    /**\r\n     * Update should invoke navigation specific event processing. When using, e.g., an event handler, the event handlers\r\n     * update method should be called in order to have navigation specific event processing invoked.\r\n     */\r\n    update(): void {\r\n        this._eventHandler.update();\r\n    }\r\n\r\n    /**\r\n     * The camera that is to be modified in response to various events.\r\n     */\r\n    set camera(camera: Camera) {\r\n        this._camera = camera;\r\n        if (this._firstPerson) {\r\n            this._firstPerson.camera = camera;\r\n        }\r\n        if (this._trackball) {\r\n            this._trackball.camera = camera;\r\n        }\r\n        if (this._turntable) {\r\n            this._turntable.camera = camera;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Configure this navigation's metaphor.\r\n     */\r\n    set metaphor(metaphor: Navigation.Metaphor) {\r\n        if (this._metaphor === metaphor) {\r\n            return;\r\n        }\r\n\r\n        this._firstPerson = undefined;\r\n        this._trackball = undefined;\r\n        this._turntable = undefined;\r\n\r\n        this._eventHandler.exitPointerLock(); /* Might be requested (and active) from FirstPerson or Flight. */\r\n        this._alwaysRotateOnMove = false;\r\n\r\n        this._metaphor = metaphor;\r\n        switch (this._metaphor) {\r\n            case Navigation.Metaphor.FirstPerson:\r\n\r\n                this._eventHandler.requestPointerLock();\r\n                this._alwaysRotateOnMove = true;\r\n\r\n                this._firstPerson = new FirstPersonModifier();\r\n                this._firstPerson.camera = this._camera;\r\n                break;\r\n\r\n            case Navigation.Metaphor.Trackball:\r\n                this._trackball = new TrackballModifier();\r\n                this._trackball.camera = this._camera;\r\n                break;\r\n\r\n            case Navigation.Metaphor.Turntable:\r\n                this._turntable = new TurntableModifier();\r\n                this._turntable.camera = this._camera;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this._invalidate(true);\r\n    }\r\n\r\n    get metaphor(): Navigation.Metaphor {\r\n        return this._metaphor;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport namespace Navigation {\r\n\r\n    /**\r\n     * Navigation modes used for identification of the current navigation intend, which is derived based on the event\r\n     * types or gestures, regardless of the active navigation metaphor and its constraints.\r\n     */\r\n    export enum Modes {\r\n        Move,\r\n        Pan,\r\n        Rotate,\r\n        Zoom,\r\n        ZoomStep,\r\n    }\r\n\r\n    /**\r\n     * Navigation metaphors supported by the default navigation implementation.\r\n     */\r\n    export enum Metaphor {\r\n        FirstPerson = 'firstperson',\r\n        Flight = 'flight',\r\n        Trackball = 'trackball',\r\n        Turntable = 'turntable',\r\n    }\r\n}\r\n","\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n\r\nexport class PanModifier extends CameraModifier {\r\n\r\n    update(): void {\r\n\r\n    }\r\n\r\n}\r\n","\r\nimport { CameraModifier } from './cameramodifier';\r\n\r\n\r\nexport class ZoomModifier extends CameraModifier {\r\n\r\n    update(): void {\r\n\r\n    }\r\n\r\n}\r\n","\r\nimport { assert } from './auxiliaries';\r\n\r\nimport { Buffer } from './buffer';\r\nimport { Context } from './context';\r\nimport { Geometry } from './geometry';\r\nimport { Initializable } from './initializable';\r\n\r\n\r\n/**\r\n * Geometry for a viewport/screen-filling rectangle. The geometry creates rectangle vertices, associated to\r\n * a vertex array object (from geometry base class), and provides a specialized draw call for rendering. It is intended\r\n * for, e.g., viewport/screen-filling rendering in post-processing. The vertices can be used directly as normalized\r\n * device space (NDC) coordinates, e.g., by using the following vertex shader snippet:\r\n *\r\n * ```\r\n * #if __VERSION__ == 100\r\n *     attribute vec2 a_vertex;\r\n * #else\r\n *     layout(location = 0) in vec2 a_vertex;\r\n * #endif\r\n *\r\n * ...\r\n *\r\n * v_uv = a_vertex * 0.5 + 0.5;\r\n * gl_Position = vec4(a_vertex, 0.0, 1.0);\r\n * ```\r\n */\r\nexport class NdcFillingRectangle extends Geometry {\r\n\r\n    /**\r\n     * 2 ───── 3\r\n     * │  \\    │\r\n     * │    \\  │\r\n     * 0 ───── 1\r\n     */\r\n    protected static readonly VERTICES = new Float32Array(\r\n        [-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]);\r\n\r\n    /**\r\n     * Object constructor, requires a context and an identifier.\r\n     * @param context - Valid context to create the object for.\r\n     * @param identifier - Meaningful name for identification of this instance.\r\n     */\r\n    constructor(context: Context, identifier?: string) {\r\n        super(context, identifier);\r\n\r\n        /* Generate identifier from constructor name if none given. */\r\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\r\n\r\n        const vertexVBO = new Buffer(context, identifier + 'VBO');\r\n\r\n        this._buffers.push(vertexVBO);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the vertex buffer object (VBO) to an attribute binding point of a given, pre-defined index.\r\n     */\r\n    protected bindBuffers(indices: Array<GLuint>): void {\r\n        /* Please note the implicit bind in attribEnable. */\r\n        this._buffers[0].attribEnable(indices[0], 2, this.context.gl.FLOAT, false, 0, 0, true, false);\r\n    }\r\n\r\n    /**\r\n     * Unbinds the vertex buffer object (VBO) and disables the binding point.\r\n     */\r\n    protected unbindBuffers(indices: Array<GLuint>): void {\r\n        /* Please note the implicit unbind in attribEnable is skipped. */\r\n        this._buffers[0].attribDisable(indices[0], true, true);\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\r\n     * @param aVertex - Attribute binding point for vertices.\r\n     */\r\n    initialize(aVertex: GLuint): boolean {\r\n        const gl = this.context.gl;\r\n        const valid = super.initialize([gl.ARRAY_BUFFER], [aVertex]);\r\n\r\n        assert(this._buffers[0] !== undefined && this._buffers[0].object instanceof WebGLBuffer,\r\n            `expected valid WebGLBuffer`);\r\n\r\n        this._buffers[0].data(NdcFillingRectangle.VERTICES, gl.STATIC_DRAW);\r\n\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Specifies/invokes the draw of this screen-aligned triangle.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    draw(): void {\r\n        const gl = this.context.gl;\r\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n    }\r\n\r\n}\r\n","module.exports = \"\\r\\nprecision lowp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragColor gl_FragColor\\r\\n#else\\r\\n    layout(location = 0) out vec4 fragColor;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform float u_weight;\\r\\nuniform sampler2D u_accumulationTexture;\\r\\nuniform sampler2D u_currentFrameTexture;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    vec4 accumulationColor = texture(u_accumulationTexture, v_uv);\\r\\n    vec4 currentFrameColor = texture(u_currentFrameTexture, v_uv);\\r\\n    fragColor = mix(accumulationColor, currentFrameColor, u_weight);\\r\\n}\\r\\n\"","module.exports = \"\\r\\nprecision lowp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragColor gl_FragColor\\r\\n#else \\r\\n    layout(location = 0) out vec4 fragColor;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform sampler2D u_texture;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    fragColor = texture(u_texture, v_uv);\\r\\n}\\r\\n\"","\r\nimport { mat4, vec3, vec4 } from 'gl-matrix';\r\n\r\nimport { assert } from './auxiliaries';\r\nimport { decode_float24x1_from_uint8x3, decode_uint32_from_rgba8 } from './gl-matrix-extensions';\r\n\r\nimport { Context } from './context';\r\nimport { Framebuffer } from './framebuffer';\r\nimport { Initializable } from './initializable';\r\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\r\nimport { Program } from './program';\r\nimport { Shader } from './shader';\r\nimport { Texture2 } from './texture2';\r\nimport { GLsizei2 } from './tuples';\r\n\r\n\r\n/**\r\n * This stage provides means to sample G-Buffers, in order to give access to world space coordinates, depth values and\r\n * IDs. World space coordinates are calculated by sampling the depth value and unprojecting the normalized device\r\n * coordinates. Depth and ID values are read from the GPU by rendering the requested pixel to a 1x1 texture and reading\r\n * back the value from this texture. Note that depth and ID values are cached as long as no redraw (frame) was invoked.\r\n */\r\nexport class ReadbackPass extends Initializable {\r\n\r\n    /**\r\n     * Read-only access to the objects context, used to get context information and WebGL API access.\r\n     */\r\n    protected _context: Context;\r\n\r\n\r\n    /** @see {@link cache} */\r\n    protected _cache = false;\r\n\r\n\r\n    /** @see {@link depthFBO} */\r\n    protected _depthFBO: Framebuffer;  // This is used if depth is already uint8x3 encoded\r\n\r\n    /** @see {@link depthAttachment} */\r\n    protected _depthAttachment: GLenum = 0;\r\n\r\n    /**\r\n     * Cache providing previously read depth values for a given position hash.\r\n     */\r\n    protected _cachedDepths = new Map<GLsizei, GLfloat | undefined>();\r\n\r\n\r\n    /** @see {@link idFBO} */\r\n    protected _idFBO: Framebuffer;\r\n\r\n    /** @see {@link idAttachment} */\r\n    protected _idAttachment: GLenum;\r\n\r\n    /**\r\n     * Cache providing previously read id values for a given position hash.\r\n     */\r\n    protected _cachedIDs = new Map<GLsizei, GLsizei | undefined>();\r\n\r\n\r\n    /**\r\n     * Buffer to read into.\r\n     */\r\n    protected _buffer = new Uint8Array(4);\r\n\r\n\r\n    /**\r\n     * Properties required for 24bit depth readback workaround. If a valid depth format is available as renderable\r\n     * texture format, a single fragment is rasterized in order to encode the depth of at a specific location into\r\n     * uint8x3 format, rendered into a RGBA texture for readback. This workaround is currently necessary since reading\r\n     * back depth buffer data is not supported. All following protected properties are undefined when this workaround\r\n     * is not required (i.e., in IE11), since the depth texture is already rendered explicitly in a previous render\r\n     * pass.\r\n     */\r\n    protected _texture: Texture2;\r\n    protected _framebuffer: Framebuffer;\r\n\r\n    /**\r\n     * Coordinate reference size @see {@link coordinateReferenceSize}.\r\n     */\r\n    protected _referenceSize: GLsizei2 | undefined;\r\n\r\n\r\n    /**\r\n     * Geometry used to draw on. This is not provided by default to allow for geometry sharing. If no triangle is given,\r\n     * the ndc triangle will be created and managed internally.\r\n     */\r\n    protected _ndcTriangle: NdcFillingTriangle;\r\n\r\n    /**\r\n     * Tracks ownership of the ndc-filling triangle.\r\n     */\r\n    protected _ndcTriangleShared = false;\r\n\r\n\r\n    protected _program: Program;\r\n    protected _uOffset: WebGLUniformLocation;\r\n    protected _uScale: WebGLUniformLocation;\r\n\r\n\r\n    /**\r\n     * Retrieve the depth of a fragment in normalized device coordinates. The implementation of this function is\r\n     * assigned at initialization based on the available WebGL features.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     */\r\n    depthAt: (x: GLsizei, y: GLsizei) => GLfloat | undefined;\r\n\r\n\r\n    constructor(context: Context) {\r\n        super();\r\n        this._context = context;\r\n    }\r\n\r\n\r\n    /**\r\n     * Frame implementation clearing depth and ID caches. To avoid unnecessary readbacks (potentially causing sync\r\n     * points), the requested and found IDs and depths are cached by position. Hence, these cached values have to be\r\n     * cleared whenever the framebuffers are written/rendered to.\r\n     */\r\n    protected onFrame(): void {\r\n        this._cachedDepths.clear();\r\n        this._cachedIDs.clear();\r\n    }\r\n\r\n\r\n    /**\r\n     * Create a numerical hash that can be used for efficient look-up (number preferred, no string for now). Note that\r\n     * the implementation assumes that we do not exceed 65k pixel in horizontal or vertical resolution soon.\r\n     * @param x - Horizontal coordinate from the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate from the upper left corner of the viewport origin.\r\n     */\r\n    protected hash(x: GLsizei, y: GLsizei): GLsizei {\r\n        return 0xffff * y + x;\r\n    }\r\n\r\n    /**\r\n     * Retrieve the depth of a fragment in normalized device coordinates. This function implements the direct readback\r\n     * of uint8x3 encoded depth values from a given framebuffer (see depthFBO and depthAttachment).\r\n     * @param x - Horizontal coordinate from the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate from the upper left corner of the viewport origin.\r\n     * @returns - Either the depth at location x, y or undefined, if the far plane was hit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    protected directReadDepthAt(x: GLsizei, y: GLsizei): GLfloat | undefined {\r\n        const hash = this.hash(x, y);\r\n        if (this._cache && this._cachedDepths.has(hash)) {\r\n            return this._cachedDepths.get(hash);\r\n        }\r\n\r\n        assert(this._depthFBO !== undefined && this._depthFBO.valid, `valid depth FBO expected for reading back depth`);\r\n        const texture = this._depthFBO.texture(this._depthAttachment) as Texture2;\r\n\r\n        const gl = this._context.gl;\r\n        const size = texture.size;\r\n\r\n        this._depthFBO.bind();\r\n\r\n        const scale = this._referenceSize === undefined ? [1.0, 1.0] :\r\n            [size[0] / this._referenceSize[0], size[1] / this._referenceSize[1]];\r\n\r\n        if (this._context.isWebGL2 || this._context.supportsDrawBuffers) {\r\n            gl.readBuffer(this._depthAttachment);\r\n        }\r\n        gl.readPixels(x * scale[0], size[1] - y * scale[1], 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, this._buffer);\r\n\r\n        let depth: GLfloat | undefined = decode_float24x1_from_uint8x3(\r\n            vec3.fromValues(this._buffer[0], this._buffer[1], this._buffer[2]));\r\n        depth = depth >= 1.0 ? undefined : depth;\r\n\r\n        if (this._cache) {\r\n            this._cachedDepths.set(hash, depth);\r\n        }\r\n        return depth;\r\n    }\r\n\r\n\r\n    /**\r\n     * Retrieve the depth of a fragment in normalized device coordinates.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     * @returns - Either the depth at location x, y or undefined, if the far plane was hit.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    renderThenReadDepthAt(x: GLsizei, y: GLsizei): GLfloat | undefined {\r\n        const hash = this.hash(x, y);\r\n        if (this._cache && this._cachedDepths.has(hash)) {\r\n            return this._cachedDepths.get(hash);\r\n        }\r\n\r\n        assert(this._depthFBO !== undefined && this._depthFBO.valid, `valid depth FBO expected for reading back depth`);\r\n        const texture = this._depthFBO.texture(this._depthAttachment) as Texture2;\r\n\r\n        const gl = this._context.gl;\r\n        const size = texture.size;\r\n\r\n        const scale = this._referenceSize === undefined ? [1.0, 1.0] :\r\n            [size[0] / this._referenceSize[0], size[1] / this._referenceSize[1]];\r\n\r\n        /* Render a single fragment, thereby encoding the depth render texture data of the requested position. */\r\n        gl.viewport(0, 0, 1, 1);\r\n\r\n        this._program.bind();\r\n        gl.uniform2f(this._uOffset, x * scale[0] / size[0], (size[1] - y * scale[1]) / size[1]);\r\n        gl.uniform2f(this._uScale, 1.0 / size[0], 1.0 / size[1]);\r\n\r\n        texture.bind(gl.TEXTURE0);\r\n\r\n        this._framebuffer.bind();\r\n\r\n        this._ndcTriangle.bind();\r\n        this._ndcTriangle.draw();\r\n        this._ndcTriangle.unbind();\r\n\r\n        texture.unbind();\r\n\r\n        /** Every stage is expected to bind its own program when drawing, thus, unbinding is not necessary. */\r\n        // this.program.unbind();\r\n\r\n\r\n        /* Bind the framebuffer and read back the requested pixel. */\r\n\r\n        if ((this._context.isWebGL2 || this._context.supportsDrawBuffers) && gl.readBuffer) {\r\n            gl.readBuffer(gl.COLOR_ATTACHMENT0);\r\n        }\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, this._buffer);\r\n        this._framebuffer.unbind();\r\n\r\n        let depth: GLfloat | undefined = decode_float24x1_from_uint8x3(\r\n            vec3.fromValues(this._buffer[0], this._buffer[1], this._buffer[2]));\r\n        depth = depth >= 1.0 ? undefined : depth;\r\n\r\n        if (this._cache) {\r\n            this._cachedDepths.set(hash, depth);\r\n        }\r\n        return depth;\r\n    }\r\n\r\n\r\n    /**\r\n     * Specializes this pass's initialization. If required. ad screen-filling triangle geometry and a single program\r\n     * are created. All attribute and dynamic uniform locations are cached.\r\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\r\n     * triangle will be created internally.\r\n     */\r\n    @Initializable.initialize()\r\n    initialize(ndcTriangle: NdcFillingTriangle | undefined): boolean {\r\n        const gl = this._context.gl;\r\n        const gl2facade = this._context.gl2facade;\r\n\r\n        /* If depth is already uint8x3 encoded into a rgb/rgba target no readback workaround is required. */\r\n        if (this._context.isWebGL1 && !this._context.supportsDepthTexture) {\r\n            this.depthAt = this.directReadDepthAt;\r\n            return true;\r\n        }\r\n\r\n        /* Configure read back for depth data. */\r\n        this.depthAt = this.renderThenReadDepthAt;\r\n\r\n\r\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (readback)');\r\n        vert.initialize(require('./shaders/ndcvertices.vert'));\r\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'readbackdepth.frag');\r\n        frag.initialize(require('./shaders/readbackdepth.frag'));\r\n\r\n        this._program = new Program(this._context, 'ReadbackDepthProgram');\r\n        this._program.initialize([vert, frag]);\r\n\r\n        this._uOffset = this._program.uniform('u_offset');\r\n\r\n        this._program.bind();\r\n        gl.uniform1i(this._program.uniform('u_texture'), 0);\r\n        this._program.unbind();\r\n\r\n        /* Configure read back framebuffer and color attachment. */\r\n\r\n        this._texture = new Texture2(this._context, 'ReadbackRenderTexture');\r\n        this._texture.initialize(1, 1, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE);\r\n\r\n        this._framebuffer = new Framebuffer(this._context, 'ReadbackFBO');\r\n        this._framebuffer.initialize([[gl2facade.COLOR_ATTACHMENT0, this._texture]]);\r\n\r\n\r\n        if (ndcTriangle === undefined) {\r\n            this._ndcTriangle = new NdcFillingTriangle(this._context);\r\n        } else {\r\n            this._ndcTriangle = ndcTriangle;\r\n            this._ndcTriangleShared = true;\r\n        }\r\n\r\n        if (!this._ndcTriangle.initialized) {\r\n            const aVertex = this._program.attribute('a_vertex', 0);\r\n            this._ndcTriangle.initialize(aVertex);\r\n        } else {\r\n            this._program.attribute('a_vertex', this._ndcTriangle.aVertex);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Specializes this stage's uninitialization. Program and geometry resources are released (if allocated). Cached\r\n     * uniform and attribute locations are invalidated.\r\n     */\r\n    @Initializable.uninitialize()\r\n    uninitialize(): void {\r\n        if (this._context.isWebGL1 && !this._context.supportsDepthTexture) {\r\n            return;\r\n        }\r\n\r\n        if (!this._ndcTriangleShared && this._ndcTriangle.initialized) {\r\n            this._ndcTriangle.uninitialize();\r\n        }\r\n\r\n        this._program.uninitialize();\r\n\r\n        this._texture.uninitialize();\r\n        this._framebuffer.uninitialize();\r\n    }\r\n\r\n\r\n    /**\r\n     * Retrieving the world space coordinate of a fragment.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     * @param zInNDC - optional depth parameter (e.g., from previous query).\r\n     * @param viewProjectionInverse - matrix used to unproject the coordinate from ndc to world space.\r\n     * @returns - The unprojected world space coordinate at location x, y.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    coordsAt(x: GLsizei, y: GLsizei, zInNDC: number | undefined, viewProjectionInverse: mat4): vec3 | undefined {\r\n        const size = (this._depthFBO.texture(this._depthAttachment) as Texture2).size;\r\n        const depth = zInNDC === undefined ? this.depthAt(x, y) : zInNDC;\r\n        if (depth === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        const scale = this._referenceSize === undefined ? [1.0, 1.0] :\r\n            [size[0] / this._referenceSize[0], size[1] / this._referenceSize[1]];\r\n\r\n        const p = vec3.fromValues(\r\n            x * scale[0] * 2.0 / size[0] - 1.0, 1.0 - y * scale[1] * 2.0 / size[1], depth * 2.0 - 1.0);\r\n\r\n        return vec3.transformMat4(vec3.create(), p, viewProjectionInverse);\r\n    }\r\n\r\n    /**\r\n     * Retrieve the id of an object at fragment position.\r\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\r\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\r\n     * @returns - The id rendered at location x, y.\r\n     */\r\n    @Initializable.assert_initialized()\r\n    idAt(x: GLsizei, y: GLsizei): GLsizei | undefined {\r\n        const hash = this.hash(x, y);\r\n        if (this._cache && this._cachedIDs.has(hash)) {\r\n            return this._cachedIDs.get(hash);\r\n        }\r\n\r\n        const gl = this._context.gl;\r\n        const size = (this._idFBO.texture(this._idAttachment) as Texture2).size;\r\n\r\n        const scale = this._referenceSize === undefined ? [1.0, 1.0] :\r\n            [size[0] / this._referenceSize[0], size[1] / this._referenceSize[1]];\r\n\r\n        this._idFBO.bind();\r\n        if ((this._context.isWebGL2 || this._context.supportsDrawBuffers) && gl.readBuffer) {\r\n            gl.readBuffer(this._idAttachment);\r\n        }\r\n        gl.readPixels(x * scale[0], size[1] - y * scale[1], 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, this._buffer);\r\n\r\n        const id = decode_uint32_from_rgba8(\r\n            vec4.fromValues(this._buffer[0], this._buffer[1], this._buffer[2], this._buffer[3]));\r\n\r\n        if (this._cache) {\r\n            this._cachedIDs.set(hash, id);\r\n        }\r\n        return id;\r\n    }\r\n\r\n\r\n    /**\r\n     * Invokes the frame implementation @see{@link onFrame}.\r\n     */\r\n    frame(): void {\r\n        this.onFrame();\r\n    }\r\n\r\n\r\n    /**\r\n     * Whether or not caching of requested depths and ids should be used to reduce performance impact.\r\n     */\r\n    set cache(value: boolean) {\r\n        this._cache = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the framebuffer object that is to be used for depth readback.\r\n     * @param framebuffer - Framebuffer that is to be used for depth readback.\r\n     */\r\n    set depthFBO(framebuffer: Framebuffer) {\r\n        this._depthFBO = framebuffer;\r\n    }\r\n\r\n    /**\r\n     * Sets the framebuffer's {@link depthFBO} depth attachment that is to be used for depth readback.\r\n     * @param attachment - Depth attachment that is to be used for depth readback.\r\n     */\r\n    set depthAttachment(attachment: GLenum) {\r\n        this._depthAttachment = attachment;\r\n    }\r\n\r\n    /**\r\n     * Sets the framebuffer object that is to be used for id readback.\r\n     * @param framebuffer - Framebuffer that is to be used for id readback.\r\n     */\r\n    set idFBO(framebuffer: Framebuffer) {\r\n        this._idFBO = framebuffer;\r\n    }\r\n\r\n    /**\r\n     * Sets the framebuffer's {@link idFBO} id attachment that is to be used for id readback.\r\n     * @param attachment - ID attachment that is to be used for id readback.\r\n     */\r\n    set idAttachment(attachment: GLenum) {\r\n        this._idAttachment = attachment;\r\n    }\r\n\r\n    /**\r\n     * Sets the coordinate-reference size that is, if not undefined, used to scale incomming x and y coordinates.\r\n     * @param size - Size of the output, e.g., the canvas, the buffer is rendered to.\r\n     */\r\n    set coordinateReferenceSize(size: GLsizei2 | undefined) {\r\n        this._referenceSize = size;\r\n    }\r\n\r\n}\r\n","module.exports = \"\\r\\nprecision highp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\nconst float one255ths = 1.0 / 255.0;\\r\\n\\r\\nvec3 float24x1_to_uint8x3(const in float f) {\\r\\n    vec3 uint8x3 = vec3(f, fract(f * 256.0), fract(f * 65536.0));\\r\\n    return floor(uint8x3 * 256.0) * one255ths;\\r\\n}\\r\\n\\r\\nvec4 float24x1_to_uint8x4(const in float f) {\\r\\n    vec4 uint8x4 = vec4(f, fract(f * 256.0), fract(f * 65536.0), fract(f * 16777216.0));\\r\\n    return floor(uint8x4 * 256.0) * one255ths;\\r\\n}\\r\\n\\r\\nconst vec3 premultUint8x3 = vec3(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0);\\r\\nfloat uint8x3_to_float24x1(const in vec3 v) {\\r\\n    return dot(v, premultUint8x3); // a1 * b1 + a2 * b2 + a3 * b3  ;)\\r\\n}\\r\\n\\r\\nconst vec4 premultUint8x4 = vec4(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0, 255.0 / 4294967296.0);\\r\\nfloat uint8x4_to_float24x1(const in vec4 v) {\\r\\n    return dot(v, premultUint8x4); // a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4  ;)\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragDepth gl_FragColor\\r\\n#else \\r\\n    layout(location = 0) out vec4 fragDepth;\\r\\n#endif\\r\\n\\r\\n\\r\\nuniform sampler2D u_texture;\\r\\nuniform vec2 u_offset;\\r\\nuniform vec2 u_scale;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    vec2 uv = vec2(v_uv.x, 1.0 - v_uv.y) * u_scale + u_offset;\\r\\n    float depth = texture(u_texture, uv).r;\\r\\n\\r\\n    fragDepth = vec4(float24x1_to_uint8x3(depth), 1.0);\\r\\n}\\r\\n\"","import { assert } from './auxiliaries';\r\nimport { Canvas } from './canvas';\r\nimport { Controllable } from './controller';\r\nimport { FrameData } from './framedata';\r\nimport {\r\n    XRDevice,\r\n    XRFrame,\r\n    XRFrameOfReference, XRFrameOfReferenceOptions, XRFrameOfReferenceType,\r\n    XRInputPose,\r\n    XRSession, XRSessionCreationOptions,\r\n    XRWebGLLayerInit,\r\n} from './webxr';\r\nimport { XRRenderer } from './xrrenderer';\r\n\r\n// tslint:disable-next:member-ordering\r\n/**\r\n * Controller for WebXR sessions. Basic workflow:\r\n *\r\n * ```ts\r\n * let xrc = new XRController({ immersive: true });\r\n * await xrc.requestDevice(); // may throw `NotFoundError`\r\n * if (await xrc.supportsSession()) { // optional check\r\n *   await xrc.requestSession(); // may throw\r\n *   // assign any subclass of `Renderer` that uses the `renderViews` parameter in `onFrame`\r\n *   xrc.canvas!.renderer = new WebXRRenderer();\r\n *\r\n *   xrc.session!.addEventListener('end', () => { ... });\r\n *   ...\r\n *   xrc.endSession();\r\n * }\r\n *\r\n * ```\r\n * @experimental\r\n */\r\nexport class XRController {\r\n    private onXRFrameCallback = this.onXRFrame.bind(this);\r\n    private frameData: FrameData = new FrameData();\r\n\r\n    // Configuration options for setting up and XR session.\r\n\r\n    sessionCreationOptions: XRSessionCreationOptions;\r\n    /**\r\n     * Attributes for WebGL context creation. `compatibleXRDevice` will be set\r\n     * automatically after requesting a device.\r\n     */\r\n    contextAttributes: WebGLContextAttributes = {};\r\n    webGLLayerInit?: XRWebGLLayerInit;\r\n    frameOfRefType: XRFrameOfReferenceType = 'eye-level';\r\n    frameOfRefOptions?: XRFrameOfReferenceOptions;\r\n\r\n    device: XRDevice | undefined;\r\n    session: XRSession | undefined;\r\n    canvas: Canvas | undefined;\r\n    gl: any;\r\n    frameOfRef: XRFrameOfReference | undefined;\r\n\r\n    renderer: XRRenderer;\r\n\r\n    inputPoses: Array<XRInputPose | null> = [];\r\n\r\n    /** Checks whether WebXR is supported by the browser. */\r\n    static supportsXR(): boolean {\r\n        return navigator.xr !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Hints:\r\n     * To mirror the content of an immersive session to a canvas on the page:\r\n     *\r\n     * ```ts\r\n     * let mirrorCanvas = document.createElement('canvas');\r\n     * document.body.appendChild(mirrorCanvas);\r\n     * let ctx = mirrorCanvas.getContext('xrpresent');\r\n     * let xrc = new XRController({\r\n     *     immersive: true,\r\n     *     outputContext: ctx;\r\n     * })\r\n     * ```\r\n     * To create a 'magic window', do the same, but with `immersive` set to `false`.\r\n     */\r\n    constructor(sessionOpts?: XRSessionCreationOptions) {\r\n        this.sessionCreationOptions = sessionOpts || {};\r\n    }\r\n\r\n    /**\r\n     * Requests a device (e.g. a HMD) and stores it in `this.device`.\r\n     * @throws {NotFoundError} - No devices found.\r\n     * @throws {EvalError} - WebXR is not supported (use the static `supportsXR` function to check before)\r\n     * @returns - a promise that resolves if a device is available.\r\n     */\r\n    async requestDevice(): Promise<void> {\r\n        assert(XRController.supportsXR(), 'WebXR not supported by browser');\r\n        this.device = await navigator.xr.requestDevice();\r\n        this.contextAttributes.compatibleXRDevice = this.device;\r\n    }\r\n\r\n    /**\r\n     * Checks whether device supports a session with `this.sessionCreationOptions`.\r\n     * Must call `requestDevice` before.\r\n     */\r\n    async supportsSession(): Promise<boolean> {\r\n        assert(this.device !== undefined, 'this.device not initialized');\r\n        try {\r\n            await this.device!.supportsSession(this.sessionCreationOptions);\r\n            return true;\r\n        } catch (e) { // === null\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Request an XR session (`this.session`) using `this.sessionCreationOptions`\r\n     * and initialize WebGL context and `frameOfRef`.\r\n     * May fail with:\r\n     * - `NotSupportedError` if the options are not supported\r\n     * - `InvalidStateError` if options.immersive is true and the device already has an immersive session\r\n     * - `SecurityError` if options.immersive is true and the algorithm is not triggered by user activation\r\n     */\r\n    async requestSession(): Promise<void> {\r\n        // TODO!: fix example first...\r\n        // assert(!this.session, 'a session is already in progress');\r\n        this.session = await this.device!.requestSession(this.sessionCreationOptions);\r\n\r\n        const canvasEl = document.createElement('canvas');\r\n        // TODO!!: check what happens to old canvas when switching from magic window to immersive\r\n        this.canvas = new Canvas(canvasEl, this.contextAttributes, this);\r\n        this.gl = this.canvas.context.gl;\r\n\r\n        this.session.baseLayer = new XRWebGLLayer(this.session, this.gl, this.webGLLayerInit);\r\n        this.frameOfRef = await this.session.requestFrameOfReference(this.frameOfRefType, this.frameOfRefOptions);\r\n        this.frameData.frameOfReference = this.frameOfRef;\r\n\r\n        this.session.requestAnimationFrame(this.onXRFrameCallback);\r\n\r\n        this.session.addEventListener('end', () => this.onEndSession());\r\n    }\r\n\r\n    async endSession(): Promise<void> {\r\n        await this.session!.end();\r\n    }\r\n\r\n    onEndSession(): void {\r\n        this.session = undefined;\r\n        this.canvas = undefined;\r\n        this.gl = undefined;\r\n        this.frameOfRef = undefined;\r\n        this.frameData = new FrameData();\r\n    }\r\n\r\n    onXRFrame(time: number, frame: XRFrame): void {\r\n        if (!this.session) { return; } // TODO!: cancelAnimationFrame in onEndSession instead?\r\n        const session = frame.session;\r\n        session.requestAnimationFrame(this.onXRFrameCallback);\r\n        const gl = this.gl;\r\n\r\n        this.frameData.time = time;\r\n        this.frameData.frame = frame;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, session.baseLayer.framebuffer);\r\n        this.renderer.xrframe(this.frameData);\r\n    }\r\n\r\n    set controllable(c: Controllable) {\r\n        assert(c instanceof XRRenderer, 'Controllable must be an `XRRenderer`');\r\n        this.renderer = c as XRRenderer;\r\n    }\r\n\r\n    // NOTE: the block/unblock/update methods don't make much sense for WebXR,\r\n    // but they need to be present and 'work' (otherwise some assertions fail).\r\n    // They are ignored in the render loop however.\r\n\r\n    // tslint:disable-next-line:member-ordering\r\n    _block = false;\r\n    block(): void {\r\n        this._block = true;\r\n    }\r\n    get blocked(): boolean {\r\n        return this._block;\r\n    }\r\n    unblock(): void {\r\n        this._block = false;\r\n    }\r\n\r\n    update(force: boolean = false): void {\r\n    }\r\n\r\n    get multiFrameNumber(): number {\r\n        return 0;\r\n    }\r\n    set multiFrameNumber(multiFrameNumber: number) {\r\n    }\r\n}\r\n","\r\nimport { EventHandler } from '../eventhandler';\r\nimport { MouseEventProvider } from '../mouseeventprovider';\r\nimport { Invalidate } from '../renderer';\r\n\r\n\r\nexport class TestNavigation {\r\n\r\n    protected _eventHandler: EventHandler;\r\n\r\n    protected _altered = false;\r\n\r\n\r\n    constructor(invalidate: Invalidate, mouseEventProvider: MouseEventProvider) {\r\n        this._eventHandler = new EventHandler(invalidate, mouseEventProvider, undefined);\r\n        this._eventHandler.pushMouseEnterHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\r\n            this.onMouseEnter(latests, previous));\r\n        this._eventHandler.pushMouseLeaveHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\r\n            this.onMouseLeave(latests, previous));\r\n    }\r\n\r\n    protected onMouseEnter(latests: Array<MouseEvent>, previous: Array<MouseEvent>): void {\r\n        this._altered = false;\r\n    }\r\n\r\n    protected onMouseLeave(latests: Array<MouseEvent>, previous: Array<MouseEvent>): void {\r\n        this._altered = true;\r\n    }\r\n\r\n    update(): void {\r\n        this._eventHandler.update();\r\n    }\r\n\r\n    reset(): void {\r\n        this._altered = false;\r\n    }\r\n\r\n    get altered(): boolean {\r\n        return this._altered;\r\n    }\r\n\r\n}\r\n","\r\nexport * from './webgl-operate.slim';\r\n\r\n\r\n// /* ADVANCED facilities */\r\n\r\nimport * as root_properties from './properties';\r\nexport import properties = root_properties;\r\n\r\nimport * as root_fetch from './fetch';\r\nexport import fetch = root_fetch;\r\n\r\nimport * as root_raymath from './raymath';\r\nexport import ray_math = root_raymath;\r\n\r\n\r\n// /* DEBUG facilities */\r\n\r\nimport * as debug_TestNavigation from './debug/testnavigation';\r\nimport * as debug_TestRenderer from './debug/testrenderer';\r\n\r\nexport namespace debug {\r\n    export import TestRenderer = debug_TestRenderer.TestRenderer;\r\n    export import TestNavigation = debug_TestNavigation.TestNavigation;\r\n}\r\n\r\n\r\n/* VIEWER facilities */\r\n\r\nimport * as viewer_EventBlocker from './viewer/eventblocker';\r\nimport * as viewer_Fullscreen from './viewer/fullscreen';\r\n\r\nexport namespace viewer {\r\n    export import EventBlocker = viewer_EventBlocker.EventBlocker;\r\n    export import Fullscreen = viewer_Fullscreen.Fullscreen;\r\n}\r\n\r\n\r\n/* DEVELOPMENT facilities (should be none when publishing) */\r\n","\r\nimport { mat4, vec2, vec3 } from 'gl-matrix';\r\nimport { abs2, abs3, sign, v2, v3 } from './gl-matrix-extensions';\r\n\r\nimport { DEG2RAD } from './auxiliaries';\r\nimport { Camera } from './camera';\r\n\r\n\r\nnamespace ray_math {\r\n\r\n    /**\r\n     * Lots of variables that represent components of other variables or are transformed.\r\n     * For these I (dl) prefer, e.g.,  _component or _transformation notation\r\n     */\r\n    /* tslint:disable:variable-name */\r\n\r\n    /**\r\n     * Computes the intersection point of a given ray and a circle at [0.0, 0.0] and a given radius.\r\n     * @param ray0 - Start point of a ray.\r\n     * @param ray1 - Far point of a ray, used to derive the ray's direction.\r\n     * @param radius - Radius of the circle to test for intersection with.\r\n     * @returns The intersection point of the given ray and a circle, undefined if no intersection exists.\r\n     */\r\n    export function rayCircleIntersection(ray0: vec2, ray1: vec2, radius: number = 1.0): vec2 | undefined {\r\n        const ray_direction = vec2.subtract(v2(), ray1, ray0);\r\n        if (vec2.equals(ray_direction, vec2.fromValues(0.0, 0.0))) {\r\n            return undefined;\r\n        }\r\n\r\n        /**\r\n         * This is a default ray circle intersection with common variable names. It's math and math sometimes has no\r\n         * meaning full variable names... (we could use twoTimesDotProductOfRayAndOrigin instead of b, but this is\r\n         * obviously not a good idea :D).\r\n         */\r\n        const a = vec2.squaredLength(ray_direction);\r\n        const b = 2.0 * vec2.dot(ray_direction, ray0);\r\n        const c = vec2.squaredLength(ray0) - radius * radius;\r\n\r\n        const delta = b * b - 4.0 * a * c;\r\n        if (delta < 0.0) {\r\n            return undefined;\r\n        }\r\n\r\n        /* Compute the two possible intersections and use nearest one. */\r\n        const s = Math.sqrt(delta);\r\n        const t = Math.min((-b + s) / (2.0 * a), (-b - s) / (2.0 * a));\r\n        const intersection = vec2.scale(v2(), ray_direction, t);\r\n\r\n        return vec2.add(intersection, intersection, ray0);\r\n    }\r\n\r\n    /**\r\n     * Computes the intersection point of a ray starting at a given point and pointing to the center of an axis-aligned\r\n     * square of a given side length.\r\n     * @param point - Starting point used to derive a ray for intersection.\r\n     * @param edgeLength - Side length of the square.\r\n     * @returns - The intersection point of the square and the derived ray.\r\n     */\r\n    export function pointSquareIntersection(point: vec2, edgeLength: number = 1.0): vec2 {\r\n        const a = abs2(v2(), point);\r\n        if (a[0] >= a[1]) { // intersection is with left or right border\r\n            return vec2.fromValues(sign(point[0]) * edgeLength, point[1] / a[0] * edgeLength);\r\n        }\r\n        return vec2.fromValues(point[0] / a[1] * edgeLength, sign(point[1]) * edgeLength);\r\n    }\r\n\r\n    /**\r\n     * Computes the intersection of a ray with an axis-aligned square at [0.0, 0.0] with side length of 2 * halfLength.\r\n     * @param ray0 - Start point of a ray.\r\n     * @param ray1 - Far point of a ray, used to derive the ray's direction.\r\n     * @returns - The intersection point of the square and the ray.\r\n     */\r\n    export function raySquareIntersection(ray0: vec2, ray1: vec2, halfLength: number = 1.0): Array<number> {\r\n        const vertices = [vec2.fromValues(-halfLength, +halfLength), vec2.fromValues(-halfLength, -halfLength),\r\n        vec2.fromValues(+halfLength, -halfLength), vec2.fromValues(+halfLength, +halfLength)];\r\n\r\n        const intersections = new Array<number>();\r\n        for (let i = 0; i < 4; ++i) {\r\n            const intersection = rayLineIntersection(ray0, ray1, vertices[i], vertices[(i + 1) % 4]);\r\n            if (intersection) {\r\n                intersections.push(intersection[1]);\r\n            }\r\n        }\r\n        return intersections;\r\n    }\r\n\r\n    /**\r\n     * Computes the intersection of a ray with a line.\r\n     * @param ray0 - Start point of a ray.\r\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\r\n     * @param line0 - Start point of a line.\r\n     * @param line1 - End point of a line.\r\n     * @returns - If ray intersects, a 2-tuple of intersection point and t (ray0 + t + ray1) is returned.\r\n     */\r\n    export function rayLineIntersection(ray0: vec2, ray1: vec2, line0: vec2, line1: vec2): [vec2, number] | undefined {\r\n        const p = ray0; /* do not write to p (or clone ray0) */\r\n        const r = vec2.sub(v2(), ray1, ray0);\r\n\r\n        const q = line0;  /* do not write to q (or clone line0) */\r\n        const s = vec2.sub(v2(), line1, line0);\r\n\r\n        const cross_rs = vec2.cross(v3(), r, s)[2];\r\n        if (cross_rs === 0.0) {\r\n            return undefined;\r\n        }\r\n\r\n        const qp = vec2.sub(v2(), q, p);\r\n        const u = vec2.cross(v3(), qp, vec2.scale(v2(), r, 1.0 / cross_rs))[2];\r\n        const t = vec2.cross(v3(), qp, vec2.scale(v2(), s, 1.0 / cross_rs))[2];\r\n        if (u < 0.0 || u > 1.0 || t < 0.0) { // } || t > 1.0) { // ray intersects line segment in both directions ...\r\n            return undefined;\r\n        }\r\n        return [vec2.add(v2(), q, vec2.scale(v2(), s, u)), t];\r\n    }\r\n\r\n    /**\r\n     * Computes the intersection point of a given ray and a given plane (rooted at [ 0, 0, 0 ]).\r\n     * t = -(dot(plane.xyz, origin) + plane.w) / dot(plane.xyz, ray);\r\n     * The ray intersects when (t > 0.0) && (t < tm) is true.\r\n     * @param ray0 - Start point of a ray.\r\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\r\n     * @param origin - Point on a plane with origin [ 0, 0, 0 ].\r\n     * @param normal - Normal of the plane with origin [ 0, 0, 0 ].\r\n     * @returns - If ray intersects, the intersection point on the plane if the plane was hit.\r\n     */\r\n    export function rayPlaneIntersection(ray0: vec3, ray1: vec3\r\n        , origin: vec3 | number[] = [0.0, 0.0, 0.0], normal: vec3 | number[] = [0.0, 1.0, 0.0]): vec3 | undefined {\r\n\r\n        const ray_direction = vec3.normalize(v3(), vec3.subtract(v3(), ray1, ray0));\r\n\r\n        /* Intersect with plane in point normal form. */\r\n        const rdDotN: number = vec3.dot(ray_direction, normal);\r\n\r\n        /* Constrain the intersection to rays that point from front to back with respect to the plane. */\r\n        if (vec3.equals(ray_direction, [0, 0, 0]) || rdDotN >= 0.0) {\r\n            return undefined;\r\n        }\r\n\r\n        /* Retrieve point using the ray. */\r\n        const t: number = vec3.dot(vec3.subtract(v3(), origin, ray0), normal) / rdDotN;\r\n        return vec3.add(v3(), vec3.scale(v3(), ray_direction, t), ray0);\r\n    }\r\n\r\n    /**\r\n     * Computes the intersection point of a given ray and a given sphere.\r\n     * t = -(dot(plane.xyz, origin) + plane.w) / dot(plane.xyz, ray);\r\n     * The ray intersects when (t > 0.0) && (t < tm) is true.\r\n     * @param ray0 - Start point of a ray.\r\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\r\n     * @param origin - Location of the sphere.\r\n     * @param radius - Radius of the sphere.\r\n     * @returns - If ray intersects, the intersection point on the plane if the plane was hit.\r\n     */\r\n    export function raySphereIntersection(ray0: vec3, ray1: vec3\r\n        , origin: vec3 = vec3.fromValues(0.0, 0.0, 0.0), radius: number = 1.0): vec3 | undefined {\r\n\r\n        const rayOriginToSphereCenter = vec3.subtract(v3(), ray0, origin); // o - c\r\n        const ray_direction = vec3.normalize(v3(), vec3.subtract(v3(), ray1, ray0)); // l\r\n\r\n        const dot_term = vec3.dot(ray_direction, rayOriginToSphereCenter); // l * (o - c)\r\n\r\n        // Note: dot product can be used to compute the squared length of a vector -> gl-matrix supports squaredLength\r\n        // vec3.squaredLength(rayOriginToSphereCenter); // ||o -c||²\r\n\r\n        const t = dot_term * dot_term - vec3.squaredLength(rayOriginToSphereCenter) + radius * radius;\r\n        if (t <= 0.0) { // no intersection\r\n            return undefined;\r\n        }\r\n        return vec3.add(v3(), ray0, vec3.scale(v3(), ray_direction, -dot_term - Math.sqrt(t)));\r\n    }\r\n\r\n    /**\r\n     * Computes the intersection point of a given ray and a given plane (origin [ 0, 0, 0 ]). The intersection point,\r\n     * however, is constrained to a tube of a given radius. The computation is currently limited to a tube\r\n     * on the plane y = 0 with origin in [0.0, 0.0, 0.0], extending towards [0.0, 1.0, 0.0].\r\n     * @param ray0 - Start point of a ray.\r\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\r\n     * @param radius - Constrain intersection point to be within a tube of this radius.\r\n     * @returns - The intersection point on the plane if the plane was hit, undefined otherwise.\r\n     */\r\n    export function rayPlaneIntersection_tube(ray0: vec3, ray1: vec3, radius: number = 1.0): vec3 | undefined {\r\n        const intersection = rayPlaneIntersection(ray0, ray1);\r\n\r\n        if (intersection !== undefined && vec3.length(intersection) < radius) {\r\n            return intersection;\r\n        }\r\n\r\n        /* Project the ray start to the y = 0 plane. */\r\n        const ray0_xz = vec2.fromValues(ray0[0], ray0[2]);\r\n        const ray1_xz = vec2.fromValues(ray1[0], ray1[2]);\r\n\r\n        const intersection2 = rayCircleIntersection(ray0_xz, ray1_xz, radius);\r\n        return intersection2 ? vec3.fromValues(intersection2[0], 0.0, intersection2[1]) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Evaluates whether or not a given point is within a square of a given edge length.\r\n     * @param point - Point to check the within-square-status for.\r\n     * @param halfLength - Half of the side length of the square.\r\n     * @returns - Whether or not the given point is within an axis aligned square at [0.0, 0.0] and edge length.\r\n     */\r\n    export function isPointWithinSquare(point: vec2, halfLength: number = 1.0): boolean {\r\n        const p_abs = abs2(v2(), point);\r\n        return p_abs[0] <= halfLength && p_abs[1] <= halfLength;\r\n    }\r\n\r\n    /**\r\n     * Evaluates whether or not a given point is within the NDC-space (normalized device coordinates) after being\r\n     * transformed by a view projection matrix.\r\n     * @param viewProjection - (Model) view projection matrix to transform the point with.\r\n     * @param point - Point that is to be transformed\r\n     * @returns True if the point should be visible (within NDC), false otherwise.\r\n     */\r\n    export function isPointWithinNDC(viewProjection: mat4, point: vec3): boolean {\r\n        const p_transformed = vec3.transformMat4(v3(), point, viewProjection);\r\n        const p_abs = abs3(v3(), p_transformed);\r\n        return p_abs[0] <= 1.0 && p_abs[1] <= 1.0 && p_transformed[2] >= 0.0 && p_transformed[2] <= 1.0;\r\n    }\r\n\r\n    /**\r\n     * Computes the shortest distance of a point to a ray (closest point on ray distance).\r\n     * @param ray0 - Start point of a ray.\r\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\r\n     * @param point - Point to compute the distance for.\r\n     * @returns - Distance of the closest point on a ray to a point.\r\n     */\r\n    export function distancePointToRay(ray0: vec3, ray1: vec3, point: vec3): number {\r\n        const ray_direction = vec3.subtract(v3(), ray1, ray0);\r\n        const ray_length = vec3.squaredLength(ray_direction);\r\n        if (ray_length === 0.0) {\r\n            return 0.0;\r\n        }\r\n\r\n        const eyeToPoint = vec3.subtract(v3(), point, ray0);\r\n        const theta = vec3.dot(eyeToPoint, ray_direction);\r\n        return theta / ray_length;\r\n    }\r\n\r\n    /**\r\n     * Computes a new eye coordinate for the camera that should have the given point within view. The eye is only\r\n     * modified with respect to its distance to the camera's center (on the camera look-at ray).\r\n     * @param camera - Camera as base constraint for the eye movement (only distance to center is changed).\r\n     * @param point - Point to adjust the camera position for.\r\n     * @returns - Eye coordinate for the given camera that should have the given point within view.\r\n     */\r\n    export function eyeWithPointInView(camera: Camera, point: vec3): vec3 {\r\n        const ray_direction = vec3.subtract(v3(), camera.center, camera.eye);\r\n        const ray_normalized = vec3.normalize(v3(), ray_direction);\r\n\r\n        /* Retrieve u and v for an orthonormal basis. */\r\n        const ortho_v = vec3.normalize(v3(), vec3.cross(v3(), ray_normalized, camera.up));\r\n        const ortho_u = vec3.normalize(v3(), vec3.cross(v3(), ortho_v, ray_normalized));\r\n\r\n        const distance = distancePointToRay(camera.eye, camera.center, point);\r\n\r\n        /* Compute the closest point c on the ray. */\r\n        const closest = vec3.add(v3(), camera.eye, vec3.scale(v3(), ray_direction, distance));\r\n        const t = vec3.subtract(v3(), point, closest);\r\n        const part_v = Math.abs(vec3.dot(t, ortho_v)) / camera.aspect;\r\n        const part_u = Math.abs(vec3.dot(t, ortho_u));\r\n\r\n        /* Retrieve max distance to camera with required fov. */\r\n        const part_max = Math.max(part_v, part_u);\r\n\r\n        /* Require distance from closest to new camera position. */\r\n        const a = part_max / Math.tan(camera.fovy * DEG2RAD * 0.5);\r\n        return vec3.subtract(v3(), closest, vec3.scale(v3(), ray_normalized, a));\r\n    }\r\n\r\n}\r\n\r\nexport = ray_math;\r\n","\r\nimport { assert } from '../auxiliaries';\r\n\r\nimport { AccumulatePass } from '../accumulatepass';\r\nimport { AntiAliasingKernel } from '../antialiasingkernel';\r\nimport { BlitPass } from '../blitpass';\r\nimport { Context } from '../context';\r\nimport { DefaultFramebuffer } from '../defaultframebuffer';\r\nimport { Framebuffer } from '../framebuffer';\r\nimport { MouseEventProvider } from '../mouseeventprovider';\r\nimport { NdcFillingTriangle } from '../ndcfillingtriangle';\r\nimport { Program } from '../program';\r\nimport { Renderbuffer } from '../renderbuffer';\r\nimport { Invalidate, Renderer } from '../renderer';\r\nimport { Shader } from '../shader';\r\nimport { Texture2 } from '../texture2';\r\nimport { TestNavigation } from './testnavigation';\r\n\r\n\r\nnamespace debug {\r\n\r\n    export class TestRenderer extends Renderer {\r\n\r\n        protected _extensions = false;\r\n        protected _program: Program;\r\n\r\n        protected _ndcOffsetKernel: AntiAliasingKernel;\r\n        protected _uNdcOffset: WebGLUniformLocation;\r\n        protected _uFrameNumber: WebGLUniformLocation;\r\n        protected _ndcTriangle: NdcFillingTriangle;\r\n\r\n        protected _accumulate: AccumulatePass;\r\n        protected _blit: BlitPass;\r\n\r\n        protected _defaultFBO: DefaultFramebuffer;\r\n        protected _colorRenderTexture: Texture2;\r\n        protected _depthRenderbuffer: Renderbuffer;\r\n        protected _intermediateFBO: Framebuffer;\r\n\r\n        protected _testNavigation: TestNavigation;\r\n\r\n\r\n        protected onInitialize(context: Context, callback: Invalidate,\r\n            mouseEventProvider: MouseEventProvider,\r\n            /* keyEventProvider: KeyEventProvider, */\r\n            /* touchEventProvider: TouchEventProvider */): boolean {\r\n\r\n            const gl = this._context.gl;\r\n            const gl2facade = this._context.gl2facade;\r\n\r\n            /* Enable required extensions. */\r\n\r\n            if (this._extensions === false && this._context.isWebGL1) {\r\n                assert(this._context.supportsStandardDerivatives, `expected OES_standard_derivatives support`);\r\n                /* tslint:disable-next-line:no-unused-expression */\r\n                this._context.standardDerivatives;\r\n                this._extensions = true;\r\n            }\r\n\r\n            /* Create and configure program and geometry. */\r\n\r\n            const vert = new Shader(this._context, gl.VERTEX_SHADER, 'testrenderer.vert');\r\n            vert.initialize(require('./testrenderer.vert'));\r\n            const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'testrenderer.frag');\r\n            frag.initialize(require('./testrenderer.frag'));\r\n\r\n            this._program = new Program(this._context);\r\n            this._program.initialize([vert, frag]);\r\n\r\n            this._uNdcOffset = this._program.uniform('u_ndcOffset');\r\n            this._uFrameNumber = this._program.uniform('u_frameNumber');\r\n\r\n            this._ndcTriangle = new NdcFillingTriangle(this._context);\r\n            const aVertex = this._program.attribute('a_vertex', 0);\r\n            this._ndcTriangle.initialize(aVertex);\r\n\r\n            this._ndcOffsetKernel = new AntiAliasingKernel(this._multiFrameNumber);\r\n\r\n            /* Create framebuffers, textures, and render buffers. */\r\n\r\n            this._defaultFBO = new DefaultFramebuffer(this._context, 'DefaultFBO');\r\n            this._defaultFBO.initialize();\r\n\r\n            this._colorRenderTexture = new Texture2(this._context, 'ColorRenderTexture');\r\n            this._depthRenderbuffer = new Renderbuffer(this._context, 'DepthRenderbuffer');\r\n\r\n            this._intermediateFBO = new Framebuffer(this._context, 'IntermediateFBO');\r\n\r\n            /* Create and configure accumulation pass. */\r\n\r\n            this._accumulate = new AccumulatePass(this._context);\r\n            this._accumulate.initialize(this._ndcTriangle);\r\n            this._accumulate.precision = this._framePrecision;\r\n            this._accumulate.texture = this._colorRenderTexture;\r\n            // this._accumulate.depthStencilAttachment = this._depthRenderbuffer;\r\n\r\n            /* Create and configure blit pass. */\r\n\r\n            this._blit = new BlitPass(this._context);\r\n            this._blit.initialize(this._ndcTriangle);\r\n            this._blit.readBuffer = gl2facade.COLOR_ATTACHMENT0;\r\n            this._blit.drawBuffer = gl.BACK;\r\n            this._blit.target = this._defaultFBO;\r\n\r\n            /* Create and configure test navigation. */\r\n\r\n            this._testNavigation = new TestNavigation(() => this.invalidate(), mouseEventProvider);\r\n\r\n            return true;\r\n        }\r\n\r\n        protected onUninitialize(): void {\r\n            super.uninitialize();\r\n\r\n            this._uNdcOffset = -1;\r\n            this._uFrameNumber = -1;\r\n            this._program.uninitialize();\r\n\r\n            this._ndcTriangle.uninitialize();\r\n\r\n            this._intermediateFBO.uninitialize();\r\n            this._defaultFBO.uninitialize();\r\n            this._colorRenderTexture.uninitialize();\r\n            this._depthRenderbuffer.uninitialize();\r\n\r\n            this._blit.uninitialize();\r\n        }\r\n\r\n\r\n        protected onUpdate(): boolean {\r\n            this._testNavigation.update();\r\n\r\n            const redraw = this._testNavigation.altered;\r\n            this._testNavigation.reset();\r\n\r\n            if (!redraw && !this._altered.any) {\r\n                return false;\r\n            }\r\n\r\n            return redraw;\r\n        }\r\n\r\n        protected onPrepare(): void {\r\n            const gl = this._context.gl;\r\n            const gl2facade = this._context.gl2facade;\r\n\r\n            if (!this._intermediateFBO.initialized) {\r\n                this._colorRenderTexture.initialize(this._frameSize[0], this._frameSize[1],\r\n                    this._context.isWebGL2 ? gl.RGBA8 : gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE);\r\n                this._depthRenderbuffer.initialize(this._frameSize[0], this._frameSize[1], gl.DEPTH_COMPONENT16);\r\n                this._intermediateFBO.initialize([[gl2facade.COLOR_ATTACHMENT0, this._colorRenderTexture]\r\n                    , [gl.DEPTH_ATTACHMENT, this._depthRenderbuffer]]);\r\n\r\n            } else if (this._altered.frameSize) {\r\n                this._intermediateFBO.resize(this._frameSize[0], this._frameSize[1]);\r\n            }\r\n            if (this._altered.multiFrameNumber) {\r\n                this._ndcOffsetKernel.width = this._multiFrameNumber;\r\n            }\r\n            if (this._altered.framePrecision) {\r\n                this._accumulate.precision = this._framePrecision;\r\n            }\r\n\r\n            if (this._altered.clearColor) {\r\n                this._intermediateFBO.clearColor(this._clearColor);\r\n            }\r\n\r\n            this._accumulate.update();\r\n\r\n            this._altered.reset();\r\n        }\r\n\r\n        protected onFrame(frameNumber: number): void {\r\n            const gl = this._context.gl;\r\n\r\n            gl.viewport(0, 0, this._frameSize[0], this._frameSize[1]);\r\n\r\n            this._program.bind();\r\n\r\n            const ndcOffset = this._ndcOffsetKernel.get(frameNumber);\r\n            ndcOffset[0] = 2.0 * ndcOffset[0] / this._frameSize[0];\r\n            ndcOffset[1] = 2.0 * ndcOffset[1] / this._frameSize[1];\r\n            gl.uniform2fv(this._uNdcOffset, ndcOffset);\r\n            gl.uniform1i(this._uFrameNumber, frameNumber);\r\n\r\n            this._intermediateFBO.clear(gl.COLOR_BUFFER_BIT, true, false);\r\n            this._ndcTriangle.bind();\r\n            this._ndcTriangle.draw();\r\n            this._intermediateFBO.unbind();\r\n\r\n            this._accumulate.frame(frameNumber);\r\n        }\r\n\r\n        protected onSwap(): void {\r\n            this._blit.framebuffer = this._accumulate.framebuffer ?\r\n                this._accumulate.framebuffer : this._blit.framebuffer = this._intermediateFBO;\r\n            this._blit.frame();\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport = debug;\r\n","module.exports = \"\\r\\nprecision lowp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n#else \\r\\n    #define varying out\\r\\n#endif\\r\\n\\r\\n\\r\\nvoid ndcOffset(inout vec4 vertex, in vec2 offset) {\\r\\n    vertex.xy = offset * vec2(vertex.w) + vertex.xy;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    attribute vec2 a_vertex;\\r\\n#else \\r\\n    layout(location = 0) in vec2 a_vertex;\\r\\n#endif\\r\\n\\r\\nuniform vec2 u_ndcOffset;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    v_uv = a_vertex.xy * 0.5 + 0.5;\\r\\n\\r\\n    vec4 vertex = vec4(a_vertex, 0.0, 1.0);\\r\\n    ndcOffset(vertex, u_ndcOffset);\\r\\n\\r\\n    gl_Position = vertex;\\r\\n}\\r\\n\"","module.exports = \"\\r\\nprecision lowp float;\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\r\\n#else \\r\\n    #define varying in\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n#if __VERSION__ == 100\\r\\n    #define fragColor gl_FragColor\\r\\n    #extension GL_OES_standard_derivatives : enable\\r\\n#else \\r\\n    layout(location = 0) out vec4 fragColor;\\r\\n#endif\\r\\n\\r\\nuniform int u_frameNumber;\\r\\n\\r\\nvarying vec2 v_uv;\\r\\n\\r\\n\\r\\nvoid main(void)\\r\\n{\\r\\n    vec3 color = vec3(28.0 / 255.0, 117.0 / 255.0, 188.0 / 255.0);\\r\\n    color += (vec3(0.0, v_uv) - 0.5) * 0.125;\\r\\n\\r\\n    vec2 awidth = fwidth(v_uv) * (sin(float(u_frameNumber) * 0.1) * 7.0 + 8.0);\\r\\n    vec2 cstep = abs(step(awidth, v_uv) - step(awidth, 1.0 - v_uv));\\r\\n    if(!any(bvec2(cstep))) {\\r\\n        discard;\\r\\n    }\\r\\n    fragColor = vec4(color, 1.0); \\r\\n}\\r\\n\"","\r\n\r\nnamespace viewer {\r\n\r\n    interface HTMLEventListener { (event: Event): boolean; }\r\n\r\n    /**\r\n     * Auxiliary class for blocking and unblocking events on a HTML element. Example for blocking the contextmenu:\r\n     * ```\r\n     * blocker = new gloperate.EventBlocker(element);\r\n     * blocker.block('contextmenu');\r\n     * ```\r\n     */\r\n    export class EventBlocker {\r\n\r\n        /**\r\n         * Lookup table for blocked events and their listener.\r\n         */\r\n        private _blockListenerByEvent = new Map<string, HTMLEventListener>();\r\n\r\n        /**\r\n         * Element associated to this blocker.\r\n         */\r\n        protected _element: HTMLElement;\r\n\r\n        /**\r\n         * Creates an event blocker instance associated to a specific HTML element.\r\n         * @param element - Element that is to be associated with this blocker for block und unblock.\r\n         * @param events - Optional events that are blocked immediately.\r\n         */\r\n        constructor(element: HTMLElement, events?: Array<string>) {\r\n            this._element = element;\r\n            if (events === undefined) {\r\n                return;\r\n            }\r\n            for (const event of events) {\r\n                this.block(event);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Blocks a specific event by adding a listener the prevents the default and stops propagation.\r\n         * @param eventIdentifier - Event identifier that is to be blocked, e.g., 'contextmenu'.\r\n         */\r\n        block(eventIdentifier: string): void {\r\n            if (this._blockListenerByEvent.has(eventIdentifier)) {\r\n                return;\r\n            }\r\n            this._blockListenerByEvent.set(eventIdentifier,\r\n                (event): boolean => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    return false;\r\n                });\r\n            this._element.addEventListener(eventIdentifier,\r\n                this._blockListenerByEvent.get(eventIdentifier) as HTMLEventListener);\r\n        }\r\n\r\n        /**\r\n         * Unblocks a previously blocked event by removing the blocker/listener.\r\n         * @param eventIdentifier - Event identifier that is to be unblocked, e.g., 'contextmenu'.\r\n         */\r\n        unblock(eventIdentifier: string): void {\r\n            if (!this._blockListenerByEvent.has(eventIdentifier)) {\r\n                return;\r\n            }\r\n            this._element.removeEventListener(eventIdentifier,\r\n                this._blockListenerByEvent.get(eventIdentifier) as HTMLEventListener);\r\n            this._blockListenerByEvent.delete(eventIdentifier);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport = viewer;\r\n","\r\nimport { assert } from '../auxiliaries';\r\n\r\n\r\nnamespace viewer {\r\n\r\n    /**\r\n     * Utility class providing simplified access to the clients fullscreen API. The toggle can be used to toggle\r\n     * fullscreen for a HTML element while managing the execution of custom toggle code.\r\n     *\r\n     * ```\r\n     * canvas.element.addEventListener('click', function() { gloperate.viewer.Fullscreen.toggle(canvas.element); });\r\n     * ```\r\n     *\r\n     * Use `:fullscreen` (or `:-moz-full-screen`, `:-webkit-full-screen`, and `:-ms-full-screen`) selectors in order to\r\n     * configure fullscreen specific style. Alternatively, an additional class, e.g., `fullscreen`, could be toggled\r\n     * via callaback.\r\n     */\r\n    export class Fullscreen {\r\n\r\n        /**\r\n         * Cached fullscreenchange event function of the clients specific fullscreen API.\r\n         */\r\n        protected static _event: string;\r\n\r\n        /**\r\n         * Callback that is to be triggered within the remove event listener.\r\n         */\r\n        protected static _callback: (() => void) | undefined;\r\n\r\n        /**\r\n         * Backup of the element's initial width and height.\r\n         */\r\n        protected static _size: [string, string] = ['0', '0'];\r\n\r\n        /**\r\n         * Cached exit call of the clients specific fullscreen API.\r\n         */\r\n        protected static _exit: () => void;\r\n\r\n        /**\r\n         * Cached request call of the clients specific fullscreen API.\r\n         */\r\n        protected static _request: (element: HTMLElement) => void;\r\n\r\n        /**\r\n         * Cached element call returning the fullscreen element specific to the clients fullscreen API.\r\n         */\r\n        protected static _element: () => HTMLElement;\r\n\r\n        /**\r\n         * Event listener used to add the remove event listener using on indirection, that is, the first fullscreen\r\n         * event triggered after a request is ignored. This is important for triggering the fullscreen callback before\r\n         * the request is completed. The listener adds the removeListener and removes itself as listener.\r\n         */\r\n        protected static addEventListener: EventListener = (): void => {\r\n            window.removeEventListener(Fullscreen._event, Fullscreen.addEventListener);\r\n            window.addEventListener(Fullscreen._event, Fullscreen.removeEventListener);\r\n        }\r\n\r\n        /**\r\n         * Event listener that is used to account for implicit fullscreen exit events, e.g., user explicitly uses a GUI\r\n         * element for entering fullscreen, but uses ESC to exit fullscreen. The listener triggers the callback provided\r\n         * on toggle and removes itself as listener.\r\n         */\r\n        protected static removeEventListener: EventListener = (): void => {\r\n            if (Fullscreen._callback) {\r\n                Fullscreen._callback();\r\n                Fullscreen._callback = undefined;\r\n            }\r\n            window.removeEventListener(Fullscreen._event, Fullscreen.removeEventListener);\r\n        }\r\n\r\n        /**\r\n         * Query and cache the client specific fullscreen API.\r\n         */\r\n        protected static queryAndCacheAPI(): void {\r\n            if (Fullscreen._exit !== undefined) {\r\n                return;\r\n            }\r\n\r\n            /**\r\n             * Shadow global document declaration with an untyped one. This is done in order to use vendor specific\r\n             * properties without a compile error.\r\n             */\r\n            const document = window.document as any;\r\n\r\n            // Query the API to use.\r\n            const exits = [\r\n                document.exitFullScreen,\r\n                document.msExitFullscreen,\r\n                document.mozCancelFullScreen, // notice the capital S for Screen\r\n                document.webkitExitFullscreen,\r\n                undefined];\r\n\r\n            let api = 0;\r\n            for (; api < exits.length; ++api) {\r\n                if (exits[api] === undefined) {\r\n                    continue;\r\n                }\r\n                break;\r\n            }\r\n\r\n            switch (api) {\r\n                case 0: // native\r\n                    Fullscreen._exit = () => document.exitFullScreen();\r\n                    Fullscreen._request = (element: HTMLElement) => element.requestFullscreen();\r\n                    Fullscreen._element = () => document.fullscreenElement;\r\n                    Fullscreen._event = 'fullscreenchange';\r\n                    break;\r\n\r\n                case 1: // microsoft\r\n                    Fullscreen._exit = () => document.msExitFullscreen();\r\n                    Fullscreen._request = (element: HTMLElement) => (element as any).msRequestFullscreen();\r\n                    Fullscreen._element = () => document.msFullscreenElement;\r\n                    Fullscreen._event = 'msfullscreenchange';\r\n                    break;\r\n\r\n                case 2: // mozilla\r\n                    Fullscreen._exit = () => document.mozCancelFullScreen();\r\n                    Fullscreen._request = (element: HTMLElement) => (element as any).mozRequestFullScreen();\r\n                    Fullscreen._element = () => document.mozFullScreenElement;\r\n                    Fullscreen._event = 'mozfullscreenchange';\r\n                    break;\r\n\r\n                case 3: // webkit\r\n                    Fullscreen._exit = () => document.webkitExitFullscreen();\r\n                    Fullscreen._request = (element: HTMLElement) => (element as any).webkitRequestFullscreen();\r\n                    Fullscreen._element = () => document.webkitFullscreenElement;\r\n                    Fullscreen._event = 'webkitfullscreenchange';\r\n                    break;\r\n\r\n                default:\r\n                    assert(false,\r\n                        `none of the following fullscreen apis was found: native, ms, moz, or webkit`);\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Returns whether or not a fullscreen element exists, indicating if fullscreen is active or not.\r\n         */\r\n        static active(): boolean {\r\n            /* tslint:disable-next-line:no-null-keyword */\r\n            return Fullscreen._element() !== undefined && Fullscreen._element() !== null;\r\n        }\r\n\r\n        /**\r\n         * Requests or exits fullscreen mode for a given element. If the element is already in fullscreen, fullscreen\r\n         * mode is exited. Else, fullscreen mode is requested. The function considers various platform specific\r\n         * fullscreen interfaces, i.e., native, ms, moz, and webkit.\r\n         * @param element - Element to toggle fullscreen state of.\r\n         */\r\n        static toggle(element: HTMLElement, callback?: () => void): void {\r\n            if (element === undefined) {\r\n                return;\r\n            }\r\n            Fullscreen.queryAndCacheAPI();\r\n\r\n            const isFullscreen = Fullscreen.active();\r\n\r\n            if (!isFullscreen) {\r\n                /* Backup exact size of the element for restore when exiting fullscreen. */\r\n                const style = getComputedStyle(element);\r\n                Fullscreen._size[0] = style.width as string;\r\n                Fullscreen._size[1] = style.height as string;\r\n            }\r\n\r\n            /**\r\n             * The toggle callback is to be triggered first, always. Some browsers do not trigger a reflow when\r\n             * requesting or exiting fullscreen and simultaneously toggling some HTML element classes.\r\n             */\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            if (!isFullscreen) {\r\n                /**\r\n                 * Requesting fullscreen and adding the addEL event listener to the fullscreenchange always triggers the\r\n                 * event listener on fullscreen request or exit. addEL then removes itself and adds the event listener,\r\n                 * which in turn triggers the given callback and also removes itself as listener. This is a solid way to\r\n                 * assure single callback execution per toggle.\r\n                 */\r\n                Fullscreen._callback = callback;\r\n                window.addEventListener(Fullscreen._event, Fullscreen.addEventListener);\r\n\r\n            } else {\r\n                /**\r\n                 * If the toggle for exiting fullscreen was made explicitly (not by the browser or indirectly) the\r\n                 * event listener is removed here since the callback was already called (above).\r\n                 */\r\n                Fullscreen._callback = undefined;\r\n                window.removeEventListener(Fullscreen._event, Fullscreen.removeEventListener);\r\n\r\n                element.style.width = Fullscreen._size[0];\r\n                element.style.height = Fullscreen._size[1];\r\n            }\r\n\r\n            isFullscreen ? Fullscreen._exit() : Fullscreen._request(element);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport = viewer;\r\n"],"sourceRoot":""}