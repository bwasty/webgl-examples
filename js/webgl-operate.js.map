{"version":3,"sources":["webpack://gloperate/webpack/universalModuleDefinition","webpack://gloperate/webpack/bootstrap","webpack://gloperate/./auxiliaries.ts","webpack://gloperate/./initializable.ts","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix.js","webpack://gloperate/./gl-matrix-extensions.ts","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/common.js","webpack://gloperate/./object.ts","webpack://gloperate/./cameramodifier.ts","webpack://gloperate/external {\"root\":\"Rx\",\"commonjs\":\"rxjs/ReplaySubject\",\"commonjs2\":\"rxjs/ReplaySubject\",\"amd\":\"rxjs/ReplaySubject\"}","webpack://gloperate/./ndcfillingtriangle.ts","webpack://gloperate/./shader.ts","webpack://gloperate/./program.ts","webpack://gloperate/./texture2.ts","webpack://gloperate/./framebuffer.ts","webpack://gloperate/./wizard.ts","webpack://gloperate/./tuples.ts","webpack://gloperate/./shaders/ndcvertices.vert","webpack://gloperate/./geometry.ts","webpack://gloperate/./formatbytesizes.ts","webpack://gloperate/./buffer.ts","webpack://gloperate/./changelookup.ts","webpack://gloperate/./pointerlock.ts","webpack://gloperate/./mouseeventprovider.ts","webpack://gloperate/./extensionshash.ts","webpack://gloperate/./context.ts","webpack://gloperate/../node_modules/jsonschema/lib/helpers.js","webpack://gloperate/./renderbuffer.ts","webpack://gloperate/./eventhandler.ts","webpack://gloperate/./kernel.ts","webpack://gloperate/./randomsquarekernel.ts","webpack://gloperate/./turntablemodifier.ts","webpack://gloperate/./trackballmodifier.ts","webpack://gloperate/./firstpersonmodifier.ts","webpack://gloperate/./camera.ts","webpack://gloperate/./vertexarray.ts","webpack://gloperate/./controller.ts","webpack://gloperate/./color.ts","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack://gloperate/./canvas.ts","webpack://gloperate/./extensions.ts","webpack://gloperate/./contextmasquerade.ts","webpack://gloperate/./blitpass.ts","webpack://gloperate/./accumulatepass.ts","webpack://gloperate/./antialiasingkernel.ts","webpack://gloperate/./renderer.ts","webpack://gloperate/./defaultframebuffer.ts","webpack://gloperate/../node_modules/jsonschema/lib/scan.js","webpack://gloperate/../node_modules/url/url.js","webpack://gloperate/./xrcontroller.ts","webpack://gloperate/./raymath.ts","webpack://gloperate/./shaders/readbackdepth.frag","webpack://gloperate/./readbackpass.ts","webpack://gloperate/./shaders/blit.frag","webpack://gloperate/./shaders/accumulate.frag","webpack://gloperate/./ndcfillingrectangle.ts","webpack://gloperate/./zoommodifier.ts","webpack://gloperate/./panmodifier.ts","webpack://gloperate/./navigation.ts","webpack://gloperate/./texturecube.ts","webpack://gloperate/./colorgradient.ts","webpack://gloperate/./resizable.ts","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/quat.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack://gloperate/../node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack://gloperate/./gl2facade.ts","webpack://gloperate/./allocationregister.ts","webpack://gloperate/../node_modules/decode-uri-component/index.js","webpack://gloperate/../node_modules/object-assign/index.js","webpack://gloperate/../node_modules/strict-uri-encode/index.js","webpack://gloperate/../node_modules/query-string/index.js","webpack://gloperate/./webgl-operate.slim.ts","webpack://gloperate/./polyfill.ts","webpack://gloperate/./debug/testnavigation.ts","webpack://gloperate/./viewer/fullscreen.ts","webpack://gloperate/./viewer/eventblocker.ts","webpack://gloperate/./debug/testrenderer.frag","webpack://gloperate/./debug/testrenderer.vert","webpack://gloperate/./debug/testrenderer.ts","webpack://gloperate/../node_modules/jsonschema/lib/attribute.js","webpack://gloperate/../node_modules/querystring-es3/encode.js","webpack://gloperate/../node_modules/querystring-es3/decode.js","webpack://gloperate/../node_modules/querystring-es3/index.js","webpack://gloperate/../node_modules/url/util.js","webpack://gloperate/../node_modules/webpack/buildin/global.js","webpack://gloperate/../node_modules/webpack/buildin/module.js","webpack://gloperate/../node_modules/punycode/punycode.js","webpack://gloperate/../node_modules/jsonschema/lib/validator.js","webpack://gloperate/../node_modules/jsonschema/lib/index.js","webpack://gloperate/./properties.ts","webpack://gloperate/./webgl-operate.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","auxiliaries","query_string_1","disableAssertions","logVerbosityThreshold","error","log","verbosity","message","console","logVerbosity","undefined","Math","max","assertions","enable","LogLevel","assert","expression","EvalError","logIf","rand","min","random","prefixes","GETsearch","location","search","prettyPrintBytes","bytes","prefix","floor","prefixedBytes","pow","toFixed","bitInBitfield","flags","flag","RAD2DEG","DEG2RAD","GETparameter","parameter","parse","auxiliaries_1","Initializable","_this","this","_initialized","assertInitialized","assertInitializedFalse","assertUninitialized","initialize","target","propertyKey","descriptor","apply","arguments","assertUninitializedFalse","uninitialize","assert_initialized","assert_uninitialized","constructor","glMatrix","mat2","mat2d","mat3","mat4","quat","vec2","vec3","vec4","gl_matrix_extensions","gl_matrix_1","fract","x","ceil","sign","clamp","v2","clamp2","out","abs2","abs","v3","clamp3","abs3","one256ths","encode_float24x1_to_uint8x3","decode_float24x1_from_uint8x3","encode_uint24_to_rgb8","encode_uint32_to_rgba8","decode_uint24_from_rgb8","decode_uint32_from_rgba8","fromVec4","fromValues","v4","clamp4","abs4","fromVec3","parseVec2","v2str","numbers","JSON","length","isNaN","clone","parseVec3","v3str","parseVec4","v4str","mix","value1","value2","interpolation","m2","m3","m4","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","ENABLE_SIMD","SIMD_AVAILABLE","USE_SIMD","setMatrixArrayType","type","degree","PI","toRadian","a","equals","b","initializable_1","AbstractObject","_super","context","identifier","_valid","_referenceCount","_context","_identifier","__extends","args","_i","allocationRegister","createUniqueIdentifier","deleteUniqueIdentifier","Dev","reallocate","delete","_object","ref","initialized","unref","__decorate","camera_1","CameraModifier","_camera","_reference","Camera","camera","assign","update","buffer_1","geometry_1","NdcFillingTriangle","vertexVBO","Buffer","_buffers","push","bindBuffers","indices","attribEnable","gl","FLOAT","_aVertex","unbindBuffers","attribDisable","aVertex","valid","ARRAY_BUFFER","WebGLBuffer","data","VERTICES","STATIC_DRAW","draw","drawArrays","TRIANGLES","Geometry","Shader","FRAGMENT_SHADER","VERTEX_SHADER","_type","source","createShader","WebGLShader","isWebGL2","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","infoLog","getShaderInfoLog","isShader","deleteShader","Program","attach","shaders","shaders_1","shader","attachShader","link","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","detach","shaders_2","detachShader","numVertShaders","numFragShaders","shaders_3","createProgram","WebGLProgram","isProgram","deleteProgram","useProgram","unbind","DEFAULT_PROGRAM","uniform","getUniformLocation","attribute","bindAttribLocation","getAttribLocation","formatbytesizes_1","Texture2","_width","_height","_internalFormat","_format","width","height","internalFormat","format","gl2facade","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","DEFAULT_TEXTURE","isTexture","WebGLTexture","deleteTexture","unit","activeTexture","load","uri","crossOrigin","Promise","resolve","reject","image","Image","onerror","onload","resize","src","byteSizeOfFormat","HALF_FLOAT","RGBA16F","filter","mag","wrap","wrap_s","wrap_t","reformat","allocated","object_1","renderbuffer_1","texture2_1","Framebuffer","_buffersByAttachment","Map","_texturesByAttachment","_colorClearQueue","_drawBuffers","_drawBuffersChanged","statusString","status","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","attachments","createFramebuffer","_clearColors","COLOR_ATTACHMENT_MAX","COLOR_ATTACHMENT0","_clearDepth","_clearStencil","clear","isWebGL1","es2Clear","es3Clear","attachments_1","tuple","attachment","bufferOrTexture","Renderbuffer","set","COLOR_ATTACHMENT_MIN","index","bindFramebuffer","FRAMEBUFFER","forEach","buffer","framebufferRenderbuffer","RENDERBUFFER","texture","framebufferTexture2D","drawBuffers","checkFramebufferStatus","isFramebuffer","DEFAULT_FRAMEBUFFER","WebGLFramebuffer","deleteFramebuffer","mask","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","clearColor","COLOR_BUFFER_BIT","color","colorClearQueue","_a","drawBuffer","clearBufferfv","COLOR","DEPTH","hasAttachment","has","supportsDrawBuffers","alphaIssue","alpha","color2","premultipliedAlpha","depth","stencil","NaN","attachments_2","indexOf","Wizard","queryInternalTextureFormat","precision","floatWriteSupport","supportsTextureFloat","supportsColorBufferFloat","halfWriteSupport","supportsTextureHalfFloat","Precision","auto","internalFormatIndex","query","float","half","byte","colorBufferFloat","textureHalfFloat","UNSIGNED_BYTE","textureFloat","RGBA","RGBA32F","RGBA8","RGB","RGB32F","RGB16F","RGB8","NONE","tuples","gl_matrix_extensions_1","tuple2","tuple3","tuple4","clampf","semantic","valueV1","User","clampf2","tupleV2","clampf3","tupleV3","clampf4","tupleV4","duplicate2","duplicate3","duplicate4","equals2","t0","t1","equals3","equals4","vertexarray_1","_vertexArray","VertexArray","targets","UNSIGNED_INT_24_8_WEBGL","supportsDepthTexture","depthTexture","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT","UNSIGNED_INT","BYTE","SHORT","INT","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_24_8","FLOAT_32_UNSIGNED_INT_24_8_REV","SRGB8_ALPHA8_EXT","supportsSRGB","sRGB","SRGB_EXT","SRGB_ALPHA_EXT","RGB32F_EXT","RGBA32F_EXT","ALPHA","LUMINANCE","R8","R8I","R8UI","STENCIL_INDEX8","DEPTH_COMPONENT16","LUMINANCE_ALPHA","R16F","R16I","R16UI","RG8","RG8I","RG8UI","RGB565","RGB5_A1","RGBA4","DEPTH_COMPONENT24","RGB8UI","SRGB","SRGB8","DEPTH_STENCIL","DEPTH24_STENCIL8","DEPTH_COMPONENT32F","R11F_G11F_B10F","R32F","R32I","R32UI","RG16F","RG16I","RG16UI","RGB10_A2","RGB10_A2UI","RGB9_E5","RGBA8I","RGBA8UI","SRGB8_ALPHA8","SRGB_ALPHA","SRGB_ALPHA8","SRGB_APLHA8","DEPTH32F_STENCIL8","RG32F","RG32I","RG32UI","RGBA16I","RGBA16UI","RGBA32I","RGBA32UI","DEPTH_COMPONENT","_target","DEFAULT_BUFFER","createBuffer","ELEMENT_ARRAY_BUFFER","deleteBuffer","bindBuffer","usage","bufferData","isBuffer","getError","NO_ERROR","byteLength","size","normalized","stride","offset","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","ChangeLookup","alter","path","any","names","split","shift","join","parent","getOwnPropertyNames","child","reset","name_1","PointerLock","queryAndCacheAPI","_exit","document","exits","exitPointerLock","mozExitPointerLock","webkitExitPointerLock","api","_request","element","requestPointerLock","_element","pointerLockElement","mozCancelPointerLock","mozRequestPointerLock","mozPointerLockElement","webkitRequestPointerLock","webkitPointerLockElement","active","request","callback","exit","ReplaySubject_1","pointerlock_1","MouseEventProvider","timeframe","_pointerLockRequestPending","_timeframe","addEventListener","processPointerLockRequests","observable","Type","Click","clickObservable","Enter","enterObservable","Leave","leaveObservable","Down","downObservable","Up","upObservable","Move","moveObservable","Wheel","wheelObservable","lock","_clickSubject","ReplaySubject","_clickListener","event","next","onclick","asObservable","_enterSubject","_enterListener","onmouseenter","_leaveSubject","_leaveListener","onmouseleave","_downSubject","_downListener","onmousedown","_upSubject","_upListener","onmouseup","_moveSubject","_moveListener","onmousemove","_wheelSubject","_wheelListener","onwheel","extensions_1","ExtensionsHash","encode64","bitfield","BASE64_ALPHABET","decode64","base64","encode","backend","supported","version","LATEST_VERSION","extensions","EXTENSIONS_BY_VERSION","backendIndex","WEBGL_BACKENDS","hash","support","decode","hashHead","expectedHashLength","complement","WEBGL_EXTENSIONS_BY_BACKEND","ext","WEBGL1_EXTENSIONS","WEBGL2_EXTENSIONS","allocationregister_1","contextmasquerade_1","extensionshash_1","gl2facade_1","Context","_extensions","_allocationRegister","AllocationRegister","_mask","contextString","toString","webgl1","test","webgl2","_backend","BackendType","WebGL1","WebGL2","valueOf","Invalid","queryExtensionSupport","functionsUndefine","func","_gl2","GL2Facade","createMasqueradeFromGETorDataAttribute","dataset","ContextMasquerade","fromGET","msqrdH","fromHash","msqrdP","fromPreset","attributes","CONTEXT_ATTRIBUTES","toLowerCase","BackendRequestType","webgl","experimental","experimental1","experimental2","requestWebGL2","requestWebGL1","getContext","getContextAttributes","antialias","failIfMajorPerformanceCaveat","preserveDrawingBuffer","supports","extension","extensionsConceal","WEBGL2_DEFAULT_EXTENSIONS","getSupportedExtensions","ANGLE_instanced_arrays_supported","EXT_blend_minmax_supported","EXT_color_buffer_half_float_supported","EXT_disjoint_timer_query_supported","EXT_frag_depth_supported","EXT_sRGB_supported","EXT_shader_texture_lod_supported","OES_element_index_uint_supported","OES_standard_derivatives_supported","OES_texture_float_supported","OES_texture_half_float_supported","OES_vertex_array_object_supported","WEBGL_color_buffer_float_supported","WEBGL_depth_texture_supported","WEBGL_draw_buffers_supported","EXT_color_buffer_float_supported","EXT_disjoint_timer_query_webgl2_supported","EXT_texture_filter_anisotropic_supported","OES_texture_float_linear_supported","OES_texture_half_float_linear_supported","WEBGL_compressed_texture_astc_supported","WEBGL_compressed_texture_atc_supported","WEBGL_compressed_texture_etc_supported","WEBGL_compressed_texture_etc1_supported","WEBGL_compressed_texture_pvrtc_supported","WEBGL_compressed_texture_s3tc_supported","WEBGL_compressed_texture_s3tc_srgb_supported","WEBGL_debug_renderer_info_supported","WEBGL_debug_shaders_supported","WEBGL_lose_context_supported","getExtension","ANGLE_instanced_arrays","EXT_blend_minmax","EXT_color_buffer_half_float","EXT_disjoint_timer_query","EXT_disjoint_timer_query_webgl2","EXT_frag_depth","EXT_sRGB","EXT_shader_texture_lod","EXT_texture_filter_anisotropic","OES_element_index_uint","OES_standard_derivatives","OES_texture_float","OES_texture_float_linear","OES_texture_half_float","OES_texture_half_float_linear","OES_vertex_array_object","WEBGL_color_buffer_float","EXT_color_buffer_float","WEBGL_compressed_texture_astc","WEBGL_compressed_texture_atc","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_debug_renderer_info","WEBGL_debug_shaders","WEBGL_depth_texture","WEBGL_draw_buffers","WEBGL_lose_context","blitFramebuffer","readBuffer","about","pNamesAndValues","getParameter","RENDERER","VENDOR","VERSION","SHADING_LANGUAGE_VERSION","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_VARYING_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORT_DIMS","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","MAX_COLOR_ATTACHMENTS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_DRAW_BUFFERS","MAX_ELEMENT_INDEX","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_PROGRAM_TEXEL_OFFSET","MAX_SAMPLES","MAX_SERVER_WAIT_TIMEOUT","MAX_TEXTURE_LOD_BIAS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_VARYING_COMPONENTS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MIN_PROGRAM_TEXEL_OFFSET","WEBGL1_EXTENSIONS_1","WEBGL2_DEFAULT_EXTENSIONS_1","_b","WEBGL2_EXTENSIONS_1","logAbout","maxPNameLength","about_1","extensionSeparator","about_2","repeat","ValidationError","instance","schema","propertyPath","argument","id","stack","ValidatorResult","options","ctx","errors","throwError","disableFormat","stringizer","v","addError","detail","err","Error","importErrors","res","validatorType","map","SchemaError","msg","captureStackTrace","SchemaContext","base","schemas","makeChild","propertyName","makeSuffix","FORMAT_REGEXPS","date-time","date","time","email","ip-address","ipv6","hostname","host-name","alphanumeric","utc-millisec","input","parseFloat","parseInt","regex","result","RegExp","e","style","phone","regexp","pattern","ipv4","isFormat","validator","customFormats","match","stringify","deepMerge","array","isArray","dst","concat","keys","pathEncoder","encodeURIComponent","replace","deepCompareStrict","every","aKeys","bKeys","objectGetPath","k","parts","slice","decodeURIComponent","encodePath","getDecimalPlaces","number","decimalPlaces","Number","decimalParts","createRenderbuffer","bindRenderbuffer","renderbufferStorage","isRenderbuffer","DEFAULT_RENDER_BUFFER","WebGLRenderbuffer","deleteRenderbuffer","mouseeventprovider_1","EventHandler","invalidate","mouseEventProvider","_subscriptions","_latestMouseEventsByType","_previousMouseEventsByType","_mouseEventHandlerByType","_invalidate","_mouseEventProvider","force","pushMouseEventHandler","handler","latest_1","subscribe","invokeMouseEventHandler","handlers","latest","previous","dispose","unsubscribe","offsets","normalize","MouseEvent","clientX","clientY","WheelEvent","TouchEvent","touches","touch","rect","currentTarget","srcElement","getBoundingClientRect","offsets_1","left","top","scale","devicePixelRatio","pushClickHandler","pushMouseEnterHandler","pushMouseLeaveHandler","pushMouseDownHandler","pushMouseUpHandler","pushMouseMoveHandler","pushMouseWheelHandler","pointerLock","AbstractKernel","components","_components","_depth","xPosOrIndex","yPos","zPos","_samples","sample","elements","fromJSON","json","flatten","reduce","kernel","fromArray","xPos","position","clamped","bytesPerComponent","KernelF32","samples","KernelUI32","Uint32Array","KernelI32","Int32Array","KernelUI8","Uint8Array","KernelI8","Int8Array","RandomSquareKernel","generate","TurntableModifier","_rotation","_maxAzimuth","_minAzimuth","_xAxisScreenSpace","_sensitivity","DEFAULT_SENSITIVITY","initiate","point","_initialPoint","centerToEye","sub","eye","center","cross","_azimuth","acos","dot","process","_currentPoint","magnitudes","subtract","rotateY","rotate","T","fromTranslation","multiply","translate","negate","up","transformMat4","sensitivity","TrackballModifier","copy","ortho","axis","add","q","setAxisAngle","len","fromQuat","FirstPersonModifier","movement","strafe","yaw","fromRotation","pitch","mul","_fovy","DEFAULT_FOVY","_near","DEFAULT_NEAR","_far","DEFAULT_FAR","_viewport","_aspect","_altered","_eye","DEFAULT_EYE","_center","DEFAULT_CENTER","_up","DEFAULT_UP","calculateFovY","elementDisplayHeight","eyeToDisplayDistance","atan","invalidateView","invalidateProjection","_view","_viewInverse","_projection","_projectionInverse","_viewProjection","_viewProjectionInverse","fovy","near","far","aspect","lookAt","invert","view","perspective","projection","viewProjection","_buffersBound","bindBOs","unbindBOs","supportsVertexArrayObject","createVertexArray","_bind","bindVertexArray","_unbind","DEFAULT_VERTEX_ARRAY","deleteVertexArray","Controller","_batchSize","_debug","_multiFrameNumber","_multiFrameNumberSubject","_debugFrameNumber","_debugFrameNumberSubject","_frameNumber","_frameNumberSubject","_pendingRequest","_pause","_block","_blockedUpdates","_intermediateFrameCount","_multiFrameCount","_intermediateFrameTimes","_multiTime","_controllable","ModuleDev","dfnum","mfnum","pause","numRemainingIntermediates","requestAnimationFrame","invoke","RequestType","Frame","block","cancel","cancelAnimationFrame","Update","invokeUpdate","NonOptionalUpdate","Prepare","invokePrepare","invokeFrame","unblock","redraw","_pauseTime","_multiFrameTime","MAX_VALUE","MIN_VALUE","performance","now","prepare","updateDuration","_updateFrameTime","debug","batchEnd","frame","swap","frameDuration","frameNumberNext","multiFrameNumberNext","debugFrameNumberNext","ignore","unpause","pauseDelay","controllable","multiFrameNumber","debugFrameNumber","multiFrameTime","tuples_1","Color","rgba","_rgba","DEFAULT_ALPHA","fromF32","hue2rgb","to2CharHexCode","round","hsl2rgb","hsl","hslF","rgb2hsl","rgb","rgbF","delta","deltaR","deltaG","deltaB","lab2xyz","lab","labF","yr","xr","zr","yr3","xr3","zr3","xyz2lab","xyz","xyzF","y","z","xyz2rgb","g","rgb2xyz","lab2rgb","rgb2lab","cmyk2rgb","cmyk","cmykF","rgb2cmyk","k1","k2","k3","hex2rgba","hex","HEX_FORMAT_REGEX","startsWith","rgb2hex","rgba2hex","rgbaF","other","red","green","blue","fromUI8","fromHSL","hue","saturation","lightness","alphaf","fromLAB","greenRed","blueYellow","fromCMYK","cyan","magenta","yellow","fromHex","gray","algorithm","GrayscaleAlgorithm","LinearLuminance","Average","LeastSaturatedVariant","MinimumDecomposition","MaximumDecomposition","ui8Array","f32Array","vec","w","divide","div","scaleAndAdd","distance","sqrt","dist","squaredDistance","sqrDist","squaredLength","sqrLen","inverse","lerp","ax","ay","az","aw","transformQuat","qx","qy","qz","qw","ix","iy","iz","iw","count","fn","arg","str","exactEquals","a0","a1","a2","a3","b0","b1","b2","b3","bx","by","bz","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","cos","sin","transformMat3","rotateX","rotateZ","angle","tempA","tempB","cosine","fromMat4","m00","m01","m02","m10","m11","m12","m20","m21","m22","identity","transpose","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","det","adjoint","determinant","b00","b02","b10","b12","b20","b22","rad","fromScaling","fromMat2d","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","frob","multiplyScalar","multiplyScalarAndAdd","a4","a5","a6","a7","a8","b4","b5","b6","b7","b8","color_1","context_1","controller_1","resizable_1","wizard_1","Canvas","contextAttributes","controller","_framePrecisionSubject","_size","_sizeSubject","_frameScaleSubject","_frameSizeSubject","HTMLCanvasElement","getElementById","dataClearColor","_controller","configureController","configureSizeAndScale","_clearColor","DEFAULT_CLEAR_COLOR","dataFramePrecision","accumulationFormat","DEFAULT_FRAME_PRECISION","_framePrecision","framePrecisionNext","dataMFNum","dataDFNum","DEFAULT_MULTI_FRAME_NUMBER","mfNumChanged","dfNumChanged","dataFrameScale","dataFrameSize","frameScale","_frameScale","frameSize","_favorSizeOverScale","_frameSize","onResize","retrieveSize","Resizable","elementSize","sizeNext","_renderer","frameScaleNext","frameSizeNext","renderer","blocked","framePrecision","debugTexture","backendString","_extensionsStrive","_extensionsConceal","_functionsUndefine","preset","identifiers","presets","extensions_hash","extensions_conceal","extensions_strive","functions_undefine","msqrdHash","msqrdPreset","MASQUERADE_JSON","ndcfillingtriangle_1","program_1","shader_1","BlitPass","_ndcTriangleShared","functionBlit","DRAW_FRAMEBUFFER","_framebuffer","READ_FRAMEBUFFER","_readBuffer","_drawBuffer","SCISSOR_TEST","scissor","disable","programBlit","_ndcTriangle","viewport","_program","TEXTURE0","ndcTriangle","vert","frag","uniform1i","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","supportsBlitFramebuffer","framebuffer","changelookup_1","framebuffer_1","AccumulatePass","passThrough","_precision","_write","_accumulationFBOs","_accumulationTextures","_uWeight","uniform1f","_texture","_passThrough","sizeAltered","textureSize","frameNumber","readIndex","writeIndex","accumTexture","frameTexture","TEXTURE1","AntiAliasingKernel","Renderer","canvasSize","_canvasSize","_debugTextures","_debugTextureSubject","debugTextureNext","_debugTexture","onInitialize","onUninitialize","canvas","onUpdate","onPrepare","renderViews","onFrame","onSwap","frameCoords","DefaultFramebuffer","urilib","helpers","SchemaScanResult","found","scan","scanSchema","baseuri","$ref","resolvedUri","ourBase","substring","scanArray","items","extends","additionalItems","scanObject","properties","additionalProperties","definitions","patternProperties","dependencies","disallow","allOf","anyOf","oneOf","not","punycode","util","Url","protocol","slashes","auth","host","port","pathname","href","urlParse","relative","resolveObject","obj","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","url","parseQueryString","slashesDenoteHost","isObject","u","TypeError","queryIndex","splitter","uSplit","rest","trim","simplePath","exec","substr","proto","lowerProto","atSign","hostEnd","hec","lastIndexOf","parseHost","ipv6Hostname","hostparts","part","newpart","j","charCodeAt","validParts","notHost","bit","unshift","toASCII","h","ae","esc","escape","qm","charAt","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","splice","isAbsolute","canvas_1","supportsXR","navigator","RenderView","_cameraPositionValid","_cameraPosition","_projectionMatrix","_viewMatrix","projectionMatrix","viewMatrix","_inverseViewMatrix","XRController","sessionOpts","onXRFrameCallback","onXRFrame","frameOfRefType","sessionCreationOptions","requestDevice","device","sent","compatibleXRDevice","supportsSession","requestSession","session","_c","canvasEl","createElement","baseLayer","XRWebGLLayer","webGLLayerInit","requestFrameOfReference","frameOfRefOptions","frameOfRef","onEndSession","endSession","end","pose","getDevicePose","views","getViewMatrix","getViewport","ray_math","rayCircleIntersection","ray0","ray1","radius","ray_direction","intersection","rayLineIntersection","line0","line1","cross_rs","qp","rayPlaneIntersection","origin","normal","rdDotN","distancePointToRay","ray_length","eyeToPoint","pointSquareIntersection","edgeLength","raySquareIntersection","halfLength","vertices","intersections","raySphereIntersection","rayOriginToSphereCenter","dot_term","rayPlaneIntersection_tube","intersection2","isPointWithinSquare","p_abs","isPointWithinNDC","p_transformed","eyeWithPointInView","ray_normalized","ortho_v","ortho_u","closest","part_v","part_u","tan","ReadbackPass","_cache","_depthAttachment","_cachedDepths","_cachedIDs","_buffer","directReadDepthAt","_depthFBO","readPixels","renderThenReadDepthAt","uniform2f","_uOffset","_uScale","depthAt","coordsAt","zInNDC","viewProjectionInverse","idAt","_idFBO","_idAttachment","NdcFillingRectangle","TRIANGLE_STRIP","ZoomModifier","PanModifier","eventhandler_1","firstpersonmodifier_1","trackballmodifier_1","turntablemodifier_1","Navigation","_alwaysRotateOnMove","_eventHandler","latests","onMouseDown","onMouseUp","onMouseMove","onClick","metaphor","Metaphor","Turntable","isPrimaryButtonDown","buttons","isMouseDown","isMouseMove","Modes","Rotate","start","_metaphor","FirstPerson","firstPerson","_firstPerson","movementX","movementY","preventDefault","Trackball","trackball","_trackball","turntable","_turntable","_mode","Zoom","modeWasUndefined","TextureCube","_bytes","faceID","face","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP","LINEAR","urisByFace","images","positiveX","negativeX","positiveY","negativeY","positiveZ","negativeZ","waiting","images_1","bytesPerFace","deallocate","allocate","perFaceData","clearOnUndefined","ColorGradient","_lerpSpace","LerpSpace","space","_resizeEventListener","instances","event_1","EVENT_IDENTIFIER","eventSupported","documentElement","body","item","getComputedStyle","removeEventListener","transformMat2","transformMat2d","tmpvec3","xUnitVec3","yUnitVec3","matr","temp1","temp2","rotationTo","setAxes","right","fromMat3","getAxisAngle","out_axis","bw","calculateW","slerp","omega","cosom","sinom","scale0","scale1","sqlerp","invDot","conjugate","fRoot","fTrace","scalar","SIMD","m03","m13","m23","m30","m31","m32","m33","tmp01","tmp23","out0","out1","out2","out3","Float32x4","shuffle","store","row0","row1","row2","row3","tmp1","minor0","minor1","minor2","minor3","swizzle","reciprocalApproximation","splat","a_1","a_2","a_0","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","getTranslation","mat","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","frustum","bottom","rl","tb","nf","f","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","lr","bt","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","a9","a14","a15","b9","b13","b14","b15","tx","ty","aa","ab","ac","ad","atx","aty","v0","v1","LDU","L","D","U","queryHalfFloatSupport","queryColorAttachments","queryInstancedArraySupport","queryDrawBuffersSupport","queryVertexArrayObjectSupport","queryMaxUniformVec3Components","queryTexImageInterface","_halfFloat","HALF_FLOAT_OES","_colorAttachmentMin","_colorAttachmentMax","_colorAttachments","MAX_COLOR_ATTACHMENTS_WEBGL","COLOR_ATTACHMENT0_WEBGL","supportsInstancedArrays","drawArraysInstanced","first","instanceCount","instancedArrays","drawArraysInstancedANGLE","drawElementsInstanced","primcount","drawElementsInstancedANGLE","vertexAttribDivisor","divisor","vertexAttribDivisorANGLE","buffers","drawBuffersWEBGL","vertexArrayObject","createVertexArrayOES","arrayObject","deleteVertexArrayOES","isVertexArray","isVertexArrayOES","bindVertexArrayOES","_maxUniformVec3Components","level","internalformat","border","ArrayBuffer","Uint8ClampedArray","Int16Array","Uint16Array","Float64Array","DataView","_bytesByIdentifier","_bytesSubject","bytesNext","bytesToString","assertIdentifier","uniqueIdentifier","unificationSuffix","previousBytes","output","singleMatcher","multiMatcher","decodeComponents","tokens","encodedURI","replaceMap","%FE%FF","%FF%FE","entries","customDecodeURIComponent","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","String","test2","fromCharCode","test3","letter","shouldUseNative","from","symbols","to","val","toObject","toUpperCase","strictUriEncode","objectAssign","decodeComponent","opts","strict","extract","queryStart","formatter","arrayFormat","accumulator","parserForArrayFormat","ret","param","sort","Boolean","keysSorter","encoderForArrayFormat","val2","parseUrl","colorgradient_1","defaultframebuffer_1","renderer_1","texturecube_1","cameramodifier_1","navigation_1","panmodifier_1","zoommodifier_1","ndcfillingrectangle_1","antialiasingkernel_1","randomsquarekernel_1","kernel_1","accumulatepass_1","blitpass_1","readbackpass_1","root_auxiliaries","gl_matrix_2","root_gl_matrix_extensions","root_raymath","root_tuples","xrcontroller_1","searchString","action","that","log10","LOG10E","TestNavigation","onMouseEnter","onMouseLeave","viewer","Fullscreen","exitFullScreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","fullscreenElement","_event","msRequestFullscreen","msFullscreenElement","mozRequestFullScreen","mozFullScreenElement","webkitRequestFullscreen","webkitFullscreenElement","toggle","isFullscreen","_callback","EventBlocker","events","_blockListenerByEvent","events_1","eventIdentifier","stopPropagation","testnavigation_1","TestRenderer","supportsStandardDerivatives","standardDerivatives","_uNdcOffset","_uFrameNumber","_ndcOffsetKernel","_defaultFBO","_colorRenderTexture","_depthRenderbuffer","_intermediateFBO","_accumulate","_blit","BACK","_testNavigation","altered","ndcOffset","uniform2fv","ignoreProperties","default","description","title","exclusiveMinimum","exclusiveMaximum","$schema","validators","testSchemaNoThrow","validateSchema","Function","testAdditionalProperty","types","preValidateProperty","some","testType","list","inner","nestedErrors","self","prop","minProperties","maxProperties","minimum","maximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","divisorDecimals","maxDecimals","multiplier","testArrays","multipleOf","divisibleBy","required","string","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dep","childContext","notTypes","schemaId","stringifyPrimitive","isFinite","sep","eq","objectKeys","ks","xs","qs","maxKeys","kstr","vstr","idx","eval","webpackPolyfill","deprecate","paths","children","__WEBPACK_AMD_DEFINE_RESULT__","nodeType","freeGlobal","global","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","overflow","not-basic","invalid-input","baseMinusTMin","stringFromCharCode","RangeError","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","adapt","numPoints","firstTime","basic","oldi","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toUnicode","Validator","unresolvedRefs","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","validate","sch","switchSchema","schemaobj","schemaTraverser","superResolve","resolved","subctx","subschema","skipAttributes","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","integer","boolean","Date","jsonschema_1","properties_1","references","references_1","reference","propertiesSchema","properties_2","propertySchema","isDefined","hasProperties","hasDefault","itemsSchema","compare","objectL","objectR","tracker","track","names_1","Set","values","name_2","__export","root_properties","debug_TestNavigation","debug_TestRenderer","viewer_EventBlocker","viewer_Fullscreen"],"mappings":"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","file":"webgl-operate.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rxjs/ReplaySubject\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rxjs/ReplaySubject\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gloperate\"] = factory(require(\"rxjs/ReplaySubject\"));\n\telse\n\t\troot[\"gloperate\"] = factory(root[\"Rx\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 98);\n","\nimport { parse } from 'query-string';\n\n/**\n * If true, assertions immediately return on invocation (variable can be set via webpack define plugin).\n */\ndeclare var DISABLE_ASSERTIONS: boolean;\n\n/**\n * If defined, logs of equal or higher verbosity level are skipped (variable can be set via webpack define plugin).\n */\ndeclare var LOG_VERBOSITY_THRESHOLD: number; // -1 disables all logs\n\n\n/** Namespace that comprises various utils (also cleans up documentation). */\nnamespace auxiliaries {\n\n    let disableAssertions: boolean;\n    try {\n        disableAssertions = DISABLE_ASSERTIONS;\n    } catch (error) {\n        disableAssertions = false;\n    }\n\n    let logVerbosityThreshold: number;\n    try {\n        logVerbosityThreshold = LOG_VERBOSITY_THRESHOLD;\n    } catch (error) {\n        logVerbosityThreshold = 2;\n    }\n\n    /**\n     * Allows to specify the log verbosity. The default verbosity depends on the bundle type, e.g., a production bundle\n     * might use a verbosity of 1, a local development bundle might favor a verbosity of 2. Even though verbosity levels\n     * can be used arbitrarily, a verbosity of 0 is intended for user info only, 1 for developers, and 2 for developers\n     * of this module. However, this semantic breaks when reusing this logging mechanism in other modules as well...\n     * @param verbosity - Log level threshold, -1:disabled, 0:user, 1:developer, and 2:module developer.\n     * @returns - The current log verbosity.\n     */\n    export function logVerbosity(verbosity?: number): number {\n        if (verbosity !== undefined) {\n            logVerbosityThreshold = Math.max(-1, verbosity);\n        }\n        return logVerbosityThreshold;\n    }\n\n    /**\n     * Allows to specify whether or not assertions should be enabled or disabled/ignored.\n     * @param enable - If true, assertions will be evaluated and might throw errors.\n     */\n    export function assertions(enable?: boolean): boolean {\n        if (enable) {\n            disableAssertions = !enable;\n        }\n        return disableAssertions;\n    }\n\n    /**\n     * Log verbosity levels:\n     *   0: a non dev user should find this information useful\n     *   1: a dev user should find this information useful\n     *   2: a module dev should find this information useful\n     */\n    export enum LogLevel { User, Dev, ModuleDev }\n\n    /**\n     * Evaluates the provided expression and throws an evaluation error if false.\n     * ```\n     * assert(foo <= threshold, `value of foo ${foo} exceeds threshold of ${threshold}`);\n     * ```\n     * @param expression - Result of an expression expected to be true.\n     * @param message - Message to be passed to the error (if thrown).\n     */\n    export function assert(expression: boolean, message: string): void {\n        if (disableAssertions || expression) {\n            return;\n        }\n\n        // Note: the parameters are intentionally not forwarded to console.assert since it does not interrupt execution.\n        throw new EvalError(message);\n    }\n\n\n    /**\n     * Writes a warning to the console when the evaluated expression is false.\n     * ```\n     * log(,`scale changed to ${scale}, given ${this._scale}`);\n     * ```\n     * @param expression - Result of an expression expected to be true.\n     * @param verbosity - Verbosity of log level: user, developer, or module developer.\n     * @param message - Message to be passed to the error (if thrown).\n     */\n    export function log(verbosity: LogLevel, message: string): void {\n        if (verbosity > logVerbosityThreshold) {\n            return;\n        }\n        console.log(`[${verbosity}] ${message}`);\n    }\n\n    /**\n     * Writes a lo message to the console when the evaluated expression is false.\n     * ```\n     * logIf(!vec2.equals(this._scale, scale), LogLevel.Dev, `scale changed to ${scale}, given ${this._scale}`);\n     * ```\n     * @param expression - Result of an expression expected to be true.\n     * @param verbosity - Verbosity of log level: user, developer, or module developer.\n     * @param message - Message to be passed to the error (if thrown).\n     */\n    export function logIf(expression: boolean, verbosity: LogLevel, message: string): void {\n        if (!expression) {\n            return;\n        }\n        log(verbosity, message);\n    }\n\n    /**\n     * Generates a random value within a given range [min,max].\n     * @param min - Minimum random value possible.\n     * @param max - Maximum random value possible.\n     * @return - Random number in the range [min,max].\n     */\n    export function rand(min: number = 0.0, max: number = 1.0): number {\n        return Math.random() * (max - min) + min;\n    }\n\n    /**\n     * Byte prefixes based on ISO/IEC 80000 used for pretty printing of bytes.\n     */\n    const prefixes: Array<string> = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi'];\n\n    /**\n     * Prints bytes using ISO/IEC 80000 prefixes for bytes and fixed number of decimal places (3 decimal places if\n     * bytes >= KiB).\n     * ```\n     * prettyPrintBytes(27738900); // returns '26.454MiB'\n     * ```\n     * @param bytes - Number of bytes in plain bytes.\n     */\n    export function prettyPrintBytes(bytes: number): string {\n        const prefix: number = bytes > 0 ? Math.floor(Math.log(bytes) / Math.log(1024)) : 0;\n        const prefixedBytes = bytes / Math.pow(1024, prefix);\n        return `${prefix > 0 ? prefixedBytes.toFixed(3) : prefixedBytes}${prefixes[prefix]}B`;\n    }\n\n    /**\n     * Tests if specific bits are set in a given bitfield and returns true if so, false otherwise.\n     */\n    export function bitInBitfield(flags: GLbitfield, flag: GLbitfield | undefined): boolean {\n        if (flag === undefined) {\n            return false;\n        }\n        return (flags & flag) === flag;\n    }\n\n    /**\n     * Conversion multiplier for radians to degrees conversion (180 / PI).\n     */\n    export const RAD2DEG = 57.295779513082320;\n\n    /**\n     * Conversion multiplier for degrees to radians conversion (PI / 180).\n     */\n    export const DEG2RAD = 0.017453292519943295;\n\n    /**\n     * Queries window.location.search.\n     */\n    export function GETsearch(): string {\n        return window.location.search;\n    }\n\n    /**\n     * Queries the value of a GET parameter.\n     *  * @param parameter - Name/identifier of the parameter to query for.\n     */\n    export function GETparameter(parameter: string): string | undefined {\n        const params = parse(GETsearch());\n        return params[parameter];\n    }\n\n}\n\nexport = auxiliaries;\n","\nimport { assert } from './auxiliaries';\n\n\n/**\n * Mixin that incorporates basic (un-)initialization workflow. The inheritor should specialize initialize and\n * uninitialize and decorate them with @initialize and @uninitialize respectively. When the object gets constructed it\n * is not initialized. It can be initialized only when it is not initialized and uninitialized vice versa. Failure\n * states result in invalid asserts.\n * The initialization status within the inheritor can be asserted using assertInitialized and assertUninitialized.\n *\n * ```\n * class Test extends Initializable {\n *\n *     @initialize()\n *     initialize(name: string): boolean {\n *         ....\n *         return true;\n *     }\n *\n *     @uninitialize()\n *     uninitialize(): void {\n *         ...\n *     }\n *\n *     doStuffWhenInitialized(): void {\n *         this.assertInitialized();\n *         ...\n *     }\n *     // ... or alternatively:\n *     @assert_initialized()\n *     doOtherStuffWhenInitialized(): void {\n *         ...\n *     }\n * ```\n */\nexport abstract class Initializable {\n\n    /** @see {@link initialized} */\n    private _initialized = false;\n\n\n    protected static readonly assertInitializedFalse = (object: Initializable) =>\n        /* tslint:disable-next-line:semicolon */\n        assert(false, `instance of ${object.constructor.name} expected to be initialized`);\n    protected static readonly assertUninitializedFalse = (object: Initializable) =>\n        /* tslint:disable-next-line:semicolon */\n        assert(false, `instance of ${object.constructor.name} not expected to be initialized`);\n\n    /**\n     * Method decorator for initialization of Initializable inheritors. This decorator asserts the initialization status\n     * of the instance that is to be initialized, invokes its initialization with arbitrary number of parameters,\n     * and sets the initialization status to the initialization success (either false or true).\n     * In order to encourage the use of `assertInitialized` and `assertUninitialized` they are dynamically\n     * bound to either a static, always-failing assert or an empty/undefined function.\n     */\n    static initialize() {\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n\n            const initialize = descriptor.value;\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\n            descriptor.value = function (): boolean {\n                assert(this._initialized === false, `re-initialization of initialized object not anticipated`);\n\n                /* call actual initialization and set initialization status */\n                this._initialized = initialize.apply(this, arguments);\n\n                /* assign assert functions for better performance when initialized */\n                if (this._initialized) {\n                    this.assertInitialized = () => undefined;\n                    this.assertUninitialized = () => Initializable.assertUninitializedFalse(this);\n                } else {\n                    this.assertUninitialized = () => undefined;\n                    this.assertInitialized = () => Initializable.assertInitializedFalse(this);\n                }\n                return this._initialized;\n            };\n            return descriptor;\n        };\n    }\n\n    /**\n     * Method decorator for uninitialization of Initializable inheritors. This decorator asserts the initialization\n     * status of the instance that is to be uninitialized, invokes its uninitialization, and falsifies the\n     * initialization status. In order to encourage the use of `assertInitialized` and `assertUninitialized` they are\n     * dynamically bound to a static, always-failing assert and an empty/undefined function respectively.\n     */\n    static uninitialize() {\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n\n            const uninitialize = descriptor.value;\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\n            descriptor.value = function (): void {\n                assert(this._initialized === true, `expected object to be initialized in order to uninitialize`);\n\n                /* call actual uninitialization */\n                uninitialize.apply(this);\n                this._initialized = false;\n\n                /* assign assert functions for better performance when uninitialized */\n                this.assertUninitialized = () => undefined;\n                this.assertInitialized = () => Initializable.assertInitializedFalse(this);\n            };\n            return descriptor;\n        };\n    }\n\n    /**\n     * Method decorator for asserting the initialization status of an initializable to be true.\n     * @see {@link assertInitialized}\n     */\n    static assert_initialized() {\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n\n            const initialize = descriptor.value;\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\n            descriptor.value = function (): any {\n                this.assertInitialized();\n                /* call actual initialization and set initialization status */\n                return initialize.apply(this, arguments);\n            };\n            return descriptor;\n        };\n    }\n\n    /**\n     * Method decorator for asserting the initialization status of an initializable to be false.\n     * @see {@link assertUninitialized}\n     */\n    static assert_uninitialized() {\n        return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n\n            const initialize = descriptor.value;\n            /* tslint:disable-next-line:space-before-function-paren only-arrow-functions */\n            descriptor.value = function () {\n                this.assertUninitialized();\n                /* call actual initialization and set initialization status */\n                initialize.apply(this, arguments);\n            };\n            return descriptor;\n        };\n    }\n\n\n    /**\n     * Asserts the objects initialization status to be true. Note that the implementation is cached and forwarded to\n     * either an empty function when initialized and to an acutal assert(false) otherwise.\n     */\n    protected assertInitialized: () => void = () => Initializable.assertInitializedFalse(this);\n\n    /**\n     * Asserts the objects initialization status to be false. Note that the implementation is cached and forwarded to\n     * either an empty function when uninitialized and to an acutal assert(false) otherwise.\n     */\n    protected assertUninitialized: () => void = () => undefined;\n\n    /**\n     * Should implement actual initialization and has to be decorated by @initialize in order to assert initialization\n     * status and update the initialization status (based on return value).\n     * @param args - All args are passed to the onInitialize function a subclass must override.\n     * @returns - True if initialization was successful.\n     */\n    abstract initialize(...args: any[]): boolean;\n\n    /**\n     * Uninitialization event that should be specialized by inheritor and has to be decorated by @uninitialize in order\n     * to assert initialization status and set the initialization status to false.\n     */\n    abstract uninitialize(): void;\n\n    /**\n     * Property getter for readonly access to the initialization status of an initializable instance.\n     */\n    get initialized() {\n        return this._initialized;\n    }\n\n}\n","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.2\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nexports.glMatrix = require(\"./gl-matrix/common.js\");\nexports.mat2 = require(\"./gl-matrix/mat2.js\");\nexports.mat2d = require(\"./gl-matrix/mat2d.js\");\nexports.mat3 = require(\"./gl-matrix/mat3.js\");\nexports.mat4 = require(\"./gl-matrix/mat4.js\");\nexports.quat = require(\"./gl-matrix/quat.js\");\nexports.vec2 = require(\"./gl-matrix/vec2.js\");\nexports.vec3 = require(\"./gl-matrix/vec3.js\");\nexports.vec4 = require(\"./gl-matrix/vec4.js\");","\nimport { mat2, mat3, mat4, vec2, vec3, vec4 } from 'gl-matrix';\n\n\n/** Namespace that comprises various gl-matrix extensions (also cleans up documentation). */\nnamespace gl_matrix_extensions {\n\n    // GLSL sign https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sign.xhtml\n\n    /**\n     * Extract the sign of the parameter as specified in GLSL.\n     * @param x - Value from which to extract the sign.\n     * @returns - -1.0 if x is less than 0.0, 0.0 if x is equal to 0.0, and +1.0 if x is greater than 0.0.\n     */\n    export function sign(x: number): number {\n        return x > 0.0 ? 1.0 : x < 0.0 ? -1.0 : 0.0;\n    }\n\n    // GLSL clamp https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/clamp.xhtml\n\n    /**\n     * Constrain a value to lie between two further values.\n     * ```\n     * clamp(+3, +0, +2); // results in +2;\n     * ```\n     * @param x - The number to clamp.\n     * @param min - Minimum number operand.\n     * @param max - Maximum number operand.\n     * @returns - Number constrained to [min,max].\n     */\n    export function clamp(x: number, min: number, max: number): number {\n        return Math.max(min, Math.min(max, x));\n    }\n\n    /**\n     * Compute the fractional part of the argument.\n     * ```\n     * fract(+1.23); // results in +0.23\n     * fract(-1.23); // results in -0.23\n     * ```\n     * @param x - The number to compute the fractional part of.\n     * @returns - The fractional part of x. This is calculated as x - floor(x).\n     */\n    export function fract(x: number): number {\n        return x > 0 ? x - Math.floor(x) : x - Math.ceil(x);\n    }\n\n\n    /**\n     * A vec2 placeholder to overcome the gl-matrix out interface.\n     */\n    export function v2(): vec2 {\n        return vec2.create();\n    }\n\n    /**\n     * Constrain a two-component vector to lie between two further two-component vectors.\n     * ```\n     * let a: vec2 = vec2.fromValues(2, 2);\n     * clamp2(a, a, [0, 0], [1, 1]);\n     * ```\n     * @param out - The receiving vector.\n     * @param x - The vector to clamp.\n     * @param min - Minimum vector operand.\n     * @param max - Maximum vector operand.\n     * @returns - Vector constrained to [min,max].\n     */\n    export function clamp2(out: vec2, x: vec2 | number[], min: vec2 | number[], max: vec2 | number[]): vec2 {\n        out[0] = Math.max(min[0], Math.min(max[0], x[0]));\n        out[1] = Math.max(min[1], Math.min(max[1], x[1]));\n        return out;\n    }\n\n    /**\n     * Derive the absolute values of each of the two vector components.\n     * ```\n     * let a: vec2 = vec2.fromValues(-2, 2);\n     * abs2(a, a); // should result in [2,2]\n     * ```\n     * @param out - The receiving vector.\n     * @param x - The vector to apply abs to.\n     * @returns - Vector with each component as absolute value.\n     */\n    export function abs2(out: vec2, x: vec2): vec2 {\n        out[0] = Math.abs(x[0]);\n        out[1] = Math.abs(x[1]);\n        return out;\n    }\n\n    /**\n     * A vec3 placeholder to overcome the gl-matrix out interface.\n     */\n    export function v3(): vec3 {\n        return vec3.create();\n    }\n\n    /**\n     * Constrain a three-component vector to lie between two further three-component vectors.\n     * ```\n     * let a: vec3 = vec3.fromValues(2, 2, 2);\n     * clamp3(a, a, [0, 0, 0], [1, 1, 1]);\n     * ```\n     * @param out -The receiving vector.\n     * @param x - The vector to clamp.\n     * @param min - Minimum vector operand.\n     * @param max - Maximum vector operand.\n     * @returns - Vector constrained to [min,max].\n     */\n    export function clamp3(out: vec3, x: vec3 | number[], min: vec3 | number[], max: vec3 | number[]): vec3 {\n        out[0] = Math.max(min[0], Math.min(max[0], x[0]));\n        out[1] = Math.max(min[1], Math.min(max[1], x[1]));\n        out[2] = Math.max(min[2], Math.min(max[2], x[2]));\n        return out;\n    }\n\n    /**\n     * Derive the absolute values of each of the three vector components.\n     * ```\n     * let a: vec3 = vec3.fromValues(-2, 2, -1);\n     * abs3(a, a); // should result in [2,2,1]\n     * ```\n     * @param out - The receiving vector.\n     * @param x - The vector to apply abs to.\n     * @returns  - Vector with each component as absolute value.\n     */\n    export function abs3(out: vec3, x: vec3): vec3 {\n        out[0] = Math.abs(x[0]);\n        out[1] = Math.abs(x[1]);\n        out[2] = Math.abs(x[2]);\n        return out;\n    }\n\n    const one256ths: number = 1.0 / 256.0;\n\n    /**\n     * Encodes a 24bit floating point in [0,1] into three 8bit components (vec3 of uint8).\n     * @param out - The vector to encode into.\n     * @param x - 24bit floating point number to encode.\n     * @returns - Vector with the float encoded.\n     */\n    export function encode_float24x1_to_uint8x3(out: vec3, x: number): vec3 {\n        out[0] = Math.floor(x * 256.0);\n        out[1] = Math.floor(fract(x * 256.0) * 256.0);\n        out[2] = Math.floor(fract(x * 65536.0) * 256.0);\n        return out;\n    }\n\n    /**\n     * Decodes three 8bit components of a vec3 to a 24bit floating point number.\n     * @param x - Vector with three 8bit unsigned int components (uint8x3).\n     * @returns - Encoded 24bit floating point number.\n     */\n    export function decode_float24x1_from_uint8x3(x: vec3): number {\n        return (x[0] + (x[1] + x[2] * one256ths) * one256ths) * one256ths;\n    }\n\n    /**\n     * Packs a 24bit unsigned int into a three component byte vector.\n     * ```\n     * let uint8x3: vec3 = vec3.create();\n     * encode_uint24_in_rgb8(uint8x3, 250285); // should result in [ 173, 209, 3 ]\n     * ```\n     * @param out - byte (uint8) vector with packed uint24 data\n     * @param x - uint24 number\n     * @returns - Three component byte vector with x packed.\n     */\n    export function encode_uint24_to_rgb8(out: vec3, x: number): vec3 {\n        out[0] = (x >> 0) & 0xFF;\n        out[1] = (x >> 8) & 0xFF;\n        out[2] = (x >> 16) & 0xFF;\n        return out;\n    }\n\n    /**\n     * Packs a 32bit unsigned int into a four component byte vector.\n     * ```\n     * let uint8x4: vec3 = vec4.create();\n     * encode_uint24_in_rgb8(uint8x4, 250285); // should result in [ 173, 209, 3, 0 ]\n     * ```\n     * @param out - byte (uint8) vector with packed uint32 data\n     * @param x - uint32 number\n     * @returns - Three component byte vector with x packed.\n     */\n    export function encode_uint32_to_rgba8(out: vec4, x: number): vec4 {\n        out[0] = (x >> 0) & 0xFF;\n        out[1] = (x >> 8) & 0xFF;\n        out[2] = (x >> 16) & 0xFF;\n        out[3] = (x >> 24) & 0xFF;\n\n        return out;\n    }\n\n    /**\n     * Unpacks a 24bit unsigned int from a three component byte vector.\n     * ```\n     * let uint8x3: vec3 = vec3.fromValues(173, 209, 3);\n     * decode_uint24_from_rgb8(uint8x3); // should return 250285\n     * ```\n     * @param x - byte (uint8) vector with packed uint24 data\n     * @returns - Unpacked 24bit unsigned int.\n     */\n    export function decode_uint24_from_rgb8(x: vec3): number {\n        return x[0] + (x[1] << 8) + (x[2] << 16);\n    }\n\n    /**\n     * Unpacks a 32bit unsigned int from a four component byte vector.\n     * ```\n     * let uint8x4: vec4 = vec4.fromValues(173, 209, 3, 23);\n     * decode_uint24_from_rgba8(uint8x4); // should return xxx\n     * ```\n     * @param x - byte (uint8) vector with packed uint32 data\n     * @returns - Unpacked 32bit unsigned int.\n     */\n    export function decode_uint32_from_rgba8(x: vec4): number {\n        return x[0] + (x[1] << 8) + (x[2] << 16) + (x[3] << 24);\n    }\n\n    /**\n     * Constructs a vec3 from a vec4 with division by the w component applied.\n     * ```\n     * const v4: vec4 = vec4.fromValues(2, 4, 6, 2);\n     * const v3: vec3 = fromVec4(v4); // v3 is [1, 2, 3]\n     * ```\n     * @param x - The vector to be transformed to a vec3.\n     * @returns - Three component vector based on x.\n     */\n    export function fromVec4(x: vec4): vec3 {\n        return vec3.fromValues(x[0] / x[3], x[1] / x[3], x[2] / x[3]);\n    }\n\n    /**\n     * A vec4 placeholder to overcome the gl-matrix out interface.\n     */\n    export function v4(): vec4 {\n        return vec4.create();\n    }\n\n    /**\n     * Constrain a four-component vector to lie between two further four-component vectors.\n     * ```\n     * let a: vec4 = vec4.fromValues(2, 2, 2, 2);\n     * clamp4(a, a, [0, 0, 0, 0], [1, 1, 1, 1]);\n     * ```\n     * @param out - The receiving vector.\n     * @param x - The vector to clamp.\n     * @param min - Minimum vector operand.\n     * @param max - Maximum vector operand.\n     * @returns - Vector constrained to [min,max].\n     */\n    export function clamp4(out: vec4, x: vec4 | number[], min: vec4 | number[], max: vec4 | number[]): vec4 {\n        out[0] = Math.max(min[0], Math.min(max[0], x[0]));\n        out[1] = Math.max(min[1], Math.min(max[1], x[1]));\n        out[2] = Math.max(min[2], Math.min(max[2], x[2]));\n        out[3] = Math.max(min[3], Math.min(max[3], x[3]));\n        return out;\n    }\n\n    /**\n     * Derive the absolute values of each of the four vector components.\n     * ```\n     * let a: vec4 = vec4.fromValues(-2, 2, -1, 1);\n     * abs4(a, a); // should result in [2,2,1,1]\n     * ```\n     * @param out - The receiving vector.\n     * @param x - The vector to apply abs to.\n     * @returns - Vector with each component as absolute value.\n     */\n    export function abs4(out: vec4, x: vec4): vec4 {\n        out[0] = Math.abs(x[0]);\n        out[1] = Math.abs(x[1]);\n        out[2] = Math.abs(x[2]);\n        out[3] = Math.abs(x[3]);\n        return out;\n    }\n\n    /**\n     * Constructs a vec4 from a vec3 by appending 1.0 as the w component.\n     * ```\n     * const v3: vec3 = vec3.fromValues(2, 4, 6);\n     * const v4: vec4 = fromVec3(v3); // v3 is [2, 4, 6, 1]\n     * ```\n     * @param x - The vector to be transformed to a vec4.\n     * @returns - Four component vector based on x.\n     */\n    export function fromVec3(x: vec3): vec4 {\n        return vec4.fromValues(x[0], x[1], x[2], 1.0);\n    }\n\n\n    /**\n     * Parses a vec2 from a string.\n     * @param v2str - String in the format '<number>, <number>', e.g., '1.0, 0.0'.\n     * @returns - Vec2 if string was parsed successfully, undefined else.\n     */\n    export function parseVec2(v2str: string | undefined): vec2 | undefined {\n        if (v2str === undefined || v2str === '') {\n            return undefined;\n        }\n        let numbers = [];\n        try {\n            numbers = JSON.parse(`[${v2str}]`);\n        } catch (error) {\n            return undefined;\n        }\n        return numbers.length !== 2 || isNaN(numbers[0]) || isNaN(numbers[1]) ?\n            undefined : vec2.clone(numbers);\n    }\n\n    /**\n     * Parses a vec3 from a string.\n     * @param v3str - String in the format '<number>, <number>, <number>', e.g., '1.0, 0.0, 1.0'.\n     * @returns - Vec3 if string was parsed successfully, undefined else.\n     */\n    export function parseVec3(v3str: string | undefined): vec3 | undefined {\n        if (v3str === undefined || v3str === '') {\n            return undefined;\n        }\n        let numbers = [];\n        try {\n            numbers = JSON.parse(`[${v3str}]`);\n        } catch (error) {\n            return undefined;\n        }\n        return numbers.length !== 3 || isNaN(numbers[0]) || isNaN(numbers[1]) || isNaN(numbers[2]) ?\n            undefined : vec3.clone(numbers);\n    }\n\n    /**\n     * Parses a vec4 from a string.\n     * @param v4str - String in the format '<number>, <number>, <number>, <number>', e.g., '1.0, 0.0, 0.0, 0.0'.\n     * @returns - Vec4 if string was parsed successfully, undefined else.\n     */\n    export function parseVec4(v4str: string | undefined): vec4 | undefined {\n        if (v4str === undefined || v4str === '') {\n            return undefined;\n        }\n        let numbers = [];\n        try {\n            numbers = JSON.parse(`[${v4str}]`);\n        } catch (error) {\n            return undefined;\n        }\n        return numbers.length !== 4 || isNaN(numbers[0]) || isNaN(numbers[1]) ||\n            isNaN(numbers[2]) || isNaN(numbers[3]) ?\n            undefined : vec4.clone(numbers);\n    }\n\n\n    /**\n     * Performs a mix as specified in GLSL.\n     * @param value1 - The first value.\n     * @param value2 - The second value.\n     * @param interpolation - The interpolation value (usually between 0 and 1).\n     * @return - The interpolated value between value1 and value2.\n     */\n    export function mix(value1: number, value2: number, interpolation: number): number {\n        return value1 * (1.0 - interpolation) + value2 * interpolation;\n    }\n\n\n    /**\n     * A mat2 placeholder to overcome the gl-matrix out interface.\n     */\n    export function m2(): mat2 {\n        return mat2.create();\n    }\n    /**\n     * A mat3 placeholder to overcome the gl-matrix out interface.\n     */\n    export function m3(): mat3 {\n        return mat3.create();\n    }\n\n    /**\n     * A mat4 placeholder to overcome the gl-matrix out interface.\n     */\n    export function m4(): mat4 {\n        return mat4.create();\n    }\n\n}\n\nexport = gl_matrix_extensions;\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Configuration Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\nglMatrix.ENABLE_SIMD = false;\n\n// Capability detection\nglMatrix.SIMD_AVAILABLE = (glMatrix.ARRAY_TYPE === Float32Array) && ('SIMD' in this);\nglMatrix.USE_SIMD = glMatrix.ENABLE_SIMD && glMatrix.SIMD_AVAILABLE;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    glMatrix.ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less \n * than or equal to 1.0, and a relative tolerance is used for larger values)\n * \n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nglMatrix.equals = function(a, b) {\n\treturn Math.abs(a - b) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nmodule.exports = glMatrix;\n","\nimport { assert, log, LogLevel } from './auxiliaries';\n\nimport { Context } from './context';\nimport { Initializable } from './initializable';\n\n\n/**\n * A generic WebGL object trait that has a size, a status, an identifier, and is initializable. A context and an object\n * handle are provided for internal use and can be read from outside. Furthermore, an object supports optional reference\n * counting. If used, an object cannot be initialized when already referenced, and cannot be delete as long as at least\n * a single reference is active.\n */\nexport abstract class AbstractObject<T> extends Initializable {\n\n    /** @see {@link context} */\n    protected _context: Context;\n\n    /** @see {@link identifier} */\n    protected _identifier: string;\n\n    /** @see {@link object} */\n    protected _object: T | undefined;\n\n    /** @see {@link valid} */\n    protected _valid = false;\n\n    /**\n     * Number of references to this object. If at least a single reference was counted, this object can neither be\n     * initialized (and thus created) nor uninitialized (and thus deleted). The reference count is controlled via\n     * ref() and unref() functions.\n     */\n    protected _referenceCount = 0;\n\n    /**\n     * Object constructor, requires a context and a valid identifier.\n     * @param context - Valid context to create the object for.\n     * @param identifier - Meaningful name for identification of this instance.\n     */\n    constructor(context: Context, identifier?: string) {\n        super();\n        this._context = context;\n        this._identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\n    }\n\n\n    /**\n     * Object creation which is invoked on initialization.\n     * @returns - The created WebGL object handle.\n     */\n    protected abstract create(...args: any[]): T | undefined;\n\n    /**\n     * Object deletion which is invoked on uninitialization.\n     */\n    protected abstract delete(): void;\n\n\n    /**\n     * @override\n     * Ensure that an object handle is created at the point of initialization. When overriding this function\n     * super.initialize() has to be invoked immediately/first. Please note that initialization of invalid\n     * object raises an assertion in order to prevent further actions without a valid WebGL object. After\n     * object creation the valid property is expected to be set accordingly.\n     */\n    @Initializable.initialize()\n    initialize(...args: any[]): boolean {\n        this._identifier = this._context.allocationRegister.createUniqueIdentifier(this._identifier);\n        this.create.apply(this, args);\n\n        if (!this._valid) {\n            this._context.allocationRegister.deleteUniqueIdentifier(this._identifier);\n            log(LogLevel.Dev, `initialization of '${this._identifier}' failed`);\n        }\n        return this._valid;\n    }\n\n    /**\n     * @override\n     * Ensure that an object handle is deleted, invalidated, and its allocated GPU resources are set to zero.\n     * When overriding this function super.uninitialize() has to be invoked last/at the end.\n     * Note that an object cannot be uninitialized if it is referenced (reference count > 0).\n     */\n    @Initializable.uninitialize()\n    uninitialize(): void {\n        this._context.allocationRegister.reallocate(this._identifier, 0);\n        this._context.allocationRegister.deleteUniqueIdentifier(this._identifier);\n\n        this.delete();\n        assert(this._object === undefined, `expected object '${this._identifier}' to be undefined after delete`);\n        assert(this._valid === false, `expected object '${this._identifier}' to be invalid after delete`);\n    }\n\n\n    /**\n     * Read-only access to the objects context, used to get context information and WebGL API access.\n     */\n    get context(): Context {\n        return this._context;\n    }\n\n    /**\n     * Every GPU asset that allocates memory should provide a human readable identifier for GPU allocation tracking and\n     * debugging purposes. Please note that the identifier might changed on initialization due to the generation and\n     * assignment of a unique identifier.\n     * @returns - This assets identifier used for gpu allocation tracking and debugging.\n     */\n    get identifier(): string {\n        return this._identifier;\n    }\n\n    /**\n     * Read-only access to the WebGL object handle.\n     */\n    get object(): T {\n        assert(this._object !== undefined, `access to undefined object`);\n        return this._object as T;\n    }\n\n    /**\n     * Cached object status used to derive validity when initialized.\n     * @returns - True if the object status is complete, false otherwise.\n     */\n    get valid(): boolean {\n        return this._valid;\n    }\n\n    /**\n     * Increment the reference count of this object.\n     */\n    ref(): void {\n        assert(this.initialized, `expected object to be initialized in order to be referenced`);\n        ++this._referenceCount;\n    }\n\n    /**\n     * Decrement the reference count of this object.\n     */\n    unref(): void {\n        assert(this._referenceCount > 0, `expected object to be referenced in order to decrease its reference count`);\n        --this._referenceCount;\n    }\n\n}\n","\nimport { vec2 } from 'gl-matrix';\n\nimport { Camera } from './camera';\n\n\nexport abstract class CameraModifier {\n\n    /** @see {@link camera} */\n    protected _camera: Camera | undefined = undefined;\n\n    /**\n     * Copy of a camera for ongoing camera modifications based on previous/initial camera settings.\n     */\n    protected _reference = new Camera();\n\n    /**\n     * Reference to the initial point starting the camera modification.\n     */\n    protected _initialPoint: vec2;\n\n    /**\n     * Reference to the current point updating the camera modification.\n     */\n    protected _currentPoint: vec2;\n\n\n    /**\n     * Should apply all previously calculated transformations to the camera set. Note that this does not invalidate the\n     * rendering. Invalidation of rendering is done by the event handler (triggering a rendering update which in turn\n     * checks if the camera was altered, and if so, redraws).\n     */\n    abstract update(): void;\n\n\n    /**\n     * The camera that is to be modified in response to various events.\n     */\n    set camera(camera: Camera | undefined) {\n        if (this._camera === camera) {\n            return;\n        }\n        this._camera = camera;\n        if (camera === undefined) {\n            return;\n        }\n        Object.assign(this._reference, camera);\n        this.update();\n    }\n\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","\nimport { assert } from './auxiliaries';\n\n\nimport { Buffer } from './buffer';\nimport { Context } from './context';\nimport { Geometry } from './geometry';\nimport { Initializable } from './initializable';\n\n\n/**\n * Geometry for a viewport/screen-filling triangle. The geometry creates triangle vertices, associated to\n * a vertex array object (from geometry base class), and provides a specialized draw call for rendering. It is intended\n * for, e.g., viewport/screen-filling rendering in post-processing. The vertices can be used directly as normalized\n * device space (NDC) coordinates, e.g., by using the following vertex shader snippet:\n * ```\n * #if __VERSION__ == 100\n *     attribute vec2 a_vertex;\n * #else\n *     layout(location = 0) in vec2 a_vertex;\n * #endif\n *\n * ...\n *\n * v_uv = a_vertex * 0.5 + 0.5;\n * gl_Position = vec4(a_vertex, 0.0, 1.0);\n * ```\n */\nexport class NdcFillingTriangle extends Geometry {\n\n    /**\n     * 2───────┬ ----- 1\n     * │       │    /\n     * │       │ /\n     * ├───────┘\n     * |     /\n     * |  /\n     * 0\n     */\n    protected static readonly VERTICES = new Float32Array(\n        [-1.0, -3.0, 3.0, 1.0, -1.0, 1.0]);\n\n    /** @see {@link aVertex} */\n    protected _aVertex: GLuint;\n\n\n    /**\n     * Object constructor, requires a context and an identifier.\n     * @param context - Valid context to create the object for.\n     * @param identifier - Meaningful name for identification of this instance.\n     */\n    constructor(context: Context, identifier?: string) {\n        super(context, identifier);\n\n        /* Generate identifier from constructor name if none given. */\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\n\n        const vertexVBO = new Buffer(context, identifier + 'VBO');\n        this._buffers.push(vertexVBO);\n    }\n\n\n    /**\n     * Binds the vertex buffer object (VBO) to an attribute binding point of a given, pre-defined index.\n     */\n    protected bindBuffers(indices: Array<GLuint>): void {\n        /* Please note the implicit bind in attribEnable */\n        this._buffers[0].attribEnable(indices[0], 2, this.context.gl.FLOAT, false, 0, 0, true, false);\n        this._aVertex = indices[0];\n    }\n\n    /**\n     * Unbinds the vertex buffer object (VBO) and disables the binding point.\n     */\n    protected unbindBuffers(indices: Array<GLuint>): void {\n        /* Please note the implicit unbind in attribEnable is skipped */\n        this._buffers[0].attribDisable(indices[0], true, true);\n    }\n\n\n    /**\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\n     * @param aVertex - Attribute binding point for vertices.\n     */\n    initialize(aVertex: GLuint): boolean {\n        const gl = this.context.gl;\n        const valid = super.initialize([gl.ARRAY_BUFFER], [aVertex]);\n\n        assert(this._buffers[0] !== undefined && this._buffers[0].object instanceof WebGLBuffer,\n            `expected valid WebGLBuffer`);\n\n        this._buffers[0].data(NdcFillingTriangle.VERTICES, gl.STATIC_DRAW);\n\n        return valid;\n    }\n\n    /**\n     * Specifies/invokes the draw of this screen-aligned triangle.\n     */\n    @Initializable.assert_initialized()\n    draw(): void {\n        const gl = this.context.gl;\n        gl.drawArrays(gl.TRIANGLES, 0, 3);\n    }\n\n\n    /**\n     * Attribute location this geometries vertices are bound to.\n     */\n    get aVertex(): GLint {\n        return this._aVertex;\n    }\n\n}\n","\nimport { assert, log, LogLevel } from './auxiliaries';\n\nimport { Context } from './context';\nimport { AbstractObject } from './object';\n\n\n/**\n * WebGL shader wrapper encapsulating shader creation, compilation, and deletion. A shader can be attached to multiple\n * Programs for linking, and can be deleted if detached from all (linked) programs.\n *\n * ```\n * var frag = new gloperate.Shader(context, context.gl.FRAGMENT_SHADER, 'EmptyFragmentShader');\n * var vert = new gloperate.Shader(context, context.gl.VERTEX_SHADER, 'EmptyVertexShader');\n * vert.initialize('void main() { }');\n * frag.initialize('void main() { }');\n *\n * var prog = new gloperate.Program(context, 'EmptyProgram');\n * prog.initialize([frag, vert]);\n * ```\n */\nexport class Shader extends AbstractObject<WebGLShader> {\n\n    /** @see {@link type} */\n    protected _type: GLenum;\n\n    /**\n     * Object constructor, requires a context and a valid identifier.\n     * @param context - Valid context to create the object for.\n     * @param type - Either GL_VERTEX_SHADER or GL_FRAGMENT_SHADER.\n     * @param identifier - Meaningful name for identification of this instance.\n     */\n    constructor(context: Context, type: GLenum, identifier?: string) {\n        const gl = context.gl;\n        if (identifier === undefined) {\n            switch (type) {\n                case context.gl.FRAGMENT_SHADER:\n                    identifier = 'FragmentShader';\n                    break;\n                case context.gl.VERTEX_SHADER:\n                    identifier = 'VertexShader';\n                    break;\n                default:\n                    assert(false, `expected either a FRAGMENT_SHADER (${gl.FRAGMENT_SHADER}) ` +\n                        `or a VERTEX_SHADER (${gl.VERTEX_SHADER}), given ${type}`);\n            }\n        }\n        super(context, identifier);\n        this._type = type;\n    }\n\n    /**\n     * Creates a shader, sets the shader source, and compiles the shader. If the shader source cannot be compiled, the\n     * identifier and an info log are logged to console and the shader object is deleted. Note that a '#version 300 es'\n     * is added in case the shader source is compiled in a WebGL2 context.\n     * @param source - Shader source.\n     * @returns - Either a new shader or undefined if compilation failed.\n     */\n    protected create(source: string): WebGLShader | undefined {\n        const gl = this._context.gl;\n        this._object = gl.createShader(this._type);\n        assert(this._object instanceof WebGLShader, `expected WebGLShader object to be created`);\n\n        if (this._context.isWebGL2) {\n            source = '#version 300 es\\n' + source;\n        }\n\n        gl.shaderSource(this._object, source);\n        gl.compileShader(this._object);\n\n        if (!gl.getShaderParameter(this._object, gl.COMPILE_STATUS)) {\n            const infoLog: string = gl.getShaderInfoLog(this._object);\n            log(LogLevel.Dev, `compilation of shader '${this._identifier}' failed: ${infoLog}`);\n\n            this.delete();\n            return undefined;\n        }\n\n        this._valid = gl.isShader(this._object);\n        return this._object;\n    }\n\n    /**\n     * Delete the shader object. This should have the reverse effect of `create`.\n     */\n    protected delete(): void {\n        assert(this._object !== undefined, `expected WebGLShader object`);\n        this._context.gl.deleteShader(this._object);\n        this._object = undefined;\n        this._valid = false;\n    }\n\n    /**\n     * Either VERTEX_SHADER or FRAGMENT_SHADER.\n     */\n    get type() {\n        this.assertInitialized();\n        return this._type;\n    }\n\n}\n","\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\n\nimport { Bindable } from './bindable';\nimport { Initializable } from './initializable';\nimport { AbstractObject } from './object';\nimport { Shader } from './shader';\n\n\n/**\n * WebGL Program wrapper encapsulating program creation, shader attachment, linking, binding, as well as attribute and\n * uniform location retrieval. A program is intended to be used as follows:\n *\n * ```\n * this.program.initialize(\n *  [('screenaligned.vert', require('../shaders/screenaligned.vert'))],\n *  [('blit.frag', require('../shaders/blit.frag'))]);\n *\n * this.a_vertex = this.program.attribute('a_vertex');\n * const u_texture = this.program.uniform('u_texture');\n *\n * this.program.bind();\n * gl.uniform1i(u_texture, 0);\n * // ... draw\n * this.program.unbind();\n * ```\n */\nexport class Program extends AbstractObject<WebGLProgram> implements Bindable {\n\n    /**\n     * Default program, e.g., used for unbind.\n     */\n    static readonly DEFAULT_PROGRAM = undefined;\n\n\n    /**\n     * Attaches and references all given shaders. Attach is expected to be called once within creation of a Program.\n     * Shaders that are not initialized will be skipped/not attached.\n     * @param shaders - All shaders to be attached to the program for linking.\n     * @returns - True if attaching all shaders and linking succeeded, false otherwise.\n     */\n    protected attach(shaders: Array<Shader>): boolean {\n        assert(this._object !== undefined, `expected a WebGLProgram object`);\n        const gl = this._context.gl;\n\n        for (const shader of shaders) {\n            if (!shader.initialized) {\n                log(LogLevel.Dev, `shader '${shader.identifier}' not initialized.`);\n                continue;\n            }\n            gl.attachShader(this._object, shader.object);\n            shader.ref();\n        }\n        return true;\n    }\n\n    /**\n     * Links the program with all its already attached shaders. If linking fails, a developer log with additional\n     * information is provided.\n     * @returns - True if linking the program succeeded, false otherwise.\n     */\n    protected link(): boolean {\n        assert(this._object !== undefined, `expected WebGLProgram object`);\n        const gl = this._context.gl;\n\n        gl.linkProgram(this._object);\n\n        if (!gl.getProgramParameter(this._object, gl.LINK_STATUS)) {\n            const infoLog: string = gl.getProgramInfoLog(this._object);\n            log(LogLevel.Dev, `linking of program '${this._identifier}' failed: '${infoLog}'`);\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Detaches all shaders from the program. For now, expected to be called after successful linking/program creation.\n     * @param shaders - Shaders that are to be deleted.\n     */\n    protected detach(shaders: Array<Shader>): void {\n        assert(this._object !== undefined, `expected WebGLProgram object`);\n        const gl = this._context.gl;\n\n        for (const shader of shaders) {\n            assert(shader.initialized, `expected shader '${shader.identifier}' to be initialized`);\n            gl.detachShader(this._object, shader.object);\n            shader.unref();\n        }\n    }\n\n    /**\n     * Creates a WebGLProgram object and attaches, and references all shaders to it. The program is then linked. All\n     * shaders have to be initialized in order to be attached and at least on vertex and one fragment shader has to be\n     * present.\n     * @param shaders - Vertex and fragment shaders that are to be attached to the program.\n     * @returns - Either a new program or undefined if linking failed or one of the shaders is invalid/not compiled.\n     */\n    protected create(shaders: Array<Shader>): WebGLProgram | undefined {\n        const gl = this._context.gl;\n\n        let numVertShaders = 0;\n        let numFragShaders = 0;\n\n        for (const shader of shaders) {\n            switch (shader.type) {\n                case gl.VERTEX_SHADER:\n                    ++numVertShaders;\n                    break;\n                case gl.FRAGMENT_SHADER:\n                    ++numFragShaders;\n                    break;\n                default:\n                    assert(false, `Unknown shader type detected.`);\n                    break;\n            }\n        }\n        logIf(numVertShaders < 1, LogLevel.Dev, `at least one vertex shader is expected`);\n        logIf(numFragShaders < 1, LogLevel.Dev, `at least one fragment shader is expected`);\n        if (numVertShaders < 1 || numFragShaders < 1) {\n            return undefined;\n        }\n\n        this._object = gl.createProgram();\n        assert(this._object instanceof WebGLProgram, `expected WebGLProgram object to be created`);\n\n        if (!this.attach(shaders) || !this.link()) {\n            this.delete();\n            return undefined;\n        }\n        this.detach(shaders);\n\n        this._valid = gl.isProgram(this._object);\n        return this._object;\n    }\n\n    /**\n     * Delete the program object on the GPU. This should have the reverse effect of `create`.\n     */\n    protected delete(): void {\n        assert(this._object !== undefined, `expected WebGLProgram object`);\n        this._context.gl.deleteProgram(this._object);\n        this._object = undefined;\n        this._valid = false;\n    }\n\n\n    /**\n     * Activates this program for use.\n     */\n    @Initializable.assert_initialized()\n    bind(): void {\n        this._context.gl.useProgram(this._object);\n    }\n\n    /**\n     * Deactivates this/any program for use.\n     */\n    @Initializable.assert_initialized()\n    unbind(): void {\n        this._context.gl.useProgram(Program.DEFAULT_PROGRAM);\n    }\n\n\n    /**\n     * Requests the location of a uniform of the program.\n     * @param uniform - Uniform identifier to request location of.\n     */\n    @Initializable.assert_initialized()\n    uniform(uniform: string): WebGLUniformLocation {\n        return this._context.gl.getUniformLocation(this._object, uniform);\n    }\n\n    /**\n     * Requests the location of an attribute of the program.\n     * @param attribute - Attribute identifier to request location of.\n     * @param location - Attribute location (if WebGL2 location is used)\n     * @returns - Location of the attribute (or location parameter if provided).\n     */\n    @Initializable.assert_initialized()\n    attribute(attribute: string, location?: GLuint): GLint {\n        if (this._context.isWebGL2 && location !== undefined) {\n            this._context.gl.bindAttribLocation(this._object, location, attribute);\n            return location as GLint;\n        } else {\n            return this._context.gl.getAttribLocation(this._object, attribute);\n        }\n    }\n\n}\n","\nimport { assert } from './auxiliaries';\nimport { byteSizeOfFormat } from './formatbytesizes';\nimport { GLsizei2 } from './tuples';\n\nimport { Bindable } from './bindable';\nimport { TexImage2DData } from './gl2facade';\nimport { Initializable } from './initializable';\nimport { AbstractObject } from './object';\n\n\n/**\n * Wrapper for an WebGL 2D texture providing size accessors and requiring for bind, unbind, resize, validity, and\n * initialization implementations. The texture object is created on initialization and deleted on uninitialization.\n * After being initialized, the texture can be resized, reformated, and data can set directly or via load:\n * ```\n * const texture = new Texture2(context, 'Texture');\n * texture.initialize(1, 1, gl.RGB8, gl.RGB, gl.UNSIGNED_BYTE);\n * texture.load('/img/webgl-operate-logo.png', true)\n * ```\n */\nexport class Texture2 extends AbstractObject<WebGLTexture> implements Bindable {\n\n    /**\n     * Default texture, e.g., used for unbind.\n     */\n    static readonly DEFAULT_TEXTURE = undefined;\n\n    /** @see {@link width} */\n    protected _width: GLsizei = 0;\n\n    /** @see {@link height} */\n    protected _height: GLsizei = 0;\n\n    /** @see {@link internalFormat} */\n    protected _internalFormat: GLenum = 0;\n\n    /** @see {@link format} */\n    protected _format: GLenum = 0;\n\n    /** @see {@link type} */\n    protected _type: GLenum = 0;\n\n\n    /**\n     * Create a texture object on the GPU.\n     * @param width - Initial width of the texture in px.\n     * @param height - Initial height of the texture in px.\n     * @param internalFormat - Internal format of the texture object.\n     * @param format - Format of the texture data even though no data is passed.\n     * @param type - Data type of the texel data.\n     */\n    protected create(width: GLsizei, height: GLsizei, internalFormat: GLenum,\n        format: GLenum, type: GLenum): WebGLTexture | undefined {\n\n        assert(width > 0 && height > 0, `texture requires valid width and height of greater than zero`);\n        const gl = this._context.gl;\n        const gl2facade = this._context.gl2facade;\n\n        this._object = gl.createTexture();\n\n        this._width = width;\n        this._height = height;\n        this._internalFormat = internalFormat;\n        this._format = format;\n        this._type = type;\n\n        gl.bindTexture(gl.TEXTURE_2D, this._object);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        gl2facade.texImage2D(gl.TEXTURE_2D, 0, this._internalFormat,\n            this._width, this._height, 0, this._format, this._type);\n\n        gl.bindTexture(gl.TEXTURE_2D, Texture2.DEFAULT_TEXTURE);\n        /* note that gl.isTexture requires the texture to be bound */\n        this._valid = gl.isTexture(this._object);\n        this.context.allocationRegister.reallocate(this._identifier, 0);\n\n        return this._object;\n    }\n\n    /**\n     * Delete the texture object on the GPU. This should have the reverse effect of `create`.\n     */\n    protected delete(): void {\n        assert(this._object instanceof WebGLTexture, `expected WebGLTexture object`);\n        this._context.gl.deleteTexture(this._object);\n\n        this._object = undefined;\n        this._valid = false;\n\n        this._internalFormat = 0;\n        this._format = 0;\n        this._type = 0;\n\n        this._width = 0;\n        this._height = 0;\n    }\n\n    /**\n     * Bind the texture object to a texture unit.\n     */\n    @Initializable.assert_initialized()\n    bind(unit?: GLenum): void {\n        const gl = this.context.gl;\n        if (unit) {\n            gl.activeTexture(unit);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this._object);\n    }\n\n    /**\n     * Unbind the texture object from a texture unit.\n     */\n    @Initializable.assert_initialized()\n    unbind(unit?: GLenum): void {\n        const gl = this.context.gl;\n        if (unit) {\n            gl.activeTexture(unit);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, Texture2.DEFAULT_TEXTURE);\n    }\n\n    /**\n     * Asynchronous load of an image via URI or data URI.\n     * @param uri - URI linking the image that should be loaded. Data URI is also supported.\n     * @param crossOrigin - Enable cross origin data loading.\n     * @returns - Promise for handling image load status.\n     */\n    @Initializable.assert_initialized()\n    load(uri: string, crossOrigin: boolean = false): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const image = new Image();\n            image.onerror = () => reject();\n\n            image.onload = () => {\n                this.resize(image.width, image.height);\n                this.data(image);\n                resolve();\n            };\n\n            if (crossOrigin) {\n                image.crossOrigin = 'anonymous';\n            }\n            image.src = uri;\n        });\n    }\n\n    /**\n     * Pass image data to the texture object.\n     * @param data - Texel data that will be copied into the objects data store.\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    data(data: TexImage2DData, bind: boolean = true, unbind: boolean = true): void {\n        const gl = this.context.gl;\n        const gl2facade = this._context.gl2facade;\n\n        if (bind) {\n            this.bind();\n        }\n\n        gl2facade.texImage2D(gl.TEXTURE_2D, 0, this._internalFormat,\n            this._width, this._height, 0, this._format, this._type, data);\n\n        if (unbind) {\n            this.unbind();\n        }\n\n        let bytes: GLsizei = 0;\n        // update allocated bytes\n        if (data !== undefined) {\n\n            bytes = this._width * this._height * byteSizeOfFormat(this.context, this._internalFormat as GLenum);\n            // Fix in case of implicit float and half-float texture generation (e.g., in webgl with half_float support).\n            if (this._type === this.context.gl2facade.HALF_FLOAT && this._internalFormat !== this.context.gl.RGBA16F) {\n                bytes *= 2;\n            } else if (this._type === this.context.gl.FLOAT && this._internalFormat !== this.context.gl.RGBA16F) {\n                bytes *= 4;\n            }\n        }\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\n    }\n\n    /**\n     * Sets the texture object's magnification and minification filter.\n     * @param mag - Value for the TEXTURE_MAG_FILTER parameter.\n     * @param min - Value for the TEXTURE_MIN_FILTER parameter.\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    filter(mag: GLenum, min: GLenum, bind: boolean = true, unbind: boolean = true): void {\n        const gl = this.context.gl;\n\n        if (bind) {\n            this.bind();\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, mag);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, min);\n        if (unbind) {\n            this.unbind();\n        }\n    }\n\n    /**\n     * Sets the texture object's wrapping function for s and t coordinates.\n     * @param wrap_s - Value for the TEXTURE_WRAP_S parameter.\n     * @param wrap_t - Value for the TEXTURE_WRAP_T parameter.\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    /* tslint:disable-next-line:variable-name */\n    wrap(wrap_s: GLenum, wrap_t: GLenum, bind: boolean = true, unbind: boolean = true): void {\n        const gl = this.context.gl;\n\n        if (bind) {\n            this.bind();\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap_s);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap_t);\n        if (unbind) {\n            this.unbind();\n        }\n    }\n\n    /**\n     * This can be used to reformat the texture image without creating a new texture object. Please note that this\n     * resets the texture's image data to undefined. @see {@link data} for setting new image data.\n     * @param internalFormat - Internal format of the texture object.\n     * @param format - Format of the texture data even though no data is passed.\n     * @param type - Data type of the texel data.\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    reformat(internalFormat: GLenum, format?: GLenum, type?: GLenum,\n        bind: boolean = true, unbind: boolean = true): void {\n\n        if (internalFormat === this._internalFormat\n            && (format === undefined || format === this._format)\n            && (type === undefined || type === this._type)) {\n            return;\n        }\n        assert(internalFormat !== undefined, `valid internal format expected`);\n        this._internalFormat = internalFormat;\n\n        if (format) {\n            this._format = format;\n        }\n        if (type) {\n            this._type = type;\n        }\n\n        this.data(undefined, bind, unbind);\n    }\n\n    /**\n     * This should be used to implement efficient resize the texture.\n     * @param width - Targeted/new width of the texture in px.\n     * @param height - Targeted/new height of the texture in px.\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    resize(width: GLsizei, height: GLsizei, bind: boolean = true, unbind: boolean = true): void {\n        if (width === this._width && height === this._height) {\n            return;\n        }\n        this._width = width;\n        this._height = height;\n\n        this.data(undefined, bind, unbind);\n    }\n\n    /**\n     * Returns the number of bytes this object approximately allocates on the GPU. The size will be zero when no\n     * image data was passed to the texture object.\n     */\n    get bytes(): GLsizei {\n        this.assertInitialized();\n        return this.context.allocationRegister.allocated(this._identifier);\n    }\n\n    /**\n     * Cached internal format of the texture for efficient resize. This can only be changed by re-initialization.\n     */\n    get internalFormat(): GLenum {\n        this.assertInitialized();\n        return this._internalFormat as GLenum;\n    }\n\n    /**\n     * Cached format of the data provided to the texture object for efficient resize. This is set on initialization and\n     * might change on data transfers.\n     */\n    get format(): GLenum {\n        this.assertInitialized();\n        return this._format as GLenum;\n    }\n\n    /**\n     * Cached type of the data provided to the texture used for efficient resize. This is set on initialization and\n     * might change on data transfers.\n     */\n    get type(): GLenum {\n        this.assertInitialized();\n        return this._type as GLenum;\n    }\n\n    /**\n     * The width of the texture object.\n     */\n    get width(): GLsizei {\n        this.assertInitialized();\n        return this._width;\n    }\n\n    /**\n     * The height of the texture object.\n     */\n    get height(): GLsizei {\n        this.assertInitialized();\n        return this._height;\n    }\n\n    /**\n     * Convenience getter for the 2-tuple containing width and height.\n     * @see {@link width}\n     * @see {@link heigth}\n     */\n    get size(): GLsizei2 {\n        return [this.width, this.height];\n    }\n\n}\n","\nimport { assert, bitInBitfield, logIf, LogLevel } from './auxiliaries';\nimport { GLclampf4, GLsizei2 } from './tuples';\n\nimport { Bindable } from './bindable';\nimport { Context } from './context';\nimport { Initializable } from './initializable';\nimport { AbstractObject } from './object';\nimport { Renderbuffer } from './renderbuffer';\nimport { Texture2 } from './texture2';\n\n\n/**\n * WebGL Framebuffer base implementation providing size accessors and requiring for bind, unbind, resize, validity,\n * and initialization implementations.\n * ```\n * @todo add usage example\n * ```\n */\nexport class Framebuffer extends AbstractObject<WebGLFramebuffer> implements Bindable {\n\n    /**\n     * Default framebuffer, e.g., used for unbind.\n     */\n    static readonly DEFAULT_FRAMEBUFFER = undefined;\n\n\n    /**\n     * Access to all attached renderbuffer objects.\n     */\n    protected _buffersByAttachment = new Map<GLenum, Renderbuffer>();\n\n    /**\n     * Access to all attached texture objects.\n     */\n    protected _texturesByAttachment = new Map<GLenum, Texture2>();\n\n    /**\n     * RGBA color, depth value, or stencil value used for clearing the\n     * associated buffer.\n     */\n    protected _clearDepth: GLfloat;\n    protected _clearStencil: GLint;\n    protected _clearColors: Array<GLclampf4>;\n    /**\n     * Queue of all draw buffers that are to be cleared on `clear`.\n     */\n    protected _colorClearQueue = new Array<GLint>();\n\n    /** @see {@link drawBuffers} */\n    protected _drawBuffers = new Array<GLenum>();\n    protected _drawBuffersChanged = false;\n\n    /**\n     * Depending on the webgl version and provided bitmask, clears attachments of the framebuffer. Note that this\n     * function is set/unset to gl1Clear or gl2Clear on initialization/uninitialization.\n     * @param mask - Bitmask specifying which bits are to be cleared (and thereby which attachments).\n     * @param bind - Allows to skip binding the framebuffer (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the framebuffer (e.g., when binding is handled outside).\n     * @param colorClearQueue - allows to specify a specific queue of color attachments to be cleared. The webgl1\n     * implementation ignores this parameter. If no parameter is given, the webgl2 implementation clears all color\n     * attachments.\n     */\n    clear: ((mask: GLbitfield, bind?: boolean, unbind?: boolean, colorClearQueue?: Array<GLint>) => void);\n\n    /**\n     * Returns a string describing the given status of a framebuffer object.\n     * @param context - Context for valid GLenums.\n     * @param status - A framebuffer's status.\n     */\n    protected static statusString(context: Context, status: GLenum): string {\n        const gl = context.gl;\n\n        switch (status) {\n            case gl.FRAMEBUFFER_COMPLETE:\n                return 'the framebuffer is ready to display (COMPLETE)';\n\n            case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n                return 'the attachment types are mismatched or not all framebuffer attachment points are ' +\n                    'framebuffer attachment complete (INCOMPLETE_ATTACHMENT)';\n\n            case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n                return 'there is no attachment (INCOMPLETE_MISSING_ATTACHMENT)';\n\n            case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n                return 'height and width of the attachment are not the same (INCOMPLETE_DIMENSIONS)';\n\n            case gl.FRAMEBUFFER_UNSUPPORTED:\n                return 'the format of the attachment is not supported or if depth and stencil attachments are not ' +\n                    'the same renderbuffer (UNSUPPORTED)';\n\n            case gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:\n                return 'the values of gl.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are ' +\n                    'non-zero if the attached images are a mix of renderbuffers and textures (INCOMPLETE_MULTISAMPLE)';\n\n            default:\n                assert(false, `expected known framebuffer status, given ${status}`);\n                return '';\n        }\n    }\n\n    /**\n     * Create a framebuffer object on the GPU and attaches all given renderable objects (either renderbuffer or\n     * texture) to the framebuffer object.\n     * @param attachments - tuples that associate an attachment to its actual render object, either a renderbuffer or\n     * texture, e.g., `[ gl.COLOR_ATTACHMENT0, someTexture ]`.\n     */\n    protected create(attachments: Array<[GLenum, Renderbuffer | Texture2]>): WebGLFramebuffer | undefined {\n        const gl = this._context.gl;\n        const gl2facade = this.context.gl2facade;\n\n        this._object = gl.createFramebuffer();\n\n        // Initialize clearing.\n\n        this._clearColors = new Array<GLclampf4>(gl2facade.COLOR_ATTACHMENT_MAX - gl2facade.COLOR_ATTACHMENT0);\n        this._clearDepth = 1.0;\n        this._clearStencil = 0;\n\n        this.clear = this.context.isWebGL1 ? this.es2Clear : this.es3Clear;\n\n        // Classify color attachments in textures and renderbuffer.\n\n        for (const tuple of attachments) {\n            const attachment = tuple[0];\n            const bufferOrTexture = tuple[1];\n\n            if (bufferOrTexture instanceof Renderbuffer) {\n                this._buffersByAttachment.set(attachment, bufferOrTexture as Renderbuffer);\n            } else if (bufferOrTexture instanceof Texture2) {\n                this._texturesByAttachment.set(attachment, bufferOrTexture as Texture2);\n            }\n\n            if (attachment < gl2facade.COLOR_ATTACHMENT_MIN || attachment > gl2facade.COLOR_ATTACHMENT_MAX) {\n                continue;\n            }\n\n            // Queue color attachments for color clearing.\n            this._drawBuffers.push(attachment);\n\n            // Derive the draw buffer index as GLint is required for clearBuffer\n            const index = attachment - gl.COLOR_ATTACHMENT0;\n            this._colorClearQueue.push(index as GLint);\n            // setup default clear color (required in webgl2 or drawBuffers extension)\n            this._clearColors[index] = [0.0, 0.0, 0.0, 0.0];\n        }\n        this._drawBuffersChanged = true;\n\n\n        // Setup attachments.\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._object);\n\n        this._buffersByAttachment.forEach((buffer: Renderbuffer, attachment: GLenum) => {\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, buffer.object);\n\n        });\n        this._texturesByAttachment.forEach((texture: Texture2, attachment: GLenum) => {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.object, 0);\n        });\n\n        if (gl2facade.drawBuffers) {\n            gl2facade.drawBuffers(this._drawBuffers);\n        }\n\n\n        // Check status and cache minimum renderable area.\n        const status: GLenum = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        this._valid = gl.isFramebuffer(this._object) && (status === gl.FRAMEBUFFER_COMPLETE);\n        logIf(!this._valid, LogLevel.Dev, Framebuffer.statusString(this.context, status));\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, Framebuffer.DEFAULT_FRAMEBUFFER);\n\n        return this._object;\n\n    }\n\n    /**\n     * Delete the framebuffer object on the GPU. This should have the reverse effect of `create`.\n     */\n    protected delete(): void {\n        assert(this._object instanceof WebGLFramebuffer, `expected WebGLFramebuffer object`);\n        this.context.gl.deleteFramebuffer(this._object);\n\n        this._object = undefined;\n        this._valid = false;\n    }\n\n\n    /**\n     * WebGL1 implementation for clearing framebuffer attachments.\n     * @param mask - A GLbitfield bitwise OR mask that indicates the buffers to be cleared.\n     * @param bind - Allows to skip binding the framebuffer (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the framebuffer (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    protected es2Clear(mask: GLbitfield, bind: boolean = true, unbind: boolean = true): void {\n        const gl = this.context.gl;\n\n        const clearDepth = bitInBitfield(mask, gl.DEPTH_BUFFER_BIT);\n        const clearStencil = bitInBitfield(mask, gl.STENCIL_BUFFER_BIT);\n        const clearColor = bitInBitfield(mask, gl.COLOR_BUFFER_BIT);\n\n        if (!clearColor && !clearDepth && !clearStencil) {\n            return;\n        }\n\n        if (bind) {\n            this.bind();\n        }\n\n        if (clearColor && this._clearColors[0] !== undefined) {\n            const color = this._clearColors[0];\n            gl.clearColor(color[0], color[1], color[2], color[3]);\n        }\n        if (clearDepth && this._clearDepth !== undefined) {\n            gl.clearDepth(this._clearDepth);\n        }\n        if (clearStencil && this._clearStencil !== undefined) {\n            gl.clearStencil(this._clearStencil);\n        }\n\n        gl.clear(mask);\n\n        if (unbind) {\n            this.unbind();\n        }\n    }\n\n    /**\n     * WebGL2 implementation for clearing framebuffer attachments.\n     * @param mask - A GLbitfield bitwise OR mask that indicates the buffers to be cleared.\n     * @param bind - Allows to skip binding the framebuffer (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the framebuffer (e.g., when binding is handled outside).\n     * @param colorClearQueue - Allows to specify a specific queue of color attachments to be cleared. If no\n     * parameter is given, the webgl2 implementation clears all color attachments.\n     */\n    @Initializable.assert_initialized()\n    protected es3Clear(mask: GLbitfield, bind: boolean = true, unbind: boolean = true,\n        colorClearQueue?: Array<GLint>): void {\n\n        const gl = this.context.gl;\n\n        const clearDepth = bitInBitfield(mask, gl.DEPTH_BUFFER_BIT);\n        const clearStencil = bitInBitfield(mask, gl.STENCIL_BUFFER_BIT);\n        const clearColor = bitInBitfield(mask, gl.COLOR_BUFFER_BIT);\n\n        if (!clearColor && !clearDepth && !clearStencil) {\n            return;\n        }\n\n        if (bind) {\n            this.bind();\n        }\n\n        if (clearColor) {\n            // Multiple color attachments either by WebGL2 or WEBGL_draw_buffers can be expected.\n            for (const drawBuffer of colorClearQueue ? colorClearQueue : this._colorClearQueue) {\n                gl.clearBufferfv(gl.COLOR, drawBuffer, this._clearColors[drawBuffer]);\n            }\n        }\n\n        if (clearDepth && clearStencil) {\n            /**\n             * Unfortunately, the following code doesn't work, on Intel HD, -> fallback to WebGL 1 interface for\n             * clearing depth and stencil.\n             *\n             * gl.clearBufferfi(gl.DEPTH_STENCIL, 0, this._clearDepth, this._clearStencil);\n             */\n            gl.clearStencil(this._clearStencil);\n            gl.clearDepth(this._clearDepth);\n            gl.clear(gl.STENCIL_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        } else if (clearDepth) {\n            gl.clearBufferfv(gl.DEPTH, 0, [this._clearDepth]);\n\n        } else if (clearStencil) {\n            /**\n             * Unfortunately, the following code doesn't work, at least in Chrome, -> fallback to WebGL 1 interface\n             * for clearing depth and stencil.\n             *\n             * gl.clearBufferiv(gl.STENCIL, 0, [this._clearStencil]);\n             */\n            gl.clearStencil(this._clearStencil);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n        }\n\n        if (unbind) {\n            this.unbind();\n        }\n    }\n\n    /**\n     *\n     * @param attachment -\n     */\n    protected hasAttachment(attachment: GLenum): boolean {\n        return this._texturesByAttachment.has(attachment) || this._buffersByAttachment.has(attachment);\n    }\n\n\n    /**\n     * Binds the framebuffer object as framebuffer to the provided target.\n     * @param target - Specifying the binding point (target).\n     */\n    @Initializable.assert_initialized()\n    bind(target: GLenum = this.context.gl.FRAMEBUFFER): void {\n        this.context.gl.bindFramebuffer(target, this._object);\n\n        if (this._drawBuffersChanged && this.context.gl2facade.drawBuffers) {\n            this.context.gl2facade.drawBuffers(this._drawBuffers);\n            this._drawBuffersChanged = false;\n        }\n    }\n\n    /**\n     * Binds the default back buffer as framebuffer to the provided target.\n     * @param target - Specifying the binding point (target).\n     */\n    @Initializable.assert_initialized()\n    unbind(target: GLenum = this.context.gl.FRAMEBUFFER): void {\n        this.context.gl.bindFramebuffer(target, Framebuffer.DEFAULT_FRAMEBUFFER);\n    }\n\n\n    /**\n     * Sets the clear color used for clearing a draw buffer. In order to have transparency working, the canvas needs\n     * to have the alpha  attribute enabled. This stage also supports premultiplied alpha, which is applied\n     * automatically when the context's `premultipliedAlpha` attribute is set.\n     * @param color - RGBA clear color.\n     * @param drawBuffer - The draw buffer index. If no index is provided, the color will be applied to all buffers.\n     */\n    @Initializable.assert_initialized()\n    clearColor(color: GLclampf4, drawBuffer?: GLint): void {\n        assert(drawBuffer === undefined || drawBuffer === 0 || this.context.isWebGL2 ||\n            this.context.supportsDrawBuffers, `WebGL2 context expected for clearing multiple color attachments.`);\n\n        const alphaIssue: boolean = color[3] < 1.0 && !this.context.alpha;\n        logIf(alphaIssue, LogLevel.Dev, `context has alpha disabled, clear color alpha is ignored`);\n\n        const color2: GLclampf4 = [color[0], color[1], color[2], alphaIssue ? 1.0 : color[3]];\n\n        if (this.context.premultipliedAlpha && !alphaIssue) {\n            // premultiply alpha\n            color2[0] *= color2[3];\n            color2[1] *= color2[3];\n            color2[2] *= color2[3];\n        }\n\n        if (drawBuffer) {\n            this._clearColors[drawBuffer] = color2;\n        } else {\n            for (let i = 0; i < this._clearColors.length; ++i) {\n                this._clearColors[i] = color2;\n            }\n        }\n    }\n\n    @Initializable.assert_initialized()\n    clearDepth(depth: GLfloat): void {\n        this._clearDepth = depth;\n    }\n\n    @Initializable.assert_initialized()\n    clearStencil(stencil: GLint): void {\n        this._clearStencil = stencil;\n    }\n\n\n    /**\n     * Access to attached textures, identified by a valid framebuffer attachment.\n     * @param attachment - The attachment to request the texture object of.\n     * @returns - A texture object if one exists for the given attachment, otherwise undefined.\n     */\n    @Initializable.assert_initialized()\n    texture(attachment: GLenum): Texture2 | undefined {\n        return this._texturesByAttachment.get(attachment);\n    }\n\n    /**\n     * Forwards a resize to all attachments, renderbuffers and textures.\n     * @param width - Targeted/new width for all attachments in px.\n     * @param height - Targeted/new height for all attachments in px.\n     * @param bind - Allows to skip binding the specific attachment (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the specific attachment (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    resize(width: GLsizei, height: GLsizei, bind: boolean = true, unbind: boolean = true): void {\n        this._buffersByAttachment.forEach((buffer: Renderbuffer) => {\n            buffer.resize(width, height, bind, unbind);\n        });\n        this._texturesByAttachment.forEach((texture: Texture2) => {\n            texture.resize(width, height, bind, unbind);\n        });\n    }\n\n    /**\n     * Readonly access to the framebuffer width in pixel. If the width of the attachments are not all identical,\n     * the minimal width as the renderable width of this framebuffer is returned.\n     * @returns - The minimal width of the renderable width over all attachments.\n     */\n    get width(): GLsizei {\n        this.assertInitialized();\n\n        let width: GLsizei = NaN;\n        this._buffersByAttachment.forEach((buffer: Renderbuffer) => {\n            if (isNaN(width) || buffer.width < width) {\n                width = buffer.width;\n            }\n        });\n        this._texturesByAttachment.forEach((texture: Texture2) => {\n            if (isNaN(width) || texture.width < width) {\n                width = texture.width;\n            }\n        });\n        return width;\n    }\n\n    /**\n     * Readonly access to the framebuffer height in pixel. If the height of the attachments are not all identical,\n     * the minimal height as the renderable height of this framebuffer is returned.\n     * @returns - The minimal height of the renderable height over all attachments.\n     */\n    get height(): GLsizei {\n        this.assertInitialized();\n\n        let height: GLsizei = NaN;\n        this._buffersByAttachment.forEach((buffer: Renderbuffer) => {\n            if (isNaN(height) || buffer.height < height) {\n                height = buffer.height;\n            }\n        });\n        this._texturesByAttachment.forEach((texture: Texture2) => {\n            if (isNaN(height) || texture.height < height) {\n                height = texture.height;\n            }\n        });\n        return height;\n    }\n\n    /**\n     * Convenience getter for the 2-tuple containing the texture's width and height.\n     * @see {@link width}\n     * @see {@link heigth}\n     */\n    get size(): GLsizei2 {\n        return [this.width, this.height];\n    }\n\n\n    /**\n     * Set one or multiple draw buffers.\n     * @param attachments - Array of attachment identifier (e.g., gl.COLOR_ATTACHMENT0).\n     */\n    set drawBuffers(attachments: Array<GLenum>) {\n        this.assertInitialized();\n        const gl2facade = this.context.gl2facade;\n\n        for (const attachment of attachments) {\n            assert(this.hasAttachment(attachment), `valid attachment expected for draw buffer, given ${attachment}`);\n            assert(attachment >= gl2facade.COLOR_ATTACHMENT_MIN && attachment <= gl2facade.COLOR_ATTACHMENT_MAX,\n                `color attachment expected for draw buffer, given ${attachment}`);\n            this._drawBuffersChanged = this._drawBuffersChanged || this._drawBuffers.indexOf(attachment) === -1;\n        }\n        this._drawBuffersChanged = this._drawBuffersChanged || attachments.length !== this._drawBuffers.length;\n\n        if (this._drawBuffersChanged) {\n            this._drawBuffers = attachments;\n        }\n    }\n\n    /**\n     * Used to remember which attachments are available as potential draw buffers.\n     */\n    get drawBuffers(): Array<GLenum> {\n        this.assertInitialized();\n        return this._drawBuffers;\n    }\n\n}\n","\nimport { assert, log, LogLevel } from './auxiliaries';\n\nimport { Context } from './context';\n\n\n/**\n * This wizard provides means for non-trivial, context specific framebuffer setups, texture formats, etc.\n */\nexport class Wizard {\n\n    /**\n     * Queries the internal texture format matching the target format best for the given context. For 'auto' precision\n     * the format of maximum accuracy supported is returned.\n     * @param context - Wrapped gl context for function resolution (passed to all stages).\n     * @param target - Target format, e.g., gl.RGBA, used to find the supported precision/accuracy for.\n     * @param precision - Requested precision of the internal format: 'auto', 'float', 'half', 'byte'.\n     * @returns - 3-tuple containing the (1) internal format, (2) the type (required for some internal formats to work\n     * ...), and (3) the precision enum/string that matches the resulting format best.\n     */\n    static queryInternalTextureFormat(context: Context, target: GLenum,\n        precision: Wizard.Precision | undefined): [GLenum, GLenum, Wizard.Precision] {\n\n        const gl = context.gl;\n        const gl2facade = context.gl2facade;\n\n        /**\n         * In WebGL1 contexts, OES_texture_float always implies WEBGL_color_buffer_float and OES_texture_half_float\n         * implies EXT_color_buffer_half_float.\n         */\n        const floatWriteSupport = (context.isWebGL1 && context.supportsTextureFloat) ||\n            (context.isWebGL2 && context.supportsColorBufferFloat);\n        const halfWriteSupport = (context.isWebGL1 && context.supportsTextureHalfFloat) ||\n            (context.isWebGL2 && context.supportsColorBufferFloat);\n\n        if (precision === undefined) {\n            precision = Wizard.Precision.auto;\n        }\n        let query = precision === undefined ? Wizard.Precision.auto : precision;\n\n        if (!(precision in Wizard.Precision)) {\n            log(LogLevel.Dev, `unknown precision '${query}' changed to '${Wizard.Precision.auto}'`);\n            precision = Wizard.Precision.auto;\n        }\n        if (precision === Wizard.Precision.auto) { /* Derive maximum supported write to texture/buffer format. */\n            query = floatWriteSupport ? Wizard.Precision.float : halfWriteSupport ?\n                Wizard.Precision.half : Wizard.Precision.byte;\n        }\n\n        let type: GLenum;\n        let internalFormatIndex: GLint; /* Utility index to reduce tuple return logic (see switch). */\n\n        /* Query type and, if required), enable extension. */\n        if (query === Wizard.Precision.half && halfWriteSupport) {\n            /* tslint:disable-next-line:no-unused-expression */\n            context.isWebGL2 ? context.colorBufferFloat : context.textureHalfFloat;\n            type = gl2facade.HALF_FLOAT;\n            internalFormatIndex = 1;\n\n        } else if ((query === Wizard.Precision.float || query === Wizard.Precision.half)\n            && floatWriteSupport) {\n            /* If not explicitly requested, fallback for half_float. */\n            /* tslint:disable-next-line:no-unused-expression */\n            context.isWebGL2 ? context.colorBufferFloat : context.textureFloat;\n            type = gl.FLOAT;\n            internalFormatIndex = 0;\n\n        } else {\n            type = gl.UNSIGNED_BYTE;\n            internalFormatIndex = 2;\n        }\n\n        /* In this case, no specialized internal formats are available. */\n        if (context.isWebGL1) {\n            return [target, type, query];\n        }\n\n        switch (target) {\n            case gl.RGBA:\n                return [[gl.RGBA32F, gl.RGBA16F, gl.RGBA8][internalFormatIndex], type, query];\n            case gl.RGB:\n                return [[gl.RGB32F, gl.RGB16F, gl.RGB8][internalFormatIndex], type, query];\n            default:\n                assert(false, `internal format querying is not yet supported for formats other than RGBA, RGB`);\n        }\n        return [gl.NONE, gl.NONE, query];\n    }\n\n}\n\nexport namespace Wizard {\n\n    export enum Precision {\n        float = 'float',\n        half = 'half',\n        byte = 'byte',\n        auto = 'auto',\n    }\n\n}\n","\nimport { vec2, vec3, vec4 } from 'gl-matrix';\nimport { clamp, clamp2, clamp3, clamp4 } from './gl-matrix-extensions';\n\nimport { assert, logIf, LogLevel } from './auxiliaries';\n\n\nnamespace tuples {\n\n    /**\n     * Auxiliary 2-tuple of GLsizei values.\n     */\n    export type GLsizei2 = [GLsizei, GLsizei];\n\n    /**\n     * Auxiliary 3-tuple of GLsizei values.\n     */\n    export type GLsizei3 = [GLsizei, GLsizei, GLsizei];\n\n    /**\n     * Auxiliary 4-tuple of GLsizei values.\n     */\n    export type GLsizei4 = [GLsizei, GLsizei, GLsizei, GLsizei];\n\n\n    /**\n     * Auxiliary 2-tuple of GLfloat values.\n     */\n    export type GLfloat2 = [GLfloat, GLfloat];\n\n    /**\n     * Auxiliary 3-tuple of GLfloat values.\n     */\n    export type GLfloat3 = [GLfloat, GLfloat, GLfloat];\n\n    /**\n     * Auxiliary 4-tuple of GLfloat values.\n     */\n    export type GLfloat4 = [GLfloat, GLfloat, GLfloat, GLfloat];\n\n\n    /**\n     * Auxiliary 3-tuple of GLclampf values.\n     */\n    export type GLclampf2 = [GLclampf, GLclampf];\n\n    /**\n     * Auxiliary 3-tuple of GLclampf values.\n     */\n    export type GLclampf3 = [GLclampf, GLclampf, GLclampf];\n\n    /**\n     * Auxiliary 4-tuple of GLclampf values.\n     */\n    export type GLclampf4 = [GLclampf, GLclampf, GLclampf, GLclampf];\n\n    /**\n     * Auxiliary 5-tuple of GLclampf values.\n     */\n    export type GLclampf5 = [GLclampf, GLclampf, GLclampf, GLclampf, GLclampf];\n\n    /**\n     * Creates a tuple from a array buffer of the same size.\n     * @param buffer - Array of two float32 values.\n     * @returns - 2-tuple of specified type (GLsizei, GLfloat, or GLclampf).\n     */\n    export function tuple2<T extends GLsizei | GLclampf | GLfloat>(buffer: Float32Array): [T, T] {\n        assert(buffer.length === 2, `expected length of buffer to be 2, given ${buffer.length}`);\n        return [buffer[0] as T, buffer[1] as T];\n    }\n\n    /**\n     * Creates a tuple from a array buffer of the same size.\n     * @param buffer - Array of three float32 values.\n     * @returns - 3-tuple of specified type (GLsizei, GLfloat, or GLclampf).\n     */\n    export function tuple3<T extends GLsizei | GLclampf | GLfloat>(buffer: Float32Array): [T, T, T] {\n        assert(buffer.length === 3, `expected length of buffer to be 3, given ${buffer.length}`);\n        return [buffer[0] as T, buffer[1] as T, buffer[2] as T];\n    }\n\n    /**\n     * Creates a tuple from a array buffer of the same size.\n     * @param buffer - Array of four float32 values.\n     * @returns - 4-tuple of specified type (GLsizei, GLfloat, or GLclampf).\n     */\n    export function tuple4<T extends GLsizei | GLclampf | GLfloat>(buffer: Float32Array): [T, T, T, T] {\n        assert(buffer.length === 4, `expected length of buffer to be 4, given ${buffer.length}`);\n        return [buffer[0] as T, buffer[1] as T, buffer[2] as T, buffer[3] as T];\n    }\n\n\n    /**\n     * Clamps a single GLclampf/GLfloat value to the range [0.0, 1.0]. If clamping is necessary, a user-level message\n     * will be logged to console.\n     * @param value - Single GLclampf/GLfloat value to clamp to range [0.0, 1.0].\n     * @param semantic - String describing the value's semantic, used for the user-level log message.\n     * @returns - Clamped value.\n     */\n    export function clampf(value: GLclampf | GLfloat, semantic?: string): GLclampf | GLfloat {\n        const valueV1 = clamp(value, 0.0, 1.0);\n        logIf(semantic !== undefined && value < 0.0 || value > 1.0, LogLevel.User,\n            `${semantic} clamped to [${valueV1}], given [${value}]`);\n        return valueV1;\n    }\n\n    /**\n     * Clamps each GLclampf/GLfloat value of a 2-tuple to the range [0.0, 1.0]. If clamping is necessary, a user-level\n     * message will be logged to console.\n     * @param tuple - 2-tuple of GLclampf/GLfloat values, each to be clamped to range [0.0, 1.0].\n     * @param semantic - String describing the tuple's semantic, used for the user-level log message.\n     * @returns - Clamped tuple.\n     */\n    export function clampf2(tuple: GLclampf2 | GLfloat2, semantic?: string): GLclampf2 | GLfloat2 {\n        const tupleV2: vec2 = vec2.fromValues(tuple[0], tuple[1]);\n        if (tuple[0] < 0.0 || tuple[0] > 1.0 || tuple[1] < 0.0 || tuple[1] > 1.0) {\n            clamp2(tupleV2, tupleV2, vec2.fromValues(0.0, 0.0), vec2.fromValues(1.0, 1.0));\n            logIf(semantic !== undefined, LogLevel.User, `${semantic} clamped to [${tupleV2}], given [${tuple}]`);\n        }\n        return tuple2<typeof tuple[0]>(tupleV2);\n    }\n\n    /**\n     * Clamps each GLclampf/GLfloat value of a 3-tuple to the range [0.0, 1.0]. If clamping is necessary, a user-level\n     * message will be logged to console.\n     * @param tuple - 3-tuple of GLclampf/GLfloat values, each to be clamped to range [0.0, 1.0].\n     * @param semantic - String describing the tuple's semantic, used for the user-level log message.\n     * @returns - Clamped tuple.\n     */\n    export function clampf3(tuple: GLclampf3 | GLfloat3, semantic?: string): GLclampf3 | GLfloat3 {\n        const tupleV3: vec3 = vec3.fromValues(tuple[0], tuple[1], tuple[2]);\n        if (tuple[0] < 0.0 || tuple[0] > 1.0 || tuple[1] < 0.0 || tuple[1] > 1.0 || tuple[2] < 0.0 || tuple[2] > 1.0) {\n            clamp3(tupleV3, tupleV3, vec3.fromValues(0.0, 0.0, 0.0), vec3.fromValues(1.0, 1.0, 1.0));\n            logIf(semantic !== undefined, LogLevel.User, `${semantic} clamped to [${tupleV3}], given [${tuple}]`);\n        }\n        return tuple3<typeof tuple[0]>(tupleV3);\n    }\n\n    /**\n     * Clamps each GLclampf/GLfloat value of a 4-tuple to the range [0.0, 1.0]. If clamping is necessary, a user-level\n     * message will be logged to console.\n     * @param tuple - 4-tuple of GLclampf/GLfloat values, each to be clamped to range [0.0, 1.0].\n     * @param semantic - String describing the tuple's semantic, used for the user-level log message.\n     * @returns - Clamped tuple.\n     */\n    export function clampf4(tuple: GLclampf4 | GLfloat4, semantic?: string): GLclampf4 | GLfloat4 {\n        const tupleV4: vec4 = vec4.fromValues(tuple[0], tuple[1], tuple[2], tuple[3]);\n        if (tuple[0] < 0.0 || tuple[0] > 1.0 || tuple[1] < 0.0 || tuple[1] > 1.0 ||\n            tuple[2] < 0.0 || tuple[2] > 1.0 || tuple[3] < 0.0 || tuple[3] > 1.0) {\n            clamp4(tupleV4, tupleV4, vec4.fromValues(0.0, 0.0, 0.0, 0.0), vec4.fromValues(1.0, 1.0, 1.0, 1.0));\n            logIf(semantic !== undefined, LogLevel.User, `${semantic} clamped to [${tupleV4}], given [${tuple}]`);\n        }\n        return tuple4<typeof tuple[0]>(tupleV4);\n    }\n\n\n    /**\n     * Creates a duplicate of a 2-tuple into another tuple.\n     * @param tuple - Source tuple to create duplicate of.\n     */\n    export function duplicate2<T extends GLclampf | GLfloat | GLsizei>(tuple: [T, T]): [T, T] {\n        return [tuple[0], tuple[1]];\n    }\n\n    /**\n     * Creates a duplicate of a 3-tuple into another tuple.\n     * @param tuple - Source tuple to create duplicate of.\n     */\n    export function duplicate3<T extends GLclampf | GLfloat | GLsizei>(tuple: [T, T, T]): [T, T, T] {\n        return [tuple[0], tuple[1], tuple[2]];\n    }\n\n    /**\n     * Creates a duplicate of a 4-tuple into another tuple.\n     * @param tuple - Source tuple to create duplicate of.\n     */\n    export function duplicate4<T extends GLclampf | GLfloat | GLsizei>(tuple: [T, T, T, T]): [T, T, T, T] {\n        return [tuple[0], tuple[1], tuple[2], tuple[3]];\n    }\n\n\n    /**\n     * Checks whether or not two 2-tuples have identical values.\n     * @param tuple0 - First 2-tuple/operand for comparison.\n     * @param tuple1 - Second 2-tuple/operand for comparison.\n     * @returns - True iff tuples are equal in all two values (in their sequence).\n     */\n    export function equals2<T extends GLclampf | GLfloat | GLsizei>(t0: [T, T], t1: [T, T]): boolean {\n        return t0[0] === t1[0] && t0[1] === t1[1];\n    }\n\n    /**\n     * Checks whether or not two 3-tuples have identical values.\n     * @param tuple0 - First 3-tuple/operand for comparison.\n     * @param tuple1 - Second 3-tuple/operand for comparison.\n     * @returns - True iff tuples are equal in all three values (in their sequence).\n     */\n    export function equals3<T extends GLclampf | GLfloat | GLsizei>(t0: [T, T, T], t1: [T, T, T]): boolean {\n        return t0[0] === t1[0] && t0[1] === t1[1] && t0[2] === t1[2];\n    }\n\n    /**\n     * Checks whether or not two 4-tuples have identical values.\n     * @param tuple0 - First 4-tuple/operand for comparison.\n     * @param tuple1 - Second 4-tuple/operand for comparison.\n     * @returns - True iff tuples are equal in all four values (in their sequence).\n     */\n    export function equals4<T extends GLclampf | GLfloat | GLsizei>(t0: [T, T, T, T], t1: [T, T, T, T]): boolean {\n        return t0[0] === t1[0] && t0[1] === t1[1] && t0[2] === t1[2] && t0[3] === t1[3];\n    }\n}\n\nexport = tuples;\n","module.exports = \"\\nprecision lowp float;\\n\\n\\n#if __VERSION__ == 100\\n#else \\n    #define varying out\\n#endif\\n\\n\\n\\n#if __VERSION__ == 100\\n    attribute vec2 a_vertex;\\n#else \\n    in vec2 a_vertex;\\n#endif\\n\\n\\nvarying vec2 v_uv;\\n\\n\\nvoid main(void)\\n{\\n    v_uv = a_vertex * 0.5 + 0.5;\\n    gl_Position = vec4(a_vertex, 0.0, 1.0);\\n}\\n\"","\nimport { Bindable } from './bindable';\nimport { Buffer } from './buffer';\nimport { Initializable } from './initializable';\n\nimport { Context } from './context';\nimport { VertexArray } from './vertexarray';\n\n\n/**\n * Geometry that extends Initializable and Bindable by a draw method, a getter for buffers, as well as a getter for the\n * vertex array object. This is used as generic interface for one or more buffer objects associated to a single vertex\n * array object intended for drawing (often also referred to as 'drawable').\n */\nexport abstract class Geometry extends Initializable implements Bindable {\n\n    /**\n     * Vertex array used for binding the rectangle's buffer(s).\n     */\n    protected _vertexArray: VertexArray;\n\n    /**\n     * Various buffers required for this geometry (e.g., vertex buffer).\n     */\n    protected _buffers = new Array<Buffer>();\n\n\n    /**\n     * Creates the geometry and a vertex array instance. Please note that inheritors are expected to create the buffer.\n     * @param context - Valid context to create the object for.\n     * @param identifier - Meaningful name for identification of this instances VAO and VBOs.\n     */\n    constructor(context: Context, identifier?: string) {\n        super();\n\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\n        this._vertexArray = new VertexArray(context, identifier + 'VAO');\n    }\n\n\n    /**\n     * Binds all buffer object(s) to their associated attribute binding points (pre-defined index/indices). This\n     * function is passed to the initialization of this geometries vertex array object.\n     * @param indices - Indices passed on geometry initialization by inheritor (sequence as in buffers).\n     */\n    protected abstract bindBuffers(indices: Array<GLuint>): void;\n\n    /**\n     * Unbinds all buffer objects and disables their binding points. This function is passed to the uninitialization\n     * of this geometries vertex array object.\n     * @param indices - Indices passed on geometry initialization by inheritor (sequence as in buffers).\n     */\n    protected abstract unbindBuffers(indices: Array<GLuint>): void;\n\n\n    /**\n     * Initializes all buffer objects and the vertex array. Please note that implicit arguments are used in order to\n     * enable custom initialization signatures for inheritors.\n     * @param targets - Targets to initialize the buffers for.\n     * @param indices - Binding points that are passed to the inheritors (un)bind buffer methods.\n     */\n    @Initializable.initialize()\n    initialize(...args: any[]): boolean {\n        const targets = args[0] as Array<GLenum>;\n        const indices = args[1] as Array<GLuint>;\n\n        let valid = true;\n        for (let i = 0; i < this._buffers.length; ++i) {\n            valid = this._buffers[i].initialize(targets[i]) && valid;\n        }\n\n        this._vertexArray.initialize(() => this.bindBuffers(indices), () => this.unbindBuffers(indices));\n        return this._vertexArray.valid && valid;\n    }\n\n    /**\n     * Uninitialize the vertex array object and the rectangle.\n     */\n    @Initializable.uninitialize()\n    uninitialize(): void {\n        this._vertexArray.uninitialize();\n        this._buffers.forEach((buffer) => buffer.uninitialize());\n        for (const buffer of this._buffers) {\n            buffer.uninitialize();\n        }\n    }\n\n\n    /**\n     * Binds the vertex array object.\n     */\n    @Initializable.assert_initialized()\n    bind(): void {\n        this._vertexArray.bind();\n    }\n\n    /**\n     * Unbinds the vertex array object.\n     */\n    @Initializable.assert_initialized()\n    unbind(): void {\n        this._vertexArray.unbind();\n    }\n\n\n    abstract draw(): void;\n\n\n    /**\n     * Read-only access to the buffer(s) associated to this instances vertex array object.\n     */\n    get buffers(): Array<Buffer> {\n        return this._buffers;\n    }\n\n    /**\n     * Read-only access to the buffers' and vertex array's context.\n     */\n    get context(): Context {\n        return this._vertexArray.context;\n    }\n\n    /**\n     * Read-only access to the vertex array.\n     */\n    get vertexArray(): VertexArray {\n        return this._vertexArray;\n    }\n\n}\n\n","\nimport { assert } from './auxiliaries';\n\nimport { Context } from './context';\n\n\n/**\n * Provides the size in bytes of certain WebGL format enumerator. Please note that some byte sizes might vary based on\n * context attributes or the bound render, thus, DEPTH_COMPONENT and DEPTH_STENCIL are not covered by this function.\n * This function does NOT cover data types that are usually on CPU side, not GPU, e.g., UNSIGNED_BYTE,\n * UNSIGNED_SHORT_5_6_5, HALF_FLOAT, UNSIGNED_SHORT, FLOAT, etc. and will assert when provided with types.\n * @param context - The OpenGL context.\n * @param format - Format identifier of the target internal OpenGL data type.\n * @return - The size in bytes of one type instance on the GPU.\n */\nexport function byteSizeOfFormat(context: Context, format: GLenum): number {\n    const gl = context.gl;\n    const gl2facade = context.gl2facade;\n\n\n    const UNSIGNED_INT_24_8_WEBGL = context.supportsDepthTexture ?\n        context.depthTexture.UNSIGNED_INT_24_8_WEBGL : undefined;\n\n    switch (format) {\n        case undefined: // must be first, in case any other format is not defined\n            break;\n        default:\n            break;\n\n        case gl.UNSIGNED_BYTE:\n        case gl.UNSIGNED_SHORT_5_6_5:\n        case gl.UNSIGNED_SHORT_4_4_4_4:\n        case gl.UNSIGNED_SHORT_5_5_5_1:\n        case gl.UNSIGNED_SHORT:\n        case gl.UNSIGNED_INT:\n        case UNSIGNED_INT_24_8_WEBGL:\n        case gl.FLOAT:\n        case gl2facade.HALF_FLOAT:\n        case gl.BYTE:\n        case gl.UNSIGNED_SHORT:\n        case gl.SHORT:\n        case gl.UNSIGNED_INT:\n        case gl.INT:\n        case gl.HALF_FLOAT:\n        case gl.FLOAT:\n        case gl.UNSIGNED_INT_2_10_10_10_REV:\n        case gl.UNSIGNED_INT_10F_11F_11F_REV:\n        case gl.UNSIGNED_INT_5_9_9_9_REV:\n        case gl.UNSIGNED_INT_24_8:\n        case gl.FLOAT_32_UNSIGNED_INT_24_8_REV:\n            assert(false, `expected format instead of type ${format}`);\n            return 0;\n    }\n\n\n    const SRGB8_ALPHA8_EXT = context.supportsSRGB ? context.sRGB.SRGB8_ALPHA8_EXT : undefined;\n    const SRGB_EXT = context.supportsSRGB ? context.sRGB.SRGB_EXT : undefined;\n    const SRGB_ALPHA_EXT = context.supportsSRGB ? context.sRGB.SRGB_ALPHA_EXT : undefined;\n\n    const RGB32F_EXT = context.supportsColorBufferFloat ? context.colorBufferFloat.RGB32F_EXT : undefined;\n    const RGBA32F_EXT = context.supportsColorBufferFloat ? context.colorBufferFloat.RGBA32F_EXT : undefined;\n\n    switch (format) {\n        case undefined: // must be first, in case any other format is not defined\n        /* falls through */\n        default:\n            assert(false, `size of format ${format} is unknown`);\n            return 0;\n\n        case gl.ALPHA:\n        case gl.LUMINANCE:\n        case gl.R8:\n        case gl.R8I:\n        case gl.R8UI:\n        case gl.STENCIL_INDEX8:\n            return 1;\n\n        case gl.DEPTH_COMPONENT16:\n        case gl.LUMINANCE_ALPHA:\n        case gl.R16F:\n        case gl.R16I:\n        case gl.R16UI:\n        case gl.RG8:\n        case gl.RG8I:\n        case gl.RG8UI:\n        case gl.RGB565:\n        case gl.RGB5_A1:\n        case gl.RGBA4:\n            return 2;\n\n        case gl.DEPTH_COMPONENT24:\n        case gl.RGB:\n        case gl.RGB8:\n        case gl.RGB8UI:\n        case gl.SRGB:\n        case SRGB_EXT:\n        case gl.SRGB8:\n            return 3;\n\n        case gl.DEPTH_STENCIL:\n        case gl.DEPTH24_STENCIL8:\n        case gl.DEPTH_COMPONENT32F:\n        case gl.R11F_G11F_B10F:\n        case gl.R32F:\n        case gl.R32I:\n        case gl.R32UI:\n        case gl.RG16F:\n        case gl.RG16I:\n        case gl.RG16UI:\n        case gl.RGB10_A2:\n        case gl.RGB10_A2UI:\n        case gl.RGB9_E5:\n        case gl.RGBA:\n        case gl.RGBA8:\n        case gl.RGBA8I:\n        case gl.RGBA8UI:\n        case gl.SRGB8_ALPHA8:\n        case SRGB8_ALPHA8_EXT:\n        case gl.SRGB_ALPHA:\n        case SRGB_ALPHA_EXT:\n        case gl.SRGB_ALPHA8:\n        case gl.SRGB_APLHA8: // https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/texStorage2D\n            return 4;\n\n        case gl.DEPTH32F_STENCIL8:\n            return 5;\n\n        case gl.RGB16F:\n            return 6;\n\n        case gl.RG32F:\n        case gl.RG32I:\n        case gl.RG32UI:\n        case gl.RGBA16F:\n        case gl.RGBA16I:\n        case gl.RGBA16UI:\n            return 8;\n\n        case gl.RGB32F:\n        case gl.RGB32F:\n        case RGB32F_EXT:\n            return 12;\n\n        case gl.RGBA32F:\n        case RGBA32F_EXT:\n        case gl.RGBA32I:\n        case gl.RGBA32UI:\n            return 16;\n\n        case gl.DEPTH_COMPONENT:\n        case gl.DEPTH_STENCIL:\n            assert(false, `byte size of DEPTH_COMPONENT or DEPTH_STENCIL formats depends on active render buffer`);\n            return 0;\n    }\n}\n","\nimport { assert } from './auxiliaries';\n\nimport { Bindable } from './bindable';\nimport { Initializable } from './initializable';\nimport { AbstractObject } from './object';\n\n\n/**\n * Wrapper around an OpenGL array or element array buffer. This buffer may be used to be attached to multiple VAOs.\n */\nexport class Buffer extends AbstractObject<WebGLBuffer> implements Bindable {\n\n    /**\n     * Default buffer, e.g., used for unbind.\n     */\n    static readonly DEFAULT_BUFFER = undefined;\n\n\n    /** @see {@link target} */\n    protected _target: GLenum | undefined = Buffer.DEFAULT_BUFFER;\n\n    /**\n     * Create a buffer object on the GPU.\n     */\n    protected create(target: GLenum): WebGLBuffer | undefined {\n        const gl = this._context.gl;\n\n        this._object = gl.createBuffer();\n        /* note that gl.isBuffer requires the buffer to be bound */\n        this._valid = this._object instanceof WebGLBuffer;\n\n        if (this._valid) {\n            assert(target === gl.ARRAY_BUFFER || target === gl.ELEMENT_ARRAY_BUFFER,\n                `either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER expected as buffer target`);\n            this._target = target;\n        }\n        return this._object;\n    }\n\n    /**\n     * Delete the buffer object on the GPU. This should have the reverse effect of `create`.\n     */\n    protected delete(): void {\n        assert(this._object instanceof WebGLBuffer, `expected WebGLBuffer object`);\n        this._context.gl.deleteBuffer(this._object);\n\n        this._object = undefined;\n        this._valid = false;\n\n        this._target = Buffer.DEFAULT_BUFFER;\n    }\n\n    /**\n     * Binds the buffer object as buffer to predefined target.\n     */\n    @Initializable.assert_initialized()\n    bind(): void {\n        assert(this._target === this._context.gl.ARRAY_BUFFER || this._target === this._context.gl.ELEMENT_ARRAY_BUFFER,\n            `expected either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER as buffer target`);\n        this._context.gl.bindBuffer(this._target, this._object);\n    }\n\n    /**\n     * Binds null as current buffer to predefined target;\n     */\n    @Initializable.assert_initialized()\n    unbind(): void {\n        this.context.gl.bindBuffer(this._target, Buffer.DEFAULT_BUFFER);\n    }\n\n    /**\n     * Creates the buffer object's data store and updates the objects status.\n     * @param data - Data that will be copied into the objects data store.\n     * @param usage - Usage pattern of the data store.\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    data(data: ArrayBufferView | ArrayBuffer, usage: GLenum, bind: boolean = true, unbind: boolean = true): void {\n        const gl = this.context.gl;\n\n        if (bind) {\n            this.bind();\n        }\n        gl.bufferData(this._target, data, usage);\n        if (unbind) {\n            this.unbind();\n        }\n\n        this._valid = gl.isBuffer(this._object) && gl.getError() === gl.NO_ERROR;\n        const bytes: GLsizei = this._valid ? data.byteLength : 0;\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\n    }\n\n    /**\n     * Specifies the memory layout of the buffer for a binding point.\n     * @param index - Index of the vertex attribute that is to be setup and enabled.\n     * @param size - Number of components per vertex attribute.\n     * @param type - Data type of each component in the array.\n     * @param normalized - Whether integer data values should be normalized when being casted to a float.\n     * @param stride - Offset in bytes between the beginning of consecutive vertex attributes.\n     * @param offset - Offset in bytes of the first component in the vertex attribute array.\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    attribEnable(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean = false,\n        stride: GLsizei = 0, offset: GLintptr = 0, bind: boolean = true, unbind: boolean = true): void {\n\n        const gl = this.context.gl;\n        if (bind) {\n            this.bind();\n        }\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n        gl.enableVertexAttribArray(index);\n        if (unbind) {\n            this.unbind();\n        }\n    }\n\n    /**\n     * Disables a buffer binding point.\n     * @param index - Index of the vertex attribute that is to be disabled.\n     * @param bind - Allows to skip binding the object (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the object (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    attribDisable(index: GLuint, bind: boolean = true, unbind: boolean = true): void {\n        const gl = this.context.gl;\n        if (bind) {\n            this.bind();\n        }\n        gl.disableVertexAttribArray(index);\n        if (unbind) {\n            this.unbind();\n        }\n    }\n\n    /**\n     * Returns the number of bytes this object approximately allocates on the GPU.\n     */\n    get bytes() {\n        this.assertInitialized();\n        return this.context.allocationRegister.allocated(this._identifier);\n    }\n\n    /**\n     * Target to which the buffer object is bound (either GL_ARRAY_BUFFER or GL_ELEMENT_ARRAY_BUFFER).\n     * Readonly access to the target (as specified on initialization) the buffer will be bound to.\n     */\n    get target(): GLenum | undefined {\n        this.assertInitialized();\n        return this._target;\n    }\n\n}\n","\nimport { assert } from './auxiliaries';\n\n\n/**\n * Utility class to replicate the structure of all alterable properties of a class to. This was initially designed\n * to be used in combination with an `alterable` decorator (but instance-based property decoration does not work\n * yet). For now though, this is used for explicit alterable structure replication and management.\n * ```\n * const alterable = {\n *     any: false,\n *     data: { any: false, alpha: false, beta: false },\n *     modifier: false };\n *\n * const altered = Object.assign(new ChangeLookup(), alterable);\n * altered.alter('data.beta');\n * if(altered.data.any) { ... }\n * ```\n */\nexport class ChangeLookup {\n\n    /**\n     * Also allow for string-based index access in TypeScript.\n     */\n    [index: string]: boolean | any;\n\n\n    /**\n     * One step of the recursive traversal of a given properties path in order to invalidate the alteration states.\n     * Please note, that this is design is not intended for very large structures since no caching is applied.\n     * @param path - Relative path w.r.t. to the given property.\n     * @param property - Property to continue traversal of the given relative path on.\n     */\n    protected static alter(path: string, property: any): void {\n\n        assert(property.hasOwnProperty('any'), `expected alterable object to provide 'any' key`);\n        property.any = true;\n\n        const names = path.split('.');\n        const name = names.shift()!;\n\n        assert(name === '' || property.hasOwnProperty(name),\n            `expected object to have key '${name}' in order to capture alterations`);\n\n        if (name !== '' && typeof property[name] !== 'object') {\n            property[name] = true;\n            return;\n        }\n\n        if (name !== '' && names.length > 0) {\n            ChangeLookup.alter(names.join('.'), property[name]);\n            return;\n        }\n\n        const parent = name !== '' ? property[name] : property;\n        for (const child of Object.getOwnPropertyNames(parent)) {\n            if (child === 'any') {\n                continue;\n            }\n            ChangeLookup.alter(child, parent);\n        }\n    }\n\n    /**\n     * Resets all nested alteration states of a given parent property recursively. Children of object type are\n     * recursively reset. Every other child is directly set to false (including any).\n     * @param property - Property to reset alteration states of.\n     */\n    protected static reset(property: any): void {\n        for (const name of Object.getOwnPropertyNames(property)) {\n            if (typeof property[name] === 'object') {\n                ChangeLookup.reset(property[name]);\n                continue;\n            }\n            property[name] = false;\n        }\n    }\n\n\n    /**\n     * Alters the given key as well as the `any` element of all parent objects. For example, the key 'foo.bar' would\n     * cause `altered.foo.bar` and `altered.foo.any` as well as `altered.any` to be true. Note that the `altered`\n     * object should only be modified using this method to avoid erroneous states.\n     * @param path - Full object path to the altered key (keys joined using '.', e.g., 'foo.bar'). If the path is\n     * referring to an object, the alteration is propagated top-down to all children.\n     */\n    alter(path: string): void {\n        return ChangeLookup.alter(path, this);\n    }\n\n    /**\n     * Reset all alteration states to false.\n     */\n    reset(): void {\n        return ChangeLookup.reset(this);\n    }\n\n}\n","\nimport { assert } from './auxiliaries';\n\n\n/**\n * Utility class providing simplified access to the clients pointer lock API.\n */\nexport class PointerLock {\n\n    /**\n     * Cached exit call of the clients specific pointer lock API.\n     */\n    protected static _exit: () => void;\n\n    /**\n     * Cached request call of the clients specific pointer API.\n     */\n    protected static _request: (element: HTMLElement) => void;\n\n    /**\n     * Cached element call returning the fullscreen element specific to the clients fullscreen API.\n     */\n    protected static _element: () => HTMLElement;\n\n\n    /**\n     * Query and cache the client specific pointer lock API.\n     */\n    protected static queryAndCacheAPI(): void {\n        if (PointerLock._exit !== undefined) {\n            return;\n        }\n\n        /**\n         * Shadow global document declaration with an untyped one. This is done in order to use vendor specific\n         * properties without a compile error.\n         */\n        const document = window.document as any;\n\n        // Query the API to use.\n        const exits = [\n            document.exitPointerLock,\n            document.mozExitPointerLock,\n            document.webkitExitPointerLock,\n            undefined];\n\n        let api = 0;\n        for (; api < exits.length; ++api) {\n            if (exits[api] === undefined) {\n                continue;\n            }\n            break;\n        }\n\n        switch (api) {\n            case 0: // native\n                PointerLock._exit = () => document.exitPointerLock();\n                PointerLock._request = (element: HTMLElement) => element.requestPointerLock();\n                PointerLock._element = () => document.pointerLockElement;\n                break;\n\n            case 1: // mozilla\n                PointerLock._exit = () => document.mozCancelPointerLock();\n                PointerLock._request = (element: HTMLElement) => (element as any).mozRequestPointerLock();\n                PointerLock._element = () => document.mozPointerLockElement;\n                break;\n\n            case 2: // webkit\n                PointerLock._exit = () => document.webkitExitPointerLock();\n                PointerLock._request = (element: HTMLElement) => (element as any).webkitRequestPointerLock();\n                PointerLock._element = () => document.webkitPointerLockElement;\n                break;\n\n            default:\n                assert(false, `none of the following pointer lock apis was found: native, moz, or webkit`);\n        }\n    }\n\n\n    /**\n     * Returns whether or not a pointer lock element exists, indicating if pointer lock is active or not.\n     */\n    static active(element?: HTMLElement): boolean {\n        if (this._element === undefined) {\n            return false;\n        }\n        return (element !== undefined && PointerLock._element() === element) || (element === undefined &&\n            /* tslint:disable-next-line:no-null-keyword */\n            PointerLock._element() !== undefined && PointerLock._element() !== null);\n    }\n\n    /**\n     * Requests pointer lock for a given element. If another element is already in pointer lock, it is unlocked\n     * first. The function considers various platform specific pointer lock interfaces, i.e., native, moz, and webkit.\n     * @param element - Element to toggle pointer lock state of.\n     */\n    static request(element: HTMLElement, callback?: () => void): void {\n        if (element === undefined) {\n            return;\n        }\n        PointerLock.queryAndCacheAPI();\n\n        if (PointerLock.active() && PointerLock._element() !== element) {\n            PointerLock._exit();\n        }\n\n        if (!PointerLock.active()) {\n            PointerLock._request(element);\n        }\n    }\n\n    /**\n     * Exit pointer lock. The function considers various platform specific pointer lock interfaces, i.e., native, moz,\n     * and webkit.\n     */\n    static exit(): void {\n        if (PointerLock._exit) {\n            PointerLock._exit();\n        }\n    }\n\n}\n","\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { assert } from './auxiliaries';\n\nimport { PointerLock } from './pointerlock';\n\n\nexport class MouseEventProvider {\n\n    /**\n     * HTML canvas element within the HTML5 document to register event listeners to.\n     */\n    protected _element: HTMLCanvasElement;\n\n    /**\n     * Time frame for events to be buffered (windowTime in rxjs per ReplaySubject).\n     */\n    protected _timeframe: number | undefined;\n\n    protected _clickListener: { (event: MouseEvent): void };\n    protected _clickSubject: ReplaySubject<MouseEvent>;\n\n    protected _enterListener: { (event: MouseEvent): void };\n    protected _enterSubject: ReplaySubject<MouseEvent>;\n\n    protected _leaveListener: { (event: MouseEvent): void };\n    protected _leaveSubject: ReplaySubject<MouseEvent>;\n\n    protected _downListener: { (event: MouseEvent): void };\n    protected _downSubject: ReplaySubject<MouseEvent>;\n    protected _upListener: { (event: MouseEvent): void };\n    protected _upSubject: ReplaySubject<MouseEvent>;\n\n    protected _moveListener: { (event: MouseEvent): void };\n    protected _moveSubject: ReplaySubject<MouseEvent>;\n\n    protected _wheelListener: { (event: WheelEvent): void };\n    protected _wheelSubject: ReplaySubject<WheelEvent>;\n\n    /** @see {@link pointerLock} */\n    protected _pointerLockRequestPending = false;\n\n    constructor(element: HTMLCanvasElement, timeframe?: number) {\n        assert(element !== undefined, `expected valid canvas element on initialization, given ${element}`);\n        this._element = element;\n        this._timeframe = timeframe;\n\n        this._element.addEventListener('click', () => this.processPointerLockRequests());\n    }\n\n    /**\n     * The pointer lock API requires a little workaround in order to avoid something like '... not called from inside a\n     * short running user-generated event handler'. A click event listener is registered and whenever a pointer lock is\n     * requested, e.g., from an event handler (which in turn exposes this interface to, e.g., a navigation), the next\n     * click will result in a probably more successful pointer lock.\n     */\n    protected processPointerLockRequests(): void {\n        if (!this._pointerLockRequestPending) {\n            return;\n        }\n        PointerLock.request(this._element);\n    }\n\n    observable(type: MouseEventProvider.Type): Observable<MouseEvent> | Observable<WheelEvent> {\n        /* tslint:disable-next-line:switch-default */\n        switch (type) {\n            case MouseEventProvider.Type.Click:\n                return this.clickObservable;\n            case MouseEventProvider.Type.Enter:\n                return this.enterObservable;\n            case MouseEventProvider.Type.Leave:\n                return this.leaveObservable;\n            case MouseEventProvider.Type.Down:\n                return this.downObservable;\n            case MouseEventProvider.Type.Up:\n                return this.upObservable;\n            case MouseEventProvider.Type.Move:\n                return this.moveObservable;\n            case MouseEventProvider.Type.Wheel:\n                return this.wheelObservable;\n        }\n    }\n\n    /**\n     * Enable/disable pointer lock on click. If true, the next click on this event provider's canvas will invoke a\n     * pointer lock request on the canvas element.\n     */\n    set pointerLock(lock: boolean) {\n        this._pointerLockRequestPending = lock;\n        if (lock === false) {\n            this._pointerLockRequestPending = false;\n            PointerLock.exit();\n        }\n    }\n\n    get pointerLock(): boolean {\n        return PointerLock.active(this._element);\n    }\n\n    get clickObservable(): Observable<MouseEvent> {\n        if (this._clickSubject === undefined) {\n            this._clickSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\n            this._clickListener = (event: MouseEvent) => this._clickSubject.next(event);\n            this._element.onclick = this._clickListener;\n        }\n        return this._clickSubject.asObservable();\n    }\n\n    get enterObservable(): Observable<MouseEvent> {\n        if (this._enterSubject === undefined) {\n            this._enterSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\n            this._enterListener = (event: MouseEvent) => this._enterSubject.next(event);\n            this._element.onmouseenter = this._enterListener;\n        }\n        return this._enterSubject.asObservable();\n    }\n\n    get leaveObservable(): Observable<MouseEvent> {\n        if (this._leaveSubject === undefined) {\n            this._leaveSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\n            this._leaveListener = (event: MouseEvent) => this._leaveSubject.next(event);\n            this._element.onmouseleave = this._leaveListener;\n        }\n        return this._leaveSubject.asObservable();\n    }\n\n    get downObservable(): Observable<MouseEvent> {\n        if (this._downSubject === undefined) {\n            this._downSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\n            this._downListener = (event: MouseEvent) => this._downSubject.next(event);\n            this._element.onmousedown = this._downListener;\n        }\n        return this._downSubject.asObservable();\n    }\n\n    get upObservable(): Observable<MouseEvent> {\n        if (this._upSubject === undefined) {\n            this._upSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\n            this._upListener = (event: MouseEvent) => this._upSubject.next(event);\n            this._element.onmouseup = this._upListener;\n        }\n        return this._upSubject.asObservable();\n    }\n\n    get moveObservable(): Observable<MouseEvent> {\n        if (this._moveSubject === undefined) {\n            this._moveSubject = new ReplaySubject<MouseEvent>(undefined, this._timeframe);\n            this._moveListener = (event: MouseEvent) => this._moveSubject.next(event);\n            this._element.onmousemove = this._moveListener;\n        }\n        return this._moveSubject.asObservable();\n    }\n\n    get wheelObservable(): Observable<WheelEvent> {\n        if (this._wheelSubject === undefined) {\n            this._wheelSubject = new ReplaySubject<WheelEvent>(undefined, this._timeframe);\n            this._wheelListener = (event: WheelEvent) => this._wheelSubject.next(event);\n            this._element.onwheel = this._wheelListener;\n        }\n        return this._wheelSubject.asObservable();\n    }\n\n}\n\n\nexport namespace MouseEventProvider {\n\n    export enum Type { Click, Enter, Leave, Down, Up, Move, Wheel }\n\n}\n","\nimport { assert } from './auxiliaries';\n\nimport { Context } from './context';\nimport { WEBGL1_EXTENSIONS, WEBGL2_EXTENSIONS } from './extensions';\n\nexport class ExtensionsHash {\n\n    protected static readonly WEBGL_BACKENDS: Array<string> = ['webgl1', 'webgl2'];\n\n    protected static readonly WEBGL_EXTENSIONS_BY_BACKEND = new Map<number, Array<string>>([\n        [0, WEBGL1_EXTENSIONS],\n        [1, WEBGL2_EXTENSIONS],\n    ]);\n\n    /**\n     * All known WebGL extensions (regardless of WebGL version). When new extensions become known, a new internal\n     * version has to be created, comprising all extensions again (some removed, some added w.r.t. previous versions).\n     */\n    protected static readonly EXTENSIONS_BY_VERSION = new Map<number, Array<string>>([[\n        0b000, [\n            'ANGLE_instanced_arrays',\n            'EXT_blend_minmax',\n            'EXT_color_buffer_float',\n            'EXT_color_buffer_half_float',\n            'EXT_disjoint_timer_query',\n            'EXT_disjoint_timer_query_webgl2',\n            'EXT_frag_depth',\n            'EXT_shader_texture_lod',\n            'EXT_sRGB',\n            'EXT_texture_filter_anisotropic',\n            'OES_element_index_uint',\n            'OES_standard_derivatives',\n            'OES_texture_float',\n            'OES_texture_float_linear',\n            'OES_texture_half_float',\n            'OES_texture_half_float_linear',\n            'OES_vertex_array_object',\n            'WEBGL_color_buffer_float',\n            'WEBGL_compressed_texture_astc',\n            'WEBGL_compressed_texture_atc',\n            'WEBGL_compressed_texture_etc',\n            'WEBGL_compressed_texture_etc1',\n            'WEBGL_compressed_texture_pvrtc',\n            'WEBGL_compressed_texture_s3tc',\n            'WEBGL_compressed_texture_s3tc_srgb',\n            'WEBGL_debug_renderer_info',\n            'WEBGL_debug_shaders',\n            'WEBGL_depth_texture',\n            'WEBGL_draw_buffers',\n            'WEBGL_lose_context',\n        ]],\n    ]);\n\n    /**\n     * Hash versioning is used to account for future, yet unknown/unpublished extensions while maintaining support for\n     * existing hashes.\n     */\n    protected static readonly LATEST_VERSION = 0b000;\n\n    protected static readonly BASE64_ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-+';\n\n    /**\n     * Encodes a number of bitfield semantics (of 6 bits) into a base64 character.\n     * @param base64 - Bitfield of 6 bits (as number).\n     */\n    protected static encode64(bitfield: number): string {\n        assert(bitfield >= 0b000000 && bitfield <= 0b111111,\n            `expected bitfield in range [ 0b000000, 0b111111 ], given ${bitfield}`);\n        return ExtensionsHash.BASE64_ALPHABET[bitfield];\n    }\n\n    /**\n     * Decodes a single base64 encoded character to a number of bitfield semantics.\n     * @param base64 - Single base64 encoded character (string).\n     */\n    protected static decode64(base64: string): number {\n        assert(base64.length === 1, `expected single base64 character, given '${base64}'`);\n        const bitfield = ExtensionsHash.BASE64_ALPHABET.indexOf(base64);\n        assert(bitfield > -1, `unknown base64 character, given '${base64}'`);\n        return bitfield;\n    }\n\n    /**\n     * Generates a hash that encodes the contexts webgl backend and extension support. This is intended to be queried\n     * whenever support for a given context on a foreign client is due. The hash can be used as masquerade input.\n     * @param backend - WebGL backend: 'webgl1' or 'webgl2'.\n     * @param supported - Array of supported extensions to be encoded.\n     */\n    static encode(backend: Context.BackendType, supported: Array<string>): string {\n        const version = ExtensionsHash.LATEST_VERSION; // should always be set to the latest version\n        const extensions = ExtensionsHash.EXTENSIONS_BY_VERSION.get(version) as Array<string>;\n\n        const backendIndex = ExtensionsHash.WEBGL_BACKENDS.indexOf(backend);\n        assert(backendIndex > -1, `expected valid backend ${ExtensionsHash.WEBGL_BACKENDS}, given ${backend} `);\n\n        let hash: string = ExtensionsHash.encode64((version << 3) | (backendIndex + 1));\n        if (supported.length === 0) {\n            return hash;\n        }\n\n        let support = 0b000000;\n        for (let i = 0; i < extensions.length; ++i) {\n            support |= (supported.indexOf(extensions[i]) > -1 ? 0b100000 >> (i % 6) : 0b0);\n            if (i % 6 < 5 && i < extensions.length - 1) {\n                continue;\n            }\n            /* Convert every pack of 6 bits into a base64 encoded string and append it to the hash. */\n            hash += ExtensionsHash.encode64(support);\n            support = 0b000000;\n        }\n        return hash;\n    }\n\n    /**\n     * Decodes a hash into a WebGL backend and supported extensions.\n     * @param hash - Versioned extension hash.\n     * @returns - Tuple of webgl backend and an array of extensions.\n     */\n    static decode(hash: string): [string, Array<string>] {\n\n        const hashHead = ExtensionsHash.decode64(hash[0]);\n        const version = hashHead >> 3;\n\n        const backendIndex = (hashHead & 0b000111) - 1;\n        assert(backendIndex < ExtensionsHash.WEBGL_BACKENDS.length,\n            `expected valid backend index, given ${backendIndex}`);\n\n        const backend = ExtensionsHash.WEBGL_BACKENDS[backendIndex];\n\n        assert(ExtensionsHash.EXTENSIONS_BY_VERSION.has(version), `expected valid hash version, given ${version}`);\n        const extensions = ExtensionsHash.EXTENSIONS_BY_VERSION.get(version) as Array<string>;\n\n        const expectedHashLength = Math.ceil(extensions.length / 6) + 1;\n        assert(hash.length === expectedHashLength,\n            `expected hash of version ${version} to have a length of ${expectedHashLength}, given ${hash}`);\n\n        const supported = new Array<string>();\n        for (let i = 1; i < hash.length; ++i) {\n            const bitfield = ExtensionsHash.decode64(hash[i]);\n            const offset = (i - 1) * 6;\n\n            /* loop explicitly unrolled */\n            if (bitfield & 0b100000) {\n                supported.push(extensions[offset + 0]);\n            }\n            if (bitfield & 0b010000) {\n                supported.push(extensions[offset + 1]);\n            }\n            if (bitfield & 0b001000) {\n                supported.push(extensions[offset + 2]);\n            }\n            if (bitfield & 0b000100) {\n                supported.push(extensions[offset + 3]);\n            }\n            if (bitfield & 0b000010) {\n                supported.push(extensions[offset + 4]);\n            }\n            if (bitfield & 0b000001) {\n                supported.push(extensions[offset + 5]);\n            }\n        }\n        return [backend, supported];\n    }\n\n    /**\n     * For a given set of extensions, this generates the complementary set of extensions for a given backend.\n     * @param backend - WebGL backend: 'webgl1' or 'webgl2'.\n     * @param extensions - Array of extensions to be complemented to all extensions available to the backend.\n     */\n    static complement(backend: string, extensions: Array<string>): Array<string> {\n        const backendIndex = ExtensionsHash.WEBGL_BACKENDS.indexOf(backend);\n        assert(backendIndex > -1, `expected valid backend ${ExtensionsHash.WEBGL_BACKENDS}, given ${backend} `);\n\n        const webglExtensions = ExtensionsHash.WEBGL_EXTENSIONS_BY_BACKEND.get(backendIndex) as Array<string>;\n        return webglExtensions.filter((ext) => extensions.indexOf(ext) < 0);\n    }\n\n}\n","\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\n\nimport { AllocationRegister } from './allocationregister';\nimport { ContextMasquerade } from './contextmasquerade';\nimport { WEBGL1_EXTENSIONS, WEBGL2_DEFAULT_EXTENSIONS, WEBGL2_EXTENSIONS } from './extensions';\nimport { ExtensionsHash } from './extensionshash';\nimport { GL2Facade } from './gl2facade';\n\n\n/**\n * A controller for either a WebGLRenderingContext or WebGL2RenderingContext. It requests a context, tracks context\n * attributes, extensions as well as multi frame specific rendering information and a (gpu)allocation registry.\n *\n * An instance of `Context` can be created only implicitly by requesting a context given a canvas element and its\n * dataset:\n * ```\n * const element: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(canvasID);\n * this.context = Context.request(element); // element.dataset is used for attributes\n * ```\n * The context supports the following data-attributes:\n * ```\n * data-backend: 'auto' | 'webgl' | 'webgl2'\n * data-accumulation-format: 'auto' | 'float' | 'half' | 'byte'\n * ```\n *\n * At run-time, cached context features can be queried without a performance impact, e.g., frequent extension-based\n * branching:\n * ```\n * if(this.context.supportsVertexArrayObject) {\n *     this.context.vertexArrayObject.bindVertexArrayOES(...);\n *     ...\n * }\n * ```\n *\n * For convenience, protected extension names such as `EXT_frag_depth` are not prefixed by an underscore.\n */\nexport class Context {\n\n    /* tslint:disable:member-ordering variable-name */\n\n    /**\n     * Context creation attribute defaults.\n     */\n    static readonly CONTEXT_ATTRIBUTES = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        failIfMajorPerformanceCaveat: false,\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n        stencil: false,\n    };\n\n    /** @see {@link backend} */\n    protected _backend: Context.BackendType | undefined;\n\n    /**\n     * Created context. The actual type depends on the created context.\n     * @see {@link gl}\n     */\n    protected _context: any; // WebGLRenderingContext | WebGL2RenderingContext;\n\n    /** @see {@link mask} */\n    protected _mask: ContextMasquerade | undefined;\n\n    /** @see {@link gl2facade} */\n    protected _gl2: GL2Facade;\n\n\n    /**\n     * Creates a masquerade object that can be used for debugging. This is intended to be called when requesting a\n     * context, i.e., before actually requesting it. For creation of a masquerade object, the following masquerade\n     * specifiers are evaluated in the following order:\n     *  1. msqrd_h GET parameter,\n     *  2. msqrd_p GET parameter,\n     *  3. data-msqrd-h attribute of the canvas element, and, finally,\n     *  4. data-msqrd-p attribute of the canvas element.\n     * If no specifier can be found, no object is created and undefined is returned.\n     * @param dataset - Dataset of the canvas element that might provide a data-msqrd-{h,p} attribute.\n     * @returns - Masquerade object when a specifier was found. If none was found undefined is returned.\n     */\n    protected static createMasqueradeFromGETorDataAttribute(dataset: DOMStringMap): ContextMasquerade | undefined {\n        const mask = ContextMasquerade.fromGET();\n        if (mask) {\n            return mask;\n        }\n        if (dataset.msqrdH) {\n            return ContextMasquerade.fromHash(dataset.msqrdH as string);\n        }\n        if (dataset.msqrdP) {\n            return ContextMasquerade.fromPreset(dataset.msqrdP as string);\n        }\n        return undefined;\n    }\n\n    // WEBGL 1 & 2 CONTEXT\n\n    /**\n     * Create a WebGL context. Note: this should only be called once in constructor, because the second and subsequent\n     * calls to getContext of an element will return null.\n     * @param element - Canvas element to request context from.\n     * @returns - Context providing either a WebGLRenderingContext, WebGL2RenderingContext.\n     */\n    static request(element: HTMLCanvasElement,\n        attributes: WebGLContextAttributes = Context.CONTEXT_ATTRIBUTES): Context {\n\n        const dataset: DOMStringMap = element.dataset;\n        const mask = Context.createMasqueradeFromGETorDataAttribute(dataset);\n\n        /** Favor backend specification by masquerade over specification by data attribute. */\n        let request = mask ? (mask.backend as string) :\n            dataset.backend ? (dataset.backend as string).toLowerCase() : 'auto';\n\n        if (!(request in Context.BackendRequestType)) {\n            log(LogLevel.Dev, `unknown backend '${dataset.backend}' changed to '${Context.BackendRequestType.auto}'`);\n            request = 'auto';\n        }\n\n        switch (request) {\n            case Context.BackendRequestType.webgl:\n                break;\n            case Context.BackendRequestType.experimental:\n            case Context.BackendRequestType.webgl1:\n            case Context.BackendRequestType.experimental1:\n                request = Context.BackendRequestType.webgl;\n                break;\n            case Context.BackendRequestType.webgl2:\n            case Context.BackendRequestType.experimental2:\n                request = Context.BackendRequestType.webgl2;\n                break;\n            default:\n                request = Context.BackendRequestType.auto;\n        }\n\n        let context;\n        if (request !== Context.BackendRequestType.webgl) {\n            context = this.requestWebGL2(element, attributes);\n        }\n        if (!context) {\n            context = this.requestWebGL1(element, attributes);\n            logIf(context !== undefined && request === Context.BackendRequestType.webgl2, LogLevel.Dev,\n                `backend changed to '${Context.BackendRequestType.webgl}', given '${request}'`);\n        }\n\n        assert(!!context, `creating a context failed`);\n        return new Context(context, mask);\n    }\n\n    /**\n     * Helper that tries to create a WebGL 1 context (requests to 'webgl' and 'experimental-webgl' are made).\n     * @param element - Canvas element to request context from.\n     * @returns {WebGLRenderingContext} - WebGL context object or null.\n     */\n    protected static requestWebGL1(element: HTMLCanvasElement, attributes: WebGLContextAttributes) {\n        let context = element.getContext(Context.BackendRequestType.webgl, attributes);\n        if (context) {\n            return context;\n        }\n        context = element.getContext(Context.BackendRequestType.experimental, attributes);\n        return context;\n    }\n\n    /**\n     * Helper that tries to create a WebGL 2 context (requests to 'webgl2' and 'experimental-webgl2' are made).\n     * @param element - Canvas element to request context from.\n     * @returns {WebGL2RenderingContext} - WebGL2 context object or null.\n     */\n    protected static requestWebGL2(element: HTMLCanvasElement, attributes: WebGLContextAttributes) {\n        let context = element.getContext(Context.BackendRequestType.webgl2, attributes);\n        if (context) {\n            return context;\n        }\n        context = element.getContext(Context.BackendRequestType.experimental2, attributes);\n        return context;\n    }\n\n\n    // CONTEXT ATTRIBUTES\n\n    /**\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\n     * If the value is true, the drawing buffer has an alpha channel for the purposes of performing OpenGL destination\n     * alpha operations and compositing with the page. If the value is false, no alpha buffer is available.\n     */\n    get alpha(): boolean {\n        return this._context.getContextAttributes().alpha;\n    }\n\n    /**\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\n     * If the value is true and the implementation supports antialiasing the drawing buffer will perform antialiasing\n     * using its choice of technique (multisample/supersample) and quality. If the value is false or the implementation\n     * does not support antialiasing, no antialiasing is performed.\n     */\n    get antialias(): boolean {\n        return this._context.getContextAttributes().antialias;\n    }\n\n    /**\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\n     * If the value is true, the drawing buffer has a depth buffer of at least 16 bits. If the value is false, no depth\n     * buffer is available.\n     */\n    get depth(): boolean {\n        return this._context.getContextAttributes().depth;\n    }\n\n    /**\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\n     * If the value is true, context creation will fail if the implementation determines that the performance of the\n     * created WebGL context would be dramatically lower than that of a native application making equivalent OpenGL\n     * calls...\n     */\n    get failIfMajorPerformanceCaveat(): boolean {\n        return this._context.getContextAttributes().failIfMajorPerformanceCaveat;\n    }\n\n    /**\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\n     * If the value is true the page compositor will assume the drawing buffer contains colors with premultiplied alpha.\n     * If the value is false the page compositor will assume that colors in the drawing buffer are not premultiplied.\n     * This flag is ignored if the alpha flag is false. See Premultiplied Alpha for more information on the effects of\n     * the premultipliedAlpha flag.\n     */\n    get premultipliedAlpha(): boolean {\n        return this._context.getContextAttributes().premultipliedAlpha;\n    }\n\n    /**\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\n     * If false, once the drawing buffer is presented as described in theDrawing Buffer section, the contents of the\n     * drawing buffer are cleared to their default values. All elements of the drawing buffer (color, depth and stencil)\n     * are cleared. If the value is true the buffers will not be cleared and will preserve their values until cleared\n     * or overwritten by the author.\n     */\n    get preserveDrawingBuffer(): boolean {\n        return this._context.getContextAttributes().preserveDrawingBuffer;\n    }\n\n    /**\n     * @link https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2\n     * If the value is true, the drawing buffer has a stencil buffer of at least 8 bits. If the value is false, no\n     * stencil buffer is available.\n     */\n    get stencil(): boolean {\n        return this._context.getContextAttributes().stencil;\n    }\n\n\n    // EXTENSIONS\n\n    /**\n     * Cached extension supported by the context.\n     */\n    protected _extensions: Array<string> = new Array<string>();\n\n    /**\n     * Checks if the given extension is supported. Please note that a 'supports' call asserts whether or not the\n     * extension is related to the WebGL version. For example, the following code would lead to an Error:\n     * ```\n     * this.supports('ANGLE_instanced_arrays'); // asserts in WebGL2 since the extension is incorporated by default\n     * ```\n     * If the context is masked by a ContextMasquerade the support of an extension might be concealed.\n     * @param extension - Extension identifier to query support for.\n     * @returns - True if the extension is supported, false otherwise.\n     */\n    protected supports(extension: string): boolean {\n        if (this._mask && this._mask.extensionsConceal.indexOf(extension) > -1) {\n            return false;\n        }\n\n        switch (this._backend) {\n            case Context.BackendType.WebGL1:\n                assert(WEBGL1_EXTENSIONS.indexOf(extension) > -1, `extension ${extension} not available to WebGL1`);\n                break;\n\n            case Context.BackendType.WebGL2:\n                assert(WEBGL2_DEFAULT_EXTENSIONS.indexOf(extension) === -1,\n                    `extension ${extension} supported by default in WebGL2`);\n                assert(WEBGL2_EXTENSIONS.indexOf(extension) > -1, `extension ${extension} not available to WebGL2`);\n                break;\n\n            default:\n                break;\n        }\n\n        return this._extensions.indexOf(extension) > -1;\n    }\n\n    /**\n     * Queries all extensions for the current context and stores the result (supported or not supported). This is\n     * relevant to avoid continuous searches or regexp matching or substring queries in the complete extension string.\n     * Instead, the support is queried once and can be explicitly request in the public interface using properties.\n     *\n     * This function should get called only once per Context instance.\n     */\n    protected queryExtensionSupport(): void {\n        this._extensions = this._context.getSupportedExtensions();\n\n        if (this._backend === Context.BackendType.WebGL1) {\n            this.ANGLE_instanced_arrays_supported = this.supports('ANGLE_instanced_arrays');\n\n            this.EXT_blend_minmax_supported = this.supports('EXT_blend_minmax');\n            this.EXT_color_buffer_half_float_supported = this.supports('EXT_color_buffer_half_float');\n            this.EXT_disjoint_timer_query_supported = this.supports('EXT_disjoint_timer_query');\n            this.EXT_frag_depth_supported = this.supports('EXT_frag_depth');\n            this.EXT_sRGB_supported = this.supports('EXT_sRGB');\n            this.EXT_shader_texture_lod_supported = this.supports('EXT_shader_texture_lod');\n\n            this.OES_element_index_uint_supported = this.supports('OES_element_index_uint');\n            this.OES_standard_derivatives_supported = this.supports('OES_standard_derivatives');\n            this.OES_texture_float_supported = this.supports('OES_texture_float');\n            this.OES_texture_half_float_supported = this.supports('OES_texture_half_float');\n            this.OES_vertex_array_object_supported = this.supports('OES_vertex_array_object');\n\n            this.WEBGL_color_buffer_float_supported = this.supports('WEBGL_color_buffer_float');\n            this.WEBGL_depth_texture_supported = this.supports('WEBGL_depth_texture');\n            this.WEBGL_draw_buffers_supported = this.supports('WEBGL_draw_buffers');\n        }\n\n        if (this._backend === Context.BackendType.WebGL2) {\n            this.EXT_color_buffer_float_supported = this.supports('EXT_color_buffer_float');\n            this.EXT_disjoint_timer_query_webgl2_supported = this.supports('EXT_disjoint_timer_query_webgl2');\n        }\n\n        this.EXT_texture_filter_anisotropic_supported = this.supports('EXT_texture_filter_anisotropic');\n\n        this.OES_texture_float_linear_supported = this.supports('OES_texture_float_linear');\n        this.OES_texture_half_float_linear_supported = this.supports('OES_texture_half_float_linear');\n\n        this.WEBGL_compressed_texture_astc_supported = this.supports('WEBGL_compressed_texture_astc');\n        this.WEBGL_compressed_texture_atc_supported = this.supports('WEBGL_compressed_texture_atc');\n        this.WEBGL_compressed_texture_etc_supported = this.supports('WEBGL_compressed_texture_etc');\n        this.WEBGL_compressed_texture_etc1_supported = this.supports('WEBGL_compressed_texture_etc1');\n        this.WEBGL_compressed_texture_pvrtc_supported = this.supports('WEBGL_compressed_texture_pvrtc');\n        this.WEBGL_compressed_texture_s3tc_supported = this.supports('WEBGL_compressed_texture_s3tc');\n        this.WEBGL_compressed_texture_s3tc_srgb_supported = this.supports('WEBGL_compressed_texture_s3tc_srgb');\n        this.WEBGL_debug_renderer_info_supported = this.supports('WEBGL_debug_renderer_info');\n        this.WEBGL_debug_shaders_supported = this.supports('WEBGL_debug_shaders');\n        this.WEBGL_lose_context_supported = this.supports('WEBGL_lose_context');\n    }\n\n    /**\n     * Returns the cached extensions object for the given extension identifier. If no extensions is cached, it is\n     * queried. Asserts if the extension is provided by default in the current backend, not supported in general, or\n     * unknown to the specification.\n     * Please not that the availability of an extension might be concealed by the context's mask.\n     * @param out - Member the extension object is cached into.\n     * @param extension - Extension identifier to query.\n     * @returns - Extension object.\n     */\n    protected extension(out: any, extension: string): any {\n        if (out === undefined) {\n            assert(this.supports(extension), `extension ${extension} expected to be supported`);\n            out = this._context.getExtension(extension);\n        }\n        return out;\n    }\n\n    /**\n     * Context this is of type 'any' for now, since WebGL2RenderingContext not available but supported. This\n     * constructor is protected to enforce context creation using `request`. It queries extension support and\n     * configures context specifics for convenience, e.g., HALF_FLOAT format.\n     */\n    protected constructor(context: any, mask: ContextMasquerade | undefined) {\n        this._context = context;\n        this._mask = mask;\n\n        const contextString = context.toString();\n\n        {\n            // WebGL chrome debugger renames Context to CaptureContext\n            const webgl1 = /WebGLRenderingContext/.test(contextString) ||\n                /CaptureContext/.test(contextString);\n            const webgl2 = /WebGL2RenderingContext/.test(contextString);\n\n            this._backend = webgl1 ? Context.BackendType.WebGL1 : webgl2 ? Context.BackendType.WebGL2 : undefined;\n        }\n\n        assert(this._backend !== undefined && this._backend.valueOf() !== Context.BackendType.Invalid.valueOf(),\n            `context is neither webgl nor webgl2, given ${contextString}`);\n\n        this.queryExtensionSupport();\n\n        // undefine all masked functions\n        if (this._mask && this._mask.functionsUndefine) {\n            for (const func in this._mask.functionsUndefine) {\n                (this._context as any)[func] = undefined;\n            }\n        }\n\n        // create an instance for a gl2 facade (unifies mandatory interfaces of the webgl and webgl2 api)\n        this._gl2 = new GL2Facade(this);\n    }\n\n\n    /** @see {@link allocationRegister} */\n    protected _allocationRegister = new AllocationRegister();\n\n    /**\n     * The context's GPU allocation register for use of tracking memory allocations.\n     */\n    get allocationRegister(): AllocationRegister {\n        return this._allocationRegister;\n    }\n\n\n    /**\n     * The created rendering backend (webgl context type), either 'webgl' or 'webgl2' based on which one was\n     * created successfully. If no context could be created null is returned.\n     * @returns - Backend that was created on construction.\n     */\n    get backend() {\n        return this._backend;\n    }\n\n    /**\n     * Provides a human-readable string of the backend.\n     */\n    get backendString(): string | undefined {\n        switch (this._backend) {\n            case Context.BackendType.WebGL1:\n                return 'WebGL';\n            case Context.BackendType.WebGL2:\n                return 'WebGL2';\n            default:\n                return undefined;\n        }\n    }\n\n    /**\n     * Provides an array of all extensions supported by the used WebGL1/2 context.\n     */\n    get extensions() {\n        return this._extensions;\n    }\n\n    /**\n     * Masquerade object applied to a context instance.\n     */\n    get mask() {\n        return this._mask;\n    }\n\n    /**\n     * Access to either the WebGLRenderingContext or WebGL2RenderingContext.\n     */\n    get gl() {\n        return this._context;\n    }\n\n    /**\n     * WebGL2 facade for WebGL2 API like access to features mandatory to this engine.\n     */\n    get gl2facade() {\n        return this._gl2;\n    }\n\n    /**\n     * True if the context is a WebGL1 context, otherwise false.\n     */\n    get isWebGL1(): boolean {\n        return this._backend === Context.BackendType.WebGL1;\n    }\n\n    /**\n     * True if the context is a WebGL2 context, otherwise false.\n     */\n    get isWebGL2(): boolean {\n        return this._backend === Context.BackendType.WebGL2;\n    }\n\n\n    // EXTENSION QUERIES\n\n    // WebGL1, WebGL2-default\n    protected ANGLE_instanced_arrays: any;\n    protected ANGLE_instanced_arrays_supported: boolean;\n    get supportsInstancedArrays(): boolean {\n        return this.ANGLE_instanced_arrays_supported;\n    }\n    get instancedArrays(): any {\n        return this.extension(this.ANGLE_instanced_arrays, 'ANGLE_instanced_arrays');\n    }\n\n    // WebGL1, WebGL2-default\n    protected EXT_blend_minmax: any;\n    protected EXT_blend_minmax_supported: boolean;\n    get supportsBlendMinmax(): boolean {\n        return this.EXT_blend_minmax_supported;\n    }\n    get blendMinmax(): any {\n        return this.extension(this.EXT_blend_minmax, 'EXT_blend_minmax');\n    }\n\n    // WebGL1\n    protected EXT_color_buffer_half_float: any;\n    protected EXT_color_buffer_half_float_supported: boolean;\n    get supportsColorBufferHalfFloat(): boolean {\n        return this.EXT_color_buffer_half_float_supported;\n    }\n    get colorBufferHalfFloat(): any {\n        return this.extension(this.EXT_color_buffer_half_float, 'EXT_color_buffer_half_float');\n    }\n\n    // WebGL1\n    protected EXT_disjoint_timer_query: any;\n    protected EXT_disjoint_timer_query_supported: boolean;\n    get supportsDisjointTimerQuery(): boolean {\n        return this.EXT_disjoint_timer_query_supported;\n    }\n    get disjointTimerQuery(): any {\n        return this.extension(this.EXT_disjoint_timer_query, 'EXT_disjoint_timer_query');\n    }\n\n    // WebGL2\n    protected EXT_disjoint_timer_query_webgl2: any;\n    protected EXT_disjoint_timer_query_webgl2_supported: boolean;\n    get supportsDisjointTimerQueryWebGL2(): boolean {\n        return this.EXT_disjoint_timer_query_webgl2_supported;\n    }\n    get disjointTimerQueryWebGL2(): any {\n        return this.extension(this.EXT_disjoint_timer_query_webgl2, 'EXT_disjoint_timer_query_webgl2');\n    }\n\n    // WebGL1, WebGL2-default\n    protected EXT_frag_depth: any;\n    protected EXT_frag_depth_supported: boolean;\n    get supportsFragDepth(): boolean {\n        return this.EXT_frag_depth_supported;\n    }\n    get fragDepth(): any {\n        return this.extension(this.EXT_frag_depth, 'EXT_frag_depth');\n    }\n\n    // WebGL1, WebGL2-default\n    protected EXT_sRGB: any;\n    protected EXT_sRGB_supported: boolean;\n    get supportsSRGB(): boolean {\n        return this.EXT_sRGB_supported;\n    }\n    get sRGB(): any {\n        return this.extension(this.EXT_sRGB, 'EXT_sRGB');\n    }\n\n    // WebGL1, WebGL2-default\n    protected EXT_shader_texture_lod: any;\n    protected EXT_shader_texture_lod_supported: boolean;\n    get supportsShaderTextureLOD(): boolean {\n        return this.EXT_shader_texture_lod_supported;\n    }\n    get shaderTextureLOD(): any {\n        return this.extension(this.EXT_shader_texture_lod, 'EXT_shader_texture_lod');\n    }\n\n    // WebGL1, WebGL2\n    protected EXT_texture_filter_anisotropic: any;\n    protected EXT_texture_filter_anisotropic_supported: boolean;\n    get supportsTextureFilterAnisotropic(): boolean {\n        return this.EXT_texture_filter_anisotropic_supported;\n    }\n    get textureFilterAnisotropic(): any {\n        return this.extension(this.EXT_texture_filter_anisotropic, 'EXT_texture_filter_anisotropic');\n    }\n\n    // WebGL1, WebGL2-default\n    protected OES_element_index_uint: any;\n    protected OES_element_index_uint_supported: boolean;\n    get supportsElementIndexUint(): boolean {\n        return this.OES_element_index_uint_supported;\n    }\n    get elementIndexUint(): any {\n        return this.extension(this.OES_element_index_uint, 'OES_element_index_uint');\n    }\n\n    // WebGL1, WebGL2-default\n    protected OES_standard_derivatives: any;\n    protected OES_standard_derivatives_supported: boolean;\n    get supportsStandardDerivatives(): boolean {\n        return this.OES_standard_derivatives_supported;\n    }\n    get standardDerivatives(): any {\n        return this.extension(this.OES_standard_derivatives, 'OES_standard_derivatives');\n    }\n\n    // WebGL1, WebGL2-default\n    protected OES_texture_float: any;\n    protected OES_texture_float_supported: boolean;\n    get supportsTextureFloat(): boolean {\n        return this.OES_texture_float_supported;\n    }\n    get textureFloat(): any {\n        return this.extension(this.OES_texture_float, 'OES_texture_float');\n    }\n\n    // WebGL1, WebGL2\n    protected OES_texture_float_linear: any;\n    protected OES_texture_float_linear_supported: boolean;\n    get supportsTextureFloatLinear(): boolean {\n        return this.OES_texture_float_linear_supported;\n    }\n    get textureFloatLinear(): any {\n        return this.extension(this.OES_texture_float_linear, 'OES_texture_float_linear');\n    }\n\n    // WebGL1, WebGL2-default\n    protected OES_texture_half_float: any;\n    protected OES_texture_half_float_supported: boolean;\n    get supportsTextureHalfFloat(): boolean {\n        return this.OES_texture_half_float_supported;\n    }\n    get textureHalfFloat(): any {\n        return this.extension(this.OES_texture_half_float, 'OES_texture_half_float');\n    }\n\n    // WebGL1, WebGL2\n    protected OES_texture_half_float_linear: any;\n    protected OES_texture_half_float_linear_supported: boolean;\n    get supportsTextureHalfFloatLinear(): boolean {\n        return this.OES_texture_half_float_linear_supported;\n    }\n    get textureHalfFloatLinear(): any {\n        return this.extension(this.OES_texture_half_float_linear, 'OES_texture_half_float_linear');\n    }\n\n    // WebGL1, WebGL2-default\n    protected OES_vertex_array_object: any;\n    protected OES_vertex_array_object_supported: boolean;\n    get supportsVertexArrayObject(): boolean {\n        return this.OES_vertex_array_object_supported;\n    }\n    get vertexArrayObject(): any {\n        return this.extension(this.OES_vertex_array_object, 'OES_vertex_array_object');\n    }\n\n    // WebGL1\n    protected WEBGL_color_buffer_float: any;\n    protected WEBGL_color_buffer_float_supported: boolean;\n    // WebGL2\n    protected EXT_color_buffer_float: any;\n    protected EXT_color_buffer_float_supported: boolean;\n    get supportsColorBufferFloat(): boolean | undefined {\n        switch (this._backend) {\n            case Context.BackendType.WebGL1:\n                return this.WEBGL_color_buffer_float_supported;\n            case Context.BackendType.WebGL2:\n                return this.EXT_color_buffer_float_supported;\n            default:\n                return undefined;\n        }\n    }\n    get colorBufferFloat(): any | undefined {\n        switch (this._backend) {\n            case Context.BackendType.WebGL1:\n                return this.extension(this.WEBGL_color_buffer_float, 'WEBGL_color_buffer_float');\n            case Context.BackendType.WebGL2:\n                return this.extension(this.EXT_color_buffer_float, 'EXT_color_buffer_float');\n            default:\n                return undefined;\n        }\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_compressed_texture_astc: any;\n    protected WEBGL_compressed_texture_astc_supported: boolean;\n    get supportsCompressedTextureASTC(): boolean {\n        return this.WEBGL_compressed_texture_astc_supported;\n    }\n    get compressedTextureASTC(): any {\n        return this.extension(this.WEBGL_compressed_texture_astc, 'WEBGL_compressed_texture_astc');\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_compressed_texture_atc: any;\n    protected WEBGL_compressed_texture_atc_supported: boolean;\n    get supportsCompressedTextureATC(): boolean {\n        return this.WEBGL_compressed_texture_atc_supported;\n    }\n    get compressedTextureATC(): any {\n        return this.extension(this.WEBGL_compressed_texture_atc, 'WEBGL_compressed_texture_atc');\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_compressed_texture_etc: any;\n    protected WEBGL_compressed_texture_etc_supported: boolean;\n    get supportsCompressedTextureETC(): boolean {\n        return this.WEBGL_compressed_texture_etc_supported;\n    }\n    get compressedTextureETC(): any {\n        return this.extension(this.WEBGL_compressed_texture_etc, 'WEBGL_compressed_texture_etc');\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_compressed_texture_etc1: any;\n    protected WEBGL_compressed_texture_etc1_supported: boolean;\n    get supportsCompressedTextureETC1(): boolean {\n        return this.WEBGL_compressed_texture_etc1_supported;\n    }\n    get compressedTextureETC1(): any {\n        return this.extension(this.WEBGL_compressed_texture_etc1, 'WEBGL_compressed_texture_etc1');\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_compressed_texture_pvrtc: any;\n    protected WEBGL_compressed_texture_pvrtc_supported: boolean;\n    get supportsCompressedTexturePVRTC(): boolean {\n        return this.WEBGL_compressed_texture_pvrtc_supported;\n    }\n    get compressedTexturePVRTC(): any {\n        return this.extension(this.WEBGL_compressed_texture_pvrtc, 'WEBGL_compressed_texture_pvrtc');\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_compressed_texture_s3tc: any;\n    protected WEBGL_compressed_texture_s3tc_supported: boolean;\n    get supportsCompressedTextureS3TC(): boolean {\n        return this.WEBGL_compressed_texture_s3tc_supported;\n    }\n    get compressedTextureS3TC(): any {\n        return this.extension(this.WEBGL_compressed_texture_s3tc, 'WEBGL_compressed_texture_s3tc');\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_compressed_texture_s3tc_srgb: any;\n    protected WEBGL_compressed_texture_s3tc_srgb_supported: boolean;\n    get supportsCompressedTextureS3TCSRGB(): boolean {\n        return this.WEBGL_compressed_texture_s3tc_srgb_supported;\n    }\n    get compressedTextureS3TCSRGB(): any {\n        return this.extension(this.WEBGL_compressed_texture_s3tc_srgb, 'WEBGL_compressed_texture_s3tc_srgb');\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_debug_renderer_info: any;\n    protected WEBGL_debug_renderer_info_supported: boolean;\n    get supportsDebugRendererInfo(): boolean {\n        return this.WEBGL_debug_renderer_info_supported;\n    }\n    get debugRendererInfo(): any {\n        return this.extension(this.WEBGL_debug_renderer_info, 'WEBGL_debug_renderer_info');\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_debug_shaders: any;\n    protected WEBGL_debug_shaders_supported: boolean;\n    get supportsDebugShaders(): boolean {\n        return this.WEBGL_debug_shaders_supported;\n    }\n    get debugShaders(): any {\n        return this.extension(this.WEBGL_debug_shaders, 'WEBGL_debug_shaders');\n    }\n\n    // WebGL1, WebGL2-default\n    protected WEBGL_depth_texture: any;\n    protected WEBGL_depth_texture_supported: boolean;\n    get supportsDepthTexture(): boolean {\n        return this.WEBGL_depth_texture_supported;\n    }\n    get depthTexture(): any {\n        return this.extension(this.WEBGL_depth_texture, 'WEBGL_depth_texture');\n    }\n\n    // WebGL1, WebGL2-default\n    protected WEBGL_draw_buffers: any;\n    protected WEBGL_draw_buffers_supported: boolean;\n    get supportsDrawBuffers(): boolean {\n        return this.WEBGL_draw_buffers_supported;\n    }\n    get drawBuffers(): any {\n        return this.extension(this.WEBGL_draw_buffers, 'WEBGL_draw_buffers');\n    }\n\n    // WebGL1, WebGL2\n    protected WEBGL_lose_context: any;\n    protected WEBGL_lose_context_supported: boolean;\n    get supportsLoseContext(): boolean {\n        return this.WEBGL_lose_context_supported;\n    }\n    get loseContext(): any {\n        return this.extension(this.WEBGL_lose_context, 'WEBGL_lose_context');\n    }\n\n    // FUNCTION QUERIES\n\n    /**\n     * True if WebGL2 blitFramebuffer is supported, false otherwise. This is experimental technology.\n     */\n    get supportsBlitFramebuffer(): boolean {\n        return this._context.blitFramebuffer !== undefined;\n    }\n\n    /**\n     * True if WebGL2 readBuffer is supported, false otherwise. This is experimental technology.\n     */\n    get supportsReadBuffer(): boolean {\n        return this._context.readBuffer !== undefined;\n    }\n\n    // PARAMETER QUERIES\n\n    /**\n     * Provides the context's extension hash. The hash can be used for context masquerade.\n     */\n    hash(): string {\n        return ExtensionsHash.encode(this._backend as Context.BackendType, this._extensions);\n    }\n\n    /**\n     * Queries various parameters (depending on the type of context and support of extensions) and returns them as\n     * formatted string.\n     * @returns - Array of 2-tuple containing (1) the queried enum as string and (2) the resulting parameter value.\n     */\n    about(): Array<[string, number | string]> {\n\n        if (this._backend === Context.BackendType.Invalid) {\n            return new Array<[string, number | string]>();\n        }\n\n        const pNamesAndValues = new Array<[string, number | string]>();\n\n        pNamesAndValues.push(['RENDERER',\n            this._context.getParameter(this._context.RENDERER)]);\n        pNamesAndValues.push(['VENDOR',\n            this._context.getParameter(this._context.VENDOR)]);\n        pNamesAndValues.push(['VERSION',\n            this._context.getParameter(this._context.VERSION)]);\n        pNamesAndValues.push(['SHADING_LANGUAGE_VERSION',\n            this._context.getParameter(this._context.SHADING_LANGUAGE_VERSION)]);\n\n        pNamesAndValues.push(['BACKEND (GLOPERATE)', this.backend as Context.BackendType]);\n        pNamesAndValues.push(['CONTEXT_HASH (GLOPERATE)', this.hash()]);\n\n        pNamesAndValues.push(['MAX_COMBINED_TEXTURE_IMAGE_UNITS',\n            this._context.getParameter(this._context.MAX_COMBINED_TEXTURE_IMAGE_UNITS)]);\n        pNamesAndValues.push(['MAX_CUBE_MAP_TEXTURE_SIZE',\n            this._context.getParameter(this._context.MAX_CUBE_MAP_TEXTURE_SIZE)]);\n        pNamesAndValues.push(['MAX_FRAGMENT_UNIFORM_VECTORS',\n            this._context.getParameter(this._context.MAX_FRAGMENT_UNIFORM_VECTORS)]);\n        pNamesAndValues.push(['MAX_RENDERBUFFER_SIZE',\n            this._context.getParameter(this._context.MAX_RENDERBUFFER_SIZE)]);\n        pNamesAndValues.push(['MAX_TEXTURE_IMAGE_UNITS',\n            this._context.getParameter(this._context.MAX_TEXTURE_IMAGE_UNITS)]);\n        pNamesAndValues.push(['MAX_TEXTURE_SIZE',\n            this._context.getParameter(this._context.MAX_TEXTURE_SIZE)]);\n        pNamesAndValues.push(['MAX_VARYING_VECTORS',\n            this._context.getParameter(this._context.MAX_VARYING_VECTORS)]);\n        pNamesAndValues.push(['MAX_VERTEX_ATTRIBS',\n            this._context.getParameter(this._context.MAX_VERTEX_ATTRIBS)]);\n        pNamesAndValues.push(['MAX_VERTEX_TEXTURE_IMAGE_UNITS',\n            this._context.getParameter(this._context.MAX_VERTEX_TEXTURE_IMAGE_UNITS)]);\n        pNamesAndValues.push(['MAX_VERTEX_UNIFORM_VECTORS',\n            this._context.getParameter(this._context.MAX_VERTEX_UNIFORM_VECTORS)]);\n\n        const MAX_VIEWPORT_DIMS = this._context.getParameter(this._context.MAX_VIEWPORT_DIMS);\n        pNamesAndValues.push(['MAX_VIEWPORT_DIMS (WIDTH)', MAX_VIEWPORT_DIMS[0]]);\n        pNamesAndValues.push(['MAX_VIEWPORT_DIMS (HEIGHT)', MAX_VIEWPORT_DIMS[1]]);\n\n\n        if (this.isWebGL2) {\n            pNamesAndValues.push(['MAX_3D_TEXTURE_SIZE',\n                this._context.getParameter(this._context.MAX_3D_TEXTURE_SIZE)]);\n            pNamesAndValues.push(['MAX_ARRAY_TEXTURE_LAYERS',\n                this._context.getParameter(this._context.MAX_ARRAY_TEXTURE_LAYERS)]);\n            pNamesAndValues.push(['MAX_CLIENT_WAIT_TIMEOUT_WEBGL',\n                this._context.getParameter(this._context.MAX_CLIENT_WAIT_TIMEOUT_WEBGL)]);\n            pNamesAndValues.push(['MAX_COLOR_ATTACHMENTS',\n                this._context.getParameter(this._context.MAX_COLOR_ATTACHMENTS)]);\n            pNamesAndValues.push(['MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS',\n                this._context.getParameter(this._context.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)]);\n            pNamesAndValues.push(['MAX_COMBINED_UNIFORM_BLOCKS',\n                this._context.getParameter(this._context.MAX_COMBINED_UNIFORM_BLOCKS)]);\n            pNamesAndValues.push(['MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS',\n                this._context.getParameter(this._context.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)]);\n            pNamesAndValues.push(['MAX_DRAW_BUFFERS',\n                this._context.getParameter(this._context.MAX_DRAW_BUFFERS)]);\n            pNamesAndValues.push(['MAX_ELEMENT_INDEX',\n                this._context.getParameter(this._context.MAX_ELEMENT_INDEX)]);\n            pNamesAndValues.push(['MAX_ELEMENTS_INDICES',\n                this._context.getParameter(this._context.MAX_ELEMENTS_INDICES)]);\n            pNamesAndValues.push(['MAX_ELEMENTS_VERTICES',\n                this._context.getParameter(this._context.MAX_ELEMENTS_VERTICES)]);\n            pNamesAndValues.push(['MAX_FRAGMENT_INPUT_COMPONENTS',\n                this._context.getParameter(this._context.MAX_FRAGMENT_INPUT_COMPONENTS)]);\n            pNamesAndValues.push(['MAX_FRAGMENT_UNIFORM_BLOCKS',\n                this._context.getParameter(this._context.MAX_FRAGMENT_UNIFORM_BLOCKS)]);\n            pNamesAndValues.push(['MAX_FRAGMENT_UNIFORM_COMPONENTS',\n                this._context.getParameter(this._context.MAX_FRAGMENT_UNIFORM_COMPONENTS)]);\n            pNamesAndValues.push(['MAX_PROGRAM_TEXEL_OFFSET',\n                this._context.getParameter(this._context.MAX_PROGRAM_TEXEL_OFFSET)]);\n            pNamesAndValues.push(['MAX_SAMPLES',\n                this._context.getParameter(this._context.MAX_SAMPLES)]);\n            pNamesAndValues.push(['MAX_SERVER_WAIT_TIMEOUT',\n                this._context.getParameter(this._context.MAX_SERVER_WAIT_TIMEOUT)]);\n            pNamesAndValues.push(['MAX_TEXTURE_LOD_BIAS',\n                this._context.getParameter(this._context.MAX_TEXTURE_LOD_BIAS)]);\n            pNamesAndValues.push(['MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS',\n                this._context.getParameter(this._context.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS)]);\n            pNamesAndValues.push(['MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS',\n                this._context.getParameter(this._context.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)]);\n            pNamesAndValues.push(['MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS',\n                this._context.getParameter(this._context.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS)]);\n            pNamesAndValues.push(['MAX_UNIFORM_BLOCK_SIZE',\n                this._context.getParameter(this._context.MAX_UNIFORM_BLOCK_SIZE)]);\n            pNamesAndValues.push(['MAX_UNIFORM_BUFFER_BINDINGS',\n                this._context.getParameter(this._context.MAX_UNIFORM_BUFFER_BINDINGS)]);\n            pNamesAndValues.push(['MAX_VARYING_COMPONENTS',\n                this._context.getParameter(this._context.MAX_VARYING_COMPONENTS)]);\n            pNamesAndValues.push(['MAX_VERTEX_OUTPUT_COMPONENTS',\n                this._context.getParameter(this._context.MAX_VERTEX_OUTPUT_COMPONENTS)]);\n            pNamesAndValues.push(['MAX_VERTEX_UNIFORM_BLOCKS',\n                this._context.getParameter(this._context.MAX_VERTEX_UNIFORM_BLOCKS)]);\n            pNamesAndValues.push(['MAX_VERTEX_UNIFORM_COMPONENTS',\n                this._context.getParameter(this._context.MAX_VERTEX_UNIFORM_COMPONENTS)]);\n            pNamesAndValues.push(['MIN_PROGRAM_TEXEL_OFFSET',\n                this._context.getParameter(this._context.MIN_PROGRAM_TEXEL_OFFSET)]);\n        }\n\n        if (this.isWebGL1) {\n            for (const extension of WEBGL1_EXTENSIONS) {\n                pNamesAndValues.push([extension, this.supports(extension) ? 'ok' : '']);\n            }\n        } else if (this.isWebGL2) {\n            for (const extension of WEBGL2_DEFAULT_EXTENSIONS) {\n                pNamesAndValues.push([`${extension} (default)`, 'ok']);\n            }\n            for (const extension of WEBGL2_EXTENSIONS) {\n                pNamesAndValues.push([extension, this.supports(extension) ? 'ok' : '']);\n            }\n        }\n\n        return pNamesAndValues;\n    }\n\n    /**\n     * Logs a well formated list of all queried about params (names and associated values).\n     * @param verbosity - Log verbosity that is to be used for logging.\n     */\n    logAbout(verbosity: LogLevel = LogLevel.Dev) {\n        const about = this.about();\n\n        let maxPNameLength = 0;\n        for (const tuple of about) {\n            maxPNameLength = Math.max(tuple[0].length, maxPNameLength);\n        }\n\n        let index = 0;\n        let message = `about\\n\\n`;\n\n        const extensionSeparator = this.isWebGL2 ? 46 + WEBGL2_DEFAULT_EXTENSIONS.length : -1;\n        for (const tuple of about) {\n            /* Provide some semantic grouping: Core, Limits, Extensions, ... */\n            switch (index) {\n                case 4:  // End of Core Context Info\n                case 6:  // End of Backend and Context Hash\n                case 18: // End of WebGL 1 Limits\n                case 46: // End of WebGL 2 Limit, start of extensions\n                case extensionSeparator: // End of default Extensions (in case of WebGL2) or -1\n                    message += `\\n`;\n                    break;\n                default:\n                    break;\n            }\n            message += `  ${tuple[0]} ${'-'.repeat(maxPNameLength - tuple[0].length)}-- ${tuple[1]}\\n`;\n            ++index;\n        }\n        message += `\\n`;\n\n        log(verbosity, message);\n    }\n\n}\n\nexport namespace Context {\n    /**\n     * Supported OpenGL backend types.\n     */\n    export enum BackendType {\n        Invalid = 'invalid',\n        WebGL1 = 'webgl1',\n        WebGL2 = 'webgl2',\n    }\n\n    /**\n     * The list of valid backend identifiers that can be requested and matched to backend types.\n     * List adopted from https://developer.mozilla.org/de/docs/Web/API/HTMLCanvasElement/getContext.\n     */\n    export enum BackendRequestType {\n        auto = 'auto',\n        webgl = 'webgl',\n        experimental = 'experimental-webgl',\n        webgl1 = 'webgl1',\n        experimental1 = 'experimental-webgl1',\n        webgl2 = 'webgl2',\n        experimental2 = 'experimental-webgl2',\n    }\n\n}\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, propertyPath, name, argument) {\n  if (propertyPath) {\n    this.property = propertyPath;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    if (schema.id) {\n      this.schema = schema.id;\n    } else {\n      this.schema = schema;\n    }\n  }\n  if (instance) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.propertyPath);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.propertyPath, detail.name, detail.argument);\n  }\n\n  if (this.throwError) {\n    throw err;\n  }\n  this.errors.push(err);\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    Array.prototype.push.apply(this.errors, res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  { constructor: {value: SchemaError, enumerable: false}\n  , name: {value: 'SchemaError', enumerable: false}\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, propertyPath, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  this.propertyPath = propertyPath;\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var propertyPath = (propertyName===undefined) ? this.propertyPath : this.propertyPath+makeSuffix(propertyName);\n  var base = uri.resolve(this.base, schema.id||'');\n  var ctx = new SchemaContext(schema, this.options, propertyPath, base, Object.create(this.schemas));\n  if(schema.id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n}\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n  'uri': /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\\s]*$/,\n\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n  'style': /\\s*(.+?):\\s*([^;]+);?/g,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a instanceof Array) {\n    if (!(b instanceof Array)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e)\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e)\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key])\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n};\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n\t// ~ must be encoded explicitly because hacks\n\t// the slash is encoded by encodeURIComponent\n\treturn a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\n","\nimport { assert } from './auxiliaries';\nimport { byteSizeOfFormat } from './formatbytesizes';\nimport { GLsizei2 } from './tuples';\n\nimport { Bindable } from './bindable';\nimport { Initializable } from './initializable';\nimport { AbstractObject } from './object';\n\n\n/**\n * WebGL Renderbuffer implementation providing size accessors and requiring for bind, unbind, resize, validity, and\n * initialization implementations.\n * ```\n * @todo add usage example\n * ```\n */\nexport class Renderbuffer extends AbstractObject<WebGLRenderbuffer> implements Bindable {\n\n    /**\n     * Default renderbuffer, e.g., used for unbind.\n     */\n    static readonly DEFAULT_RENDER_BUFFER = undefined;\n\n    /** @see {@link width} */\n    protected _width: GLsizei;\n\n    /** @see {@link height} */\n    protected _height: GLsizei;\n\n    /**\n     * Cached internal format of the renderbuffer for efficient resize.\n     */\n    protected _internalFormat: GLenum | undefined = undefined;\n\n    /**\n     * Create a renderbuffer object on the GPU.\n     * @param context - Stored for local access to the WebGL API.\n     * @param size - Initial size of the renderbuffer.\n     * @param internalFormat - Internal format of the renderbuffer data.\n     */\n    protected create(width: GLsizei, height: GLsizei, internalFormat: GLenum): WebGLRenderbuffer | undefined {\n        assert(width > 0 && height > 0, `renderbuffer object requires valid width and height greater than zero`);\n        const gl = this.context.gl;\n\n        this._object = gl.createRenderbuffer();\n\n        this._width = width;\n        this._height = height;\n        this._internalFormat = internalFormat;\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this._object);\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\n        /* note that gl.isRenderbuffer requires the renderbuffer to be bound */\n        this._valid = gl.isRenderbuffer(this._object);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, Renderbuffer.DEFAULT_RENDER_BUFFER);\n\n        const bytes: GLsizei = width * height * byteSizeOfFormat(this.context, internalFormat as GLenum);\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\n\n        return this._object;\n    }\n\n    /**\n     * Delete the renderbuffer object on the GPU. This should have the reverse effect of `create`.\n     */\n    protected delete(): void {\n        assert(this._object instanceof WebGLRenderbuffer, `expected WebGLRenderbuffer object`);\n        this.context.gl.deleteRenderbuffer(this._object);\n\n        this._object = undefined;\n        this._valid = false;\n\n        this._internalFormat = undefined;\n\n        this._width = 0;\n        this._height = 0;\n    }\n\n    /**\n     * Bind the renderbuffer object.\n     */\n    @Initializable.assert_initialized()\n    bind(): void {\n        this.context.gl.bindRenderbuffer(this.context.gl.RENDERBUFFER, this._object);\n    }\n\n    /**\n     * Unbind the renderbuffer object.\n     */\n    @Initializable.assert_initialized()\n    unbind(): void {\n        this.context.gl.bindRenderbuffer(this.context.gl.RENDERBUFFER, Renderbuffer.DEFAULT_RENDER_BUFFER);\n    }\n\n    /**\n     * This should be used to implement efficient resize for all attachments.\n     * @param width - Targeted/new width of the renderbuffer in px.\n     * @param height - Targeted/new height of the renderbuffer in px.\n     * @param bind - Allows to skip binding the renderbuffer (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the renderbuffer (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    resize(width: GLsizei, height: GLsizei, bind: boolean = false, unbind: boolean = false): void {\n        if (width === this._width && height === this._height) {\n            return;\n        }\n        this._width = width;\n        this._height = height;\n\n        const gl = this.context.gl;\n\n        if (bind) {\n            this.bind();\n        }\n        gl.renderbufferStorage(gl.RENDERBUFFER, this._internalFormat, width, height);\n        if (unbind) {\n            this.unbind();\n        }\n\n        // update allocated bytes\n        const bytes: GLsizei = width * height * byteSizeOfFormat(this.context, this._internalFormat as GLenum);\n        this.context.allocationRegister.reallocate(this._identifier, bytes);\n    }\n\n    /**\n     * Returns the number of bytes this object approximately allocates on the GPU.\n     */\n    get bytes(): GLsizei {\n        this.assertInitialized();\n        return this.context.allocationRegister.allocated(this._identifier);\n    }\n\n    /**\n     * Readonly access to the internal format of the renderbuffer object. This can only be changed by re-initialization.\n     */\n    get internalFormat(): GLenum {\n        this.assertInitialized();\n        return this._internalFormat as GLenum;\n    }\n\n    /**\n     * Convenience accessor: returns the width of the texture object.\n     */\n    get width(): GLsizei {\n        this.assertInitialized();\n        return this._width;\n    }\n\n    /**\n     * Convenience accessor: returns the height of the texture object.\n     */\n    get height(): GLsizei {\n        this.assertInitialized();\n        return this._height;\n    }\n\n    /**\n     * Convenience getter for the 2-tuple containing the render buffer's width and height.\n     * @see {@link width}\n     * @see {@link heigth}\n     */\n    get size(): GLsizei2 {\n        return [this.width, this.height];\n    }\n\n}\n","\nimport { vec2 } from 'gl-matrix';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\n\nimport { assert } from './auxiliaries';\n\nimport { MouseEventProvider } from './mouseeventprovider';\nimport { Invalidate } from './renderer';\n\n/**\n * Callback for handling mouse events, given the latest mouse events (since last update) as well as the previous.\n */\nexport interface MouseEventHandler { (latests: Array<MouseEvent>, previous: Array<MouseEvent>): void; }\n\n/**\n * ... Provider and event handler are explicitly separated in order to reduce the number of observables (reuse of event\n * provider for multiple handler).\n */\nexport class EventHandler {\n\n    /**\n     * The event handler's invalidation callback. This should usually be setup by the owning renderer and invoke the\n     * same callback the renderer has been given by the canvas. This invalidation is required, when continuous\n     * rendering is not present, events might cause need for new rendering requests.\n     */\n    protected _invalidate: Invalidate | undefined;\n\n    protected _subscriptions = new Array<Subscription>();\n\n\n    /**\n     * Assigned key event provider. This is usually created and owned by the canvas.\n     */\n    // protected _keyEventProvider: KeyEventProvider | undefined;\n\n    /**\n     * Assigned mouse event provider. This is usually created and owned by the canvas.\n     */\n    protected _mouseEventProvider: MouseEventProvider | undefined;\n\n    protected _latestMouseEventsByType =\n        new Map<MouseEventProvider.Type, Array<MouseEvent>>();\n    protected _previousMouseEventsByType =\n        new Map<MouseEventProvider.Type, Array<MouseEvent>>();\n    protected _mouseEventHandlerByType =\n        new Map<MouseEventProvider.Type, Array<MouseEventHandler>>();\n\n    /**\n     * Assigned touch event provider. This is usually created and owned by the canvas.\n     */\n    // protected _touchEventProvider: TouchEventProvider | undefined;\n\n\n    constructor(invalidate: Invalidate | undefined, mouseEventProvider: MouseEventProvider | undefined,\n        /* keyEventProvider: KeyEventProvider | undefined, touchEventProvider: TouchEventProvider | undefined */) {\n        this._invalidate = invalidate;\n        this._mouseEventProvider = mouseEventProvider;\n    }\n\n\n    /** @callback Invalidate\n     * A callback intended to be invoked whenever the specialized event handler itself is invalid. By default only\n     * optional updates (renderer decides whether or not to continue redraw) are triggered.\n     */\n    protected invalidate(force: boolean = false) {\n        if (this._invalidate) {\n            this._invalidate(force);\n        }\n    }\n\n\n    /**\n     * Utility for registering an additional mouse event handler for updates on mouse events of the given type. The\n     * handler is to be called on update iff at least a single mouse event of the given type has occurred since last\n     * update.\n     * @param type - Mouse event type the handler is to be associated with.\n     * @param handler - Handler to be called on update.\n     */\n    protected pushMouseEventHandler(type: MouseEventProvider.Type, handler: MouseEventHandler) {\n\n        if (!this._mouseEventHandlerByType.has(type)) {\n            this._mouseEventHandlerByType.set(type, new Array<MouseEventHandler>());\n\n            this._previousMouseEventsByType.set(type, new Array<MouseEvent>());\n            const latest = new Array<MouseEvent>();\n            this._latestMouseEventsByType.set(type, latest);\n\n            assert(this._mouseEventProvider !== undefined, `expected valid mouse event provider`);\n            const observable = (this._mouseEventProvider as MouseEventProvider).observable(type);\n\n            switch (type) {\n                case MouseEventProvider.Type.Wheel:\n                    this._subscriptions.push((observable as Observable<WheelEvent>).subscribe(\n                        (event) => { latest.push(event); this.invalidate(); }));\n                    break;\n                default:\n                    this._subscriptions.push((observable as Observable<MouseEvent>).subscribe(\n                        (event) => { latest.push(event); this.invalidate(); }));\n                    break;\n            }\n        }\n        (this._mouseEventHandlerByType.get(type) as Array<MouseEventHandler>).push(handler);\n    }\n\n    protected invokeMouseEventHandler(type: MouseEventProvider.Type) {\n        const handlers = this._mouseEventHandlerByType.get(type);\n        if (handlers === undefined || handlers.length === 0) {\n            return;\n        }\n        const latest = this._latestMouseEventsByType.get(type) as Array<MouseEvent>;\n        if (latest.length === 0) {\n            return;\n        }\n        const previous = this._previousMouseEventsByType.get(type) as Array<MouseEvent>;\n        handlers.forEach((handler) => handler(latest, previous));\n\n        Object.assign(previous, latest);\n        latest.length = 0;\n    }\n\n\n    /**\n     * Disposes all registered handlers of all event types.\n     */\n    dispose() {\n        this._latestMouseEventsByType.forEach((value) => value.length = 0);\n        this._previousMouseEventsByType.forEach((value) => value.length = 0);\n\n        for (const subscription of this._subscriptions) {\n            subscription.unsubscribe();\n        }\n    }\n\n    /**\n     * Triggers (by means of a helper function) invocation of all registered handler of all event types.\n     */\n    update() {\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Click);\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Enter);\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Leave);\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Down);\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Up);\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Move);\n        this.invokeMouseEventHandler(MouseEventProvider.Type.Wheel);\n    }\n\n\n    /**\n     * Normalize mouse and touch event coordinates for various browsers.\n     * @param event - Mouse, wheel, or touch event.\n     * @param normalize - Whether or not to compute normalized coordinates (offsets).\n     * @returns - Array of normalized x and y offsets (in case of multiple touches).\n     */\n    offsets(event: MouseEvent | WheelEvent | TouchEvent, normalize: boolean = true): Array<vec2> {\n        const offsets = new Array<vec2>();\n\n        if (event instanceof MouseEvent) {\n            const e = event as MouseEvent;\n            offsets.push(vec2.fromValues(e.clientX, e.clientY));\n\n        } else if (event instanceof WheelEvent) {\n            const e = event as WheelEvent;\n            offsets.push(vec2.fromValues(e.clientX, e.clientY));\n\n        } else if (event instanceof TouchEvent) {\n            const e = event as TouchEvent;\n            /* tslint:disable-next-line:prefer-for-of */\n            for (let i = 0; i < e.touches.length; ++i) {\n                const touch = e.touches[i];\n                offsets.push(vec2.fromValues(touch.clientX, touch.clientY));\n            }\n        }\n\n        const target = event.target || event.currentTarget || event.srcElement;\n        const rect = (target as HTMLElement).getBoundingClientRect();\n\n        for (const offset of offsets) {\n            offset[0] = Math.floor(offset[0] - rect.left);\n            offset[1] = Math.floor(offset[1] - rect.top);\n            if (normalize) {\n                vec2.scale(offset, offset, window.devicePixelRatio);\n            }\n        }\n        return offsets;\n    }\n\n\n    /**\n     * Register a click event handler that is to be called on update iff at least a single click event has\n     * occurred since last update.\n     * @param handler - Handler to be called on update.\n     */\n    pushClickHandler(handler: MouseEventHandler) {\n        this.pushMouseEventHandler(MouseEventProvider.Type.Click, handler);\n    }\n\n    /**\n     * Register an mouse enter event handler that is to be called on update iff at least a single mouse enter event has\n     * occurred since last update.\n     * @param handler - Handler to be called on update.\n     */\n    pushMouseEnterHandler(handler: MouseEventHandler) {\n        this.pushMouseEventHandler(MouseEventProvider.Type.Enter, handler);\n    }\n\n    /**\n     * Register an mouse leave event handler that is to be called on update iff at least a single mouse leave event has\n     * occurred since last update.\n     * @param handler - Handler to be called on update.\n     */\n    pushMouseLeaveHandler(handler: MouseEventHandler) {\n        this.pushMouseEventHandler(MouseEventProvider.Type.Leave, handler);\n    }\n\n    /**\n     * Register an mouse down event handler that is to be called on update iff at least a single mouse down event has\n     * occurred since last update.\n     * @param handler - Handler to be called on update.\n     */\n    pushMouseDownHandler(handler: MouseEventHandler) {\n        this.pushMouseEventHandler(MouseEventProvider.Type.Down, handler);\n    }\n\n    /**\n     * Register an mouse up event handler that is to be called on update iff at least a single mouse up event has\n     * occurred since last update.\n     * @param handler - Handler to be called on update.\n     */\n    pushMouseUpHandler(handler: MouseEventHandler) {\n        this.pushMouseEventHandler(MouseEventProvider.Type.Up, handler);\n    }\n\n    /**\n     * Register an mouse move event handler that is to be called on update iff at least a single mouse move event has\n     * occurred since last update.\n     * @param handler - Handler to be called on update.\n     */\n    pushMouseMoveHandler(handler: MouseEventHandler) {\n        this.pushMouseEventHandler(MouseEventProvider.Type.Move, handler);\n    }\n\n    /**\n     * Register an mouse wheel event handler that is to be called on update iff at least a single mouse wheel event has\n     * occurred since last update.\n     * @param handler - Handler to be called on update.\n     */\n    pushMouseWheelHandler(handler: MouseEventHandler) {\n        this.pushMouseEventHandler(MouseEventProvider.Type.Wheel, handler);\n    }\n\n    requestPointerLock(): void {\n        if (this._mouseEventProvider) {\n            this._mouseEventProvider.pointerLock = true;\n        }\n    }\n\n    exitPointerLock(): void {\n        if (this._mouseEventProvider) {\n            this._mouseEventProvider.pointerLock = false;\n        }\n    }\n\n}\n","\nimport { assert, logIf, LogLevel } from './auxiliaries';\n\nimport { GLsizei3 } from './tuples';\n\n\n/* tslint:disable:max-classes-per-file */\n\nexport interface KernelJSON {\n    kernel: any;\n    size: {\n        width: number,\n        height: number,\n        depth: number,\n    };\n}\n\n\n/**\n * Kernel class is based on the idea of glkernel {@link https://github.com/cginternals/glkernel} and is the basis for\n * various auxiliary kernels that are mainly intended for but not limited to GPU use. A kernel stores samples in a\n * three-dimensional structure. Each sample can have up to four components (vec4) and is strongly typed, e.g.,\n * {@link KernelF32}. The samples can be accessed and modified in various ways and easily passed to the GPU.\n */\nexport abstract class AbstractKernel<T extends Float32Array | Uint32Array | Int32Array | Uint8Array | Int8Array> {\n\n    protected _samples: T;\n\n    /** @see {@link width} */\n    protected _width: GLsizei;\n\n    /** @see {@link height} */\n    protected _height: GLsizei;\n\n    /** @see {@link depth} */\n    protected _depth: GLsizei;\n\n    /** @see {@link components} */\n    protected _components: 1 | 2 | 3 | 4;\n\n\n    constructor(components: 1 | 2 | 3 | 4, width: GLsizei, height: GLsizei = 1, depth: GLsizei = 1) {\n        this._components = components;\n        this._width = Math.max(1, width);\n        this._height = Math.max(1, height);\n        this._depth = Math.max(1, depth);\n\n        this.resize();\n    }\n\n    /**\n     * Should resize the samples array w.r.t. to the typed array buffer.\n     * The resulting array buffer may be empty.\n     */\n    protected abstract resize(): void;\n\n\n    /**\n     * Returns the n-tuple/n-component element at index within the cached kernel.\n     * @param xPosOrIndex - If x is greater than width, this is interpreted as overall kernel index (requires y and z\n     * positions to be undefined). Position is clamped to the range [0, width - 1].\n     * @param yPos - Position along the y-axis to access the kernel element at (clamped to range [0, height - 1]).\n     * @param zPos - Position along the z-axis to access the kernel element at (clamped to range [0, depth  - 1]).\n     * @returns - Tuple of all components of the element at the requested index/position.\n     */\n    get(xPosOrIndex: GLsizei, yPos?: GLsizei, zPos?: GLsizei): number[] {\n\n        let i: number;\n        if (yPos === undefined && zPos === undefined) {\n            i = this._components * xPosOrIndex;\n        } else {\n            i = this.index(xPosOrIndex, yPos, zPos ? zPos : 0);\n        }\n        logIf(i >= this.length, LogLevel.Dev, `index out of range [0, ${this.length}], given ${i}`);\n\n        /* tslint:disable-next-line:switch-default */\n        switch (this._components) {\n            case 1:\n                return [this._samples[i]];\n            case 2:\n                return [this._samples[i], this._samples[i + 1]];\n            case 3:\n                return [this._samples[i], this._samples[i + 1], this._samples[i + 2]];\n            case 4:\n                return [this._samples[i], this._samples[i + 1], this._samples[i + 2], this._samples[i + 3]];\n        }\n    }\n\n    /**\n     * Sets the n-tuple/n-component sample at index within the cached kernel.\n     * @param sample - Values to be set at specified index or position.\n     * @param xPosOrIndex - If x is greater than width, this is interpreted as overall kernel index (requires y and z\n     * positions to be undefined). Position is clamped to the range [0, width - 1].\n     * @param yPos - Position along the y-axis to access the kernel element at (clamped to range [0, height - 1]).\n     * @param zPos - Position along the z-axis to access the kernel element at (clamped to range [0, depth  - 1]).\n     */\n    set(sample: number[], xPosOrIndex: GLsizei, yPos?: GLsizei, zPos?: GLsizei): void {\n        logIf(sample.length !== this._components, LogLevel.Dev,\n            `number of components expected to be ${this._components}, given ${sample.length}`);\n\n        let i: number;\n        if (yPos === undefined && zPos === undefined) {\n            i = this._components * Math.min(this.elements, Math.max(0, xPosOrIndex));\n        } else {\n            i = this._components * this.index(xPosOrIndex, yPos, zPos ? zPos : 0);\n        }\n        logIf(i >= this.length, LogLevel.Dev, `index out of range [0, ${this.length}], given ${i}`);\n\n        /* tslint:disable-next-line:switch-default */\n        switch (this._components) {\n            /* falls through */\n            case 4:\n                this._samples[i + 3] = sample[3];\n            /* falls through */\n            case 3:\n                this._samples[i + 2] = sample[2];\n            /* falls through */\n            case 2:\n                this._samples[i + 1] = sample[1];\n            /* falls through */\n            case 1:\n                this._samples[i + 0] = sample[0];\n                break;\n        }\n    }\n\n    /**\n     * Inheritor is expected to implement this in order to copy and type-convert a flat array.\n     * @param samples - Array of all sample components in a flat sequence.\n     */\n    abstract fromArray(samples: Array<number>): void;\n\n    /**\n     * Fully reconfigures, i.e., resizes and copies samples, the kernel.\n     * @param json - JSON object either from file, or set manually. These kernels can be generated using, e.g.,\n     * glkernel {@link https://github.com/cginternals/glkernel}.\n     */\n    fromJSON(json: KernelJSON): void {\n\n        assert(json.size && json.size.width !== undefined && json.size.height !== undefined &&\n            json.size.depth !== undefined, `expected kernel width, height, and depth to be set, given '${json.size}'`);\n\n        const flatten = (array: Array<number>): Array<number> => array.reduce(\n            (a: any, b: any) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\n        this._width = Math.max(1, json.size.width);\n        this._height = Math.max(1, json.size.height);\n        this._depth = Math.max(1, json.size.depth);\n\n        const array = flatten(json.kernel);\n        this._components = Math.floor(array.length / this.elements) as 1 | 2 | 3 | 4;\n\n        this.resize();\n        this.fromArray(array);\n    }\n\n\n    /**\n     * Returns the index of an element at a specific position.\n     * @param xPos - Position along the x-axis (clamped to range [0, width  - 1]).\n     * @param yPos - Position along the y-axis (clamped to range [0, height - 1]).\n     * @param zPos - Position along the z-axis (clamped to range [0, depth  - 1]).\n     * @returns - The index of the element at the requested position.\n     */\n    index(xPos: GLsizei, yPos: GLsizei = 0, zPos: GLsizei = 0): GLsizei {\n        return this._width * (this._height * Math.min(this._depth, Math.max(0, zPos))\n            + Math.min(this._height, Math.max(0, yPos))) + Math.min(this._width, Math.max(0, xPos));\n    }\n\n    /**\n     * Returns the position of an element at a specific index.\n     * @param index - Index of the requested position (clamped to range [0, size]).\n     * @returns - The position of the element at the requested index as 3-tuple [x, y, z].\n     */\n    position(index: GLsizei): GLsizei3 {\n        let clamped = Math.min(this.elements, Math.max(0, index));\n        const zPos: GLsizei = Math.floor(clamped / (this._width * this._height));\n        clamped -= zPos * this._width * this._height;\n        const yPos: GLsizei = Math.floor(clamped / this._width);\n        clamped -= yPos * this._width;\n        const xPos: GLsizei = clamped;\n        return [xPos, yPos, zPos];\n    }\n\n\n    /**\n     * All elements/samples of the kernel as array buffer.\n     */\n    get samples(): T {\n        return this._samples;\n    }\n\n    /**\n     * Returns the number of samples, i.e., the number of elements times the number of components per element.\n     */\n    get length(): GLsizei {\n        return this._width * this._height * this._depth * this._components;\n    }\n\n    /**\n     * Returns the number of samples.\n     */\n    get elements(): GLsizei {\n        return this._width * this._height * this._depth;\n    }\n\n    /**\n     * Number of components per sample, e.g., 2 for 2-tuple samples, 3 for 3-tuple samples, etc.\n     */\n    get components(): GLsizei {\n        return this._components;\n    }\n\n    /**\n     * The width of the kernel (x-axis)\n     */\n    get width(): GLsizei {\n        return this._width;\n    }\n\n    /**\n     * The height of the kernel (y-axis)\n     */\n    get height(): GLsizei {\n        return this._height;\n    }\n\n    /**\n     * The depth of the kernel (z-axis)\n     */\n    get depth(): GLsizei {\n        return this._depth;\n    }\n\n    /**\n     * Distance between the indices of two adjacent elements along the x-axis in bytes.\n     */\n    get xStride(): GLsizei {\n        return this.bytesPerComponent * this._components;\n    }\n\n    /**\n     * Distance between the indices of two adjacent elements along the y-axis in bytes.\n     */\n    get yStride(): GLsizei {\n        return this.bytesPerComponent * this._components * this._width;\n    }\n\n    /**\n     * Distance between the indices of two adjacent elements along the z-axis in bytes.\n     */\n    get zStride(): GLsizei {\n        return this.bytesPerComponent * this._components * this._width * this._depth;\n    }\n\n    /**\n     * Length of all samples in bytes.\n     */\n    get bytesLength(): GLsizei {\n        return this.bytesPerComponent * this._components * this._width * this._height * this._depth;\n    }\n\n    /**\n     * Size of a sample's component in bytes.\n     */\n    abstract get bytesPerComponent(): GLsizei;\n\n}\n\n\nexport class KernelF32 extends AbstractKernel<Float32Array> {\n\n    protected resize(): void {\n        this._samples = new Float32Array(this.length);\n    }\n\n    /**\n     * Copies and converts samples to this kernels typed samples.\n     * @param samples - Flat array of all sample values.\n     */\n    fromArray(samples: Array<number>): void {\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\n        this._samples.set(new Float32Array(samples));\n    }\n\n    get bytesPerComponent(): GLsizei {\n        return 4;\n    }\n}\n\n\nexport class KernelUI32 extends AbstractKernel<Uint32Array> {\n\n    protected resize(): void {\n        this._samples = new Uint32Array(this.length);\n    }\n\n    /**\n     * Copies and converts samples to this kernels typed samples.\n     * @param samples - Flat array of all sample values.\n     */\n    fromArray(samples: Array<number>): void {\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\n        this._samples.set(new Uint32Array(samples));\n    }\n\n    get bytesPerComponent(): GLsizei {\n        return 4;\n    }\n}\n\nexport class KernelI32 extends AbstractKernel<Int32Array> {\n\n    protected resize(): void {\n        this._samples = new Int32Array(this.length);\n    }\n\n    /**\n     * Copies and converts samples to this kernels typed samples.\n     * @param samples - Flat array of all sample values.\n     */\n    fromArray(samples: Array<number>): void {\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\n        this._samples.set(new Int32Array(samples));\n    }\n\n    get bytesPerComponent(): GLsizei {\n        return 4;\n    }\n}\n\n\nexport class KernelUI8 extends AbstractKernel<Uint8Array> {\n\n    protected resize(): void {\n        this._samples = new Uint8Array(this.length);\n    }\n\n    /**\n     * Copies and converts samples to this kernels typed samples.\n     * @param samples - Flat array of all sample values.\n     */\n    fromArray(samples: Array<number>): void {\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\n        this._samples.set(new Uint8Array(samples));\n    }\n\n    get bytesPerComponent(): GLsizei {\n        return 4;\n    }\n}\n\nexport class KernelI8 extends AbstractKernel<Int8Array> {\n\n    protected resize(): void {\n        this._samples = new Int8Array(this.length);\n    }\n\n    /**\n     * Copies and converts samples to this kernels typed samples.\n     * @param samples - Flat array of all sample values.\n     */\n    fromArray(samples: Array<number>): void {\n        assert(samples.length === this.length, `expected samples length to match this kernel's length`);\n        this._samples.set(new Int8Array(samples));\n    }\n\n    get bytesPerComponent(): GLsizei {\n        return 4;\n    }\n}\n","\n\nimport { rand } from './auxiliaries';\nimport { KernelF32 } from './kernel';\n\n\n/**\n * Kernel providing random values in [-1,+1] for two components. The first sample is fixed at [0.0, 0.0] since the\n * kernel is intended for use of NDC offsets.\n *\n * Example for using this kernel:\n * ```\n * this._aaKernel.size = multiFrameNumber; // regenerates when multi-frame number changes\n * let ndcOffset = this._aaKernel.value(frameNumber);\n * ndcOffset[0] = ndcOffset[0] / this._intermediateFBO.width;\n * ndcOffset[1] = ndcOffset[1] / this._intermediateFBO.height;\n * ```\n */\nexport class RandomSquareKernel extends KernelF32 {\n\n    /**\n     * RandomSquareKernel is fixed to one-dimension (x-axis) and 2-components per sample.\n     * @param width - Width of the kernel along its x-axis.\n     */\n    constructor(width: GLsizei) {\n        super(2, width);\n        this.generate();\n    }\n\n    /**\n     * Generates for each sample random components in [-1.0, +1.0] except for the first.\n     */\n    protected generate(): void {\n        if (this.width > 0) {\n            this.set([0.0, 0.0], 0);\n        }\n        for (let i = 1; i < this.width; ++i) {\n            this.set([rand(-0.5, +0.5), rand(-0.5, +0.5)], i);\n        }\n    }\n\n    /**\n     * @override\n     * Seems to only work if the getter of this kernels width setter is redefined here.\n     */\n    get width(): GLsizei {\n        return this._width;\n    }\n\n    /**\n     * Changes the size of the kernel and triggers regeneration of all values.\n     */\n    set width(width: GLsizei) {\n        if (this._width === width) {\n            return;\n        }\n        this._width = width;\n        this.resize();\n        this.generate();\n    }\n\n}\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\n\nimport { m4, v2, v3 } from './gl-matrix-extensions';\n\nimport { CameraModifier } from './cameramodifier';\n\n\n/**\n * Math for camera rotation based on the turntable metaphor. The rotation computed by an initial (@see startRotate) and\n * subsequent (@see updateRotate) event points and can be applied to a camera via an explicit update (@see update).\n * In contrast to the trackball, this metaphor is usually less confusing for non-professionals.\n */\nexport class TurntableModifier extends CameraModifier {\n\n    protected static readonly DEFAULT_SENSITIVITY = 0.002;\n\n\n    /**\n     * Current rotation matrix.\n     */\n    protected _rotation: mat4 = m4();\n\n    protected _maxAzimuth: number | undefined = +Math.PI * 0.5 - 1e-4;\n    protected _minAzimuth: number | undefined = -Math.PI * 0.5 + 1e-4;\n\n    protected _xAxisScreenSpace = v3();\n    protected _azimuth: number;\n\n\n    /** @see {@link sensitivity} */\n    protected _sensitivity: number = TurntableModifier.DEFAULT_SENSITIVITY;\n\n\n    /**\n     * Initiate a new turntable rotation at a specific event position.\n     * @param point - Position of the current event to derive the magnitude for rotation from.\n     */\n    initiate(point: vec2): void {\n        Object.assign(this._reference, this._camera);\n\n        /* Retrieve initial event position. */\n        this._initialPoint = point;\n\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\n        vec3.normalize(centerToEye, centerToEye);\n\n        this._xAxisScreenSpace = vec3.cross(v3(), [0.0, 1.0, 0.0], centerToEye);\n        this._azimuth = Math.acos(vec3.dot(centerToEye, [0.0, 1.0, 0.0]));\n        this._azimuth = Math.PI * 0.5 - this._azimuth;\n    }\n\n    /**\n     * Update the turntable rotation w.r.t. a specific event position.\n     * @param point - Position of the current event to derive the magnitude for rotation from.\n     */\n    process(point: vec2): void {\n        /* Retrieve current event positions. */\n        this._currentPoint = point;\n\n        const magnitudes = vec2.subtract(v2(), this._initialPoint, this._currentPoint);\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\n\n        if (this._minAzimuth) {\n            magnitudes[1] = Math.min(this._azimuth - this._minAzimuth, magnitudes[1]);\n        }\n        if (this._maxAzimuth) {\n            magnitudes[1] = Math.max(this._azimuth - this._maxAzimuth, magnitudes[1]);\n        }\n\n        mat4.rotateY(this._rotation, m4(), magnitudes[0]);\n        mat4.rotate(this._rotation, this._rotation, magnitudes[1], this._xAxisScreenSpace);\n\n        this.update();\n    }\n\n    /**\n     * Actually applies the trackball rotation to the given camera.\n     */\n    update(): void {\n        if (this._camera === undefined) {\n            return;\n        }\n\n        /* Adjust for arbitrary camera center and rotate using quaternion based rotation. */\n        const T = mat4.fromTranslation(m4(), this._reference.center);\n        mat4.multiply(T, T, this._rotation);\n        mat4.translate(T, T, vec3.negate(v3(), this._reference.center));\n\n        const up = vec3.transformMat4(v3(), [0.0, 1.0, 0.0], this._rotation);\n        const eye = vec3.transformMat4(v3(), this._reference.eye, T);\n\n        this._camera.up = up;\n        this._camera.eye = eye;\n    }\n\n\n    /**\n     * Rotational sensitivity.\n     */\n    set sensitivity(sensitivity: number) {\n        this._sensitivity = sensitivity;\n    }\n\n    get sensitivity(): number {\n        return this._sensitivity;\n    }\n\n}\n","\nimport { mat4, quat, vec2, vec3 } from 'gl-matrix';\n\nimport { m4, v2, v3 } from './gl-matrix-extensions';\n\nimport { CameraModifier } from './cameramodifier';\n\n\n/**\n * Math for camera rotation based on the trackball metaphor. The rotation computed by an initial (@see startRotate) and\n * subsequent (@see updateRotate) event points and can be applied to a camera via an explicit update (@see update).\n */\nexport class TrackballModifier extends CameraModifier {\n\n    protected static readonly DEFAULT_SENSITIVITY = 0.002;\n\n\n    /**\n     * Current rotation matrix.\n     */\n    protected _rotation: mat4 = mat4.create();\n\n    /** @see {@link sensitivity} */\n    protected _sensitivity: number = TrackballModifier.DEFAULT_SENSITIVITY;\n\n\n    /**\n     * Initiate a new trackball rotation at a specific event position.\n     * @param point - Position of the current event to start the trackball rotation at.\n     */\n    initiate(point: vec2): void {\n        /* Retrieve initial event position. */\n        this._initialPoint = point;\n    }\n\n    /**\n     * Update the trackball rotation w.r.t. a specific event position.\n     * @param point - Position of the current event to continue/update the trackball rotation at.\n     */\n    process(point: vec2): void {\n        /* Retrieve current event positions. */\n        this._currentPoint = point;\n\n        const magnitudes = vec2.subtract(v2(), this._initialPoint, this._currentPoint);\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\n\n        /* Rotation uses difference between two events, thus, initial position is reset. */\n        vec2.copy(this._initialPoint, this._currentPoint);\n\n        /* Create rotation with respect to arbitrary camera center and up vector. */\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\n        vec3.normalize(centerToEye, centerToEye);\n        const up = vec3.normalize(v3(), this._reference.up);\n\n        /* Create vertical rotation axis. */\n        const ortho = vec3.cross(v3(), centerToEye, up);\n        vec3.scale(up, up, magnitudes[1]);\n        vec3.scale(ortho, ortho, magnitudes[0]);\n\n        /* Create overall rotation axis for quaternion based rotation. */\n        const axis = vec3.cross(v3(), vec3.add(v3(), up, ortho), centerToEye);\n        vec3.normalize(axis, axis);\n\n        /* Create quaternion and modify rotation transformation. */\n        const q = quat.setAxisAngle(quat.create(), axis, vec2.len(magnitudes));\n        mat4.multiply(this._rotation, this._rotation, mat4.fromQuat(m4(), q));\n\n        this.update();\n    }\n\n    /**\n     * Actually applies the trackball rotation to the given camera.\n     */\n    update(): void {\n        if (this._camera === undefined) {\n            return;\n        }\n\n        /* Adjust for arbitrary camera center and rotate using quaternion based rotation. */\n        const T = mat4.fromTranslation(m4(), this._reference.center);\n        mat4.multiply(T, T, this._rotation);\n        mat4.translate(T, T, vec3.negate(v3(), this._reference.center));\n\n        const up = vec3.transformMat4(v3(), [0.0, 1.0, 0.0], this._rotation);\n        const eye = vec3.transformMat4(v3(), this._reference.eye, T);\n\n        this._camera.up = up;\n        this._camera.eye = eye;\n    }\n\n\n    /**\n     * Rotational sensitivity.\n     */\n    set sensitivity(sensitivity: number) {\n        this._sensitivity = sensitivity;\n    }\n\n    get sensitivity(): number {\n        return this._sensitivity;\n    }\n\n}\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\n\nimport { m4, v3 } from './gl-matrix-extensions';\n\nimport { CameraModifier } from './cameramodifier';\n\n\n/**\n * Math for camera modification based on the first person metaphor.\n */\nexport class FirstPersonModifier extends CameraModifier {\n\n    protected static readonly DEFAULT_SENSITIVITY = 0.0008;\n\n\n    /**\n     * Current rotation matrix.\n     */\n    protected _rotation: mat4 = mat4.create();\n\n    /** @see {@link sensitivity} */\n    protected _sensitivity: number = FirstPersonModifier.DEFAULT_SENSITIVITY;\n\n\n    /**\n     * Initiate a new camera modification at a specific event position.\n     * @param point - Position of the current event to start the modification at.\n     */\n    initiate(point: vec2): void {\n        Object.assign(this._reference, this._camera);\n\n        /* Retrieve initial event position. */\n        this._initialPoint = point;\n    }\n\n    /**\n     * Update the ... .r.t. a specific event position.\n     * @param point - Position of the current event used to update the yaw and pitch.\n     */\n    process(point: vec2, movement?: vec2): void {\n        /* Current event position is always the same as initial, when pointer lock is active. */\n        this._currentPoint = point;\n\n        const magnitudes = vec2.create();\n        if (movement === undefined) {\n            vec2.subtract(magnitudes, this._initialPoint, this._currentPoint);\n        } else {\n            vec2.copy(magnitudes, movement);\n        }\n        vec2.scale(magnitudes, magnitudes, window.devicePixelRatio * this._sensitivity);\n\n        /* Difference between two subsequent events, thus, initial position is reset. */\n        vec2.copy(this._initialPoint, this._currentPoint);\n\n        const centerToEye = vec3.sub(v3(), this._reference.eye, this._reference.center);\n        vec3.normalize(centerToEye, centerToEye);\n        const strafe = vec3.cross(v3(), centerToEye, this._reference.up);\n\n        const yaw = mat4.fromRotation(m4(), -magnitudes[0], this._reference.up);\n        const pitch = mat4.fromRotation(m4(), magnitudes[1], strafe);\n\n        mat4.mul(this._rotation, pitch, yaw);\n\n        this.update();\n    }\n\n    /**\n     * Actually applies the trackball rotation to the given camera.\n     */\n    update(): void {\n        if (this._camera === undefined) {\n            return;\n        }\n\n        const T = mat4.fromTranslation(m4(), this._reference.eye);\n        mat4.multiply(T, T, this._rotation);\n        mat4.translate(T, T, vec3.negate(v3(), this._reference.eye));\n\n        // const up = vec3.transformMat4(v3(), [0.0, 1.0, 0.0], this._rotation);\n        // const eye = vec3.transformMat4(v3(), this._reference.eye, T);\n        const center = vec3.transformMat4(v3(), this._reference.center, T);\n\n\n        // this._camera.up = up;\n        // this._camera.eye = eye;\n        this._camera.center = center;\n\n        Object.assign(this._reference, this._camera);\n    }\n\n\n    /**\n     * Rotational sensitivity.\n     */\n    set sensitivity(sensitivity: number) {\n        this._sensitivity = sensitivity;\n    }\n\n    get sensitivity(): number {\n        return this._sensitivity;\n    }\n\n}\n","\nimport { mat4, vec3 } from 'gl-matrix';\nimport { m4 } from './gl-matrix-extensions';\n\nimport { DEG2RAD, log, LogLevel } from './auxiliaries';\nimport { GLsizei2 } from './tuples';\n\n\n/**\n * Virtual 3D camera specified by eye, center, up, fovy, near, far, and a viewport size. It provides access to cached\n * view, projection, and view projection matrices. Cached by means of whenever one of the attributes change, all\n * matrices are invalidated and recalculated only once and only when requested. Please note that eye denotes the\n * position in a virtual 3D scene and center denotes the position which is being looked at.\n */\nexport class Camera {\n\n    private static readonly DEFAULT_EYE: vec3 = vec3.fromValues(0.0, 0.0, 1.0);\n    private static readonly DEFAULT_CENTER: vec3 = vec3.fromValues(0.0, 0.0, 0.0);\n    private static readonly DEFAULT_UP: vec3 = vec3.fromValues(0.0, 1.0, 0.0);\n\n    private static readonly DEFAULT_FOVY = 45.0;\n\n    private static readonly DEFAULT_NEAR = 2.0;\n    private static readonly DEFAULT_FAR = 8.0;\n\n\n    /** @see {@link eye} */\n    protected _eye: vec3;\n\n    /** @see {@link center} */\n    protected _center: vec3;\n\n    /** @see {@link up} */\n    protected _up: vec3;\n\n    /** @see {@link fovy} */\n    protected _fovy = Camera.DEFAULT_FOVY;\n\n    /** @see {@link near} */\n    protected _near = Camera.DEFAULT_NEAR;\n\n    /** @see {@link far} */\n    protected _far = Camera.DEFAULT_FAR;\n\n    /** @see {@link viewport} */\n    protected _viewport: GLsizei2 = [1, 1];\n\n    /** @see {@link aspect} */\n    protected _aspect: GLfloat = 1.0;\n\n    /** @see {@link view} */\n    protected _view: mat4 | undefined;\n    /** @see {@link viewInverse} */\n    protected _viewInverse: mat4 | undefined | null;\n\n    /** @see {@link projection} */\n    protected _projection: mat4 | undefined;\n    /** @see {@link projectionInverse} */\n    protected _projectionInverse: mat4 | undefined | null;\n\n    /** @see {@link viewProjection} */\n    protected _viewProjection: mat4 | undefined;\n    /** @see {@link viewProjectionInverse} */\n    protected _viewProjectionInverse: mat4 | undefined | null;\n\n    /** @see {@link altered} */\n    protected _altered = false;\n\n\n    /**\n     * Computes a vertical field of view angle based on the display height and distance to eye. Since both parameters\n     * are highly dependent of the device, this function can only be used to derive a rough estimate for a reasonable\n     * field of view. Note that both parameters should be passed using the same unit, e.g., inch or centimeters.\n     * @param elementDisplayHeight - Height of an element on the display.\n     * @param eyeToDisplayDistance - Distance from the users eye to that element.\n     * @returns - Vertical field of view angle in radian.\n     */\n    static calculateFovY(elementDisplayHeight: number, eyeToDisplayDistance: number): number {\n        return Math.atan(elementDisplayHeight * 0.5 / eyeToDisplayDistance) * 2.0;\n    }\n\n    /**\n     * Constructor setting up the camera's eye, center and up vectors.\n     * @param eye - The viewpoint of the virtual camera\n     * @param center - The look-at point in the scene\n     * @param up - The up-vector of the virtual camera\n     */\n    constructor(eye?: vec3, center?: vec3, up?: vec3) {\n        this._eye = eye ? vec3.clone(eye) : vec3.clone(Camera.DEFAULT_EYE);\n        this._center = center ? vec3.clone(center) : vec3.clone(Camera.DEFAULT_CENTER);\n        this._up = up ? vec3.clone(up) : vec3.clone(Camera.DEFAULT_UP);\n    }\n\n\n    /**\n     * Invalidates derived matrices, i.e., view, projection, and view-projection. The view should be invalidated on\n     * eye, center, and up changes. The projection should be invalidated on fovy, viewport, near, and far changes.\n     * The view projection invalidates whenever either one or both view and projection are to be invalidated.\n     */\n    protected invalidate(invalidateView: boolean, invalidateProjection: boolean): void {\n        if (invalidateView) {\n            this._view = undefined;\n            this._viewInverse = undefined;\n        }\n        if (invalidateProjection) {\n            this._projection = undefined;\n            this._projectionInverse = undefined;\n        }\n        if (invalidateView || invalidateProjection) {\n            this._viewProjection = undefined;\n            this._viewProjectionInverse = undefined;\n        }\n        this._altered = true;\n    }\n\n    /**\n     * Position of the virtual camera in a virtual 3D scene, the point of view.\n     */\n    get eye(): vec3 {\n        return this._eye;\n    }\n\n    /**\n     * Sets the eye. Invalidates the view.\n     */\n    set eye(eye: vec3) {\n        if (vec3.equals(this._eye, eye)) {\n            return;\n        }\n        this._eye = vec3.clone(eye);\n        this.invalidate(true, false);\n    }\n\n    /**\n     * Look-at point into a virtual 3D scene.\n     */\n    get center(): vec3 {\n        return this._center;\n    }\n\n    /**\n     * Sets the center. Invalidates the view.\n     */\n    set center(center: vec3) {\n        if (vec3.equals(this._center, center)) {\n            return;\n        }\n        this._center = vec3.clone(center);\n        this.invalidate(true, false);\n    }\n\n    /**\n     * Up-vector of the virtual camera.\n     */\n    get up(): vec3 {\n        return this._up;\n    }\n\n    /**\n     * Sets the up vector. Invalidates the view.\n     */\n    set up(up: vec3) {\n        if (vec3.equals(this._up, up)) {\n            return;\n        }\n        this._up = vec3.clone(up);\n        this.invalidate(true, false);\n    }\n\n    /**\n     * Vertical field of view in degree.\n     */\n    get fovy(): GLfloat {\n        return this._fovy;\n    }\n\n    /**\n     * Sets the vertical field-of-view. Invalidates the projection.\n     */\n    set fovy(fovy: GLfloat) {\n        if (this._fovy === fovy) {\n            return;\n        }\n        this._fovy = fovy;\n        this.invalidate(false, true);\n    }\n\n    /**\n     * Distance of near-plane in view coordinates.\n     */\n    get near(): GLfloat {\n        return this._near;\n    }\n\n    /**\n     * Sets the distance to the near clipping plane. Invalidates the projection.\n     */\n    set near(near: GLfloat) {\n        if (this._near === near) {\n            return;\n        }\n        if (this._near >= this._far) {\n            log(LogLevel.Dev, `near expected to be smaller than far (${this._far}), given ${near}`);\n            return;\n        }\n        this._near = near;\n        this.invalidate(false, true);\n    }\n\n    /**\n     * Distance of far-plane in view coordinates.\n     */\n    get far(): GLfloat {\n        return this._far;\n    }\n\n    /**\n     * Sets the distance to the far clipping plane. Invalidates the projection.\n     */\n    set far(far: GLfloat) {\n        if (this._far === far) {\n            return;\n        }\n        if (this._near >= this._far) {\n            log(LogLevel.Dev, `far expected to be greater than near (${this._near}), given ${far}`);\n            return;\n        }\n        this._far = far;\n        this.invalidate(false, true);\n    }\n\n    /**\n     * Sets the viewport size. Invalidates the projection.\n     */\n    set viewport(size: GLsizei2) {\n        if (this._viewport[0] === size[0] && this._viewport[1] === size[1]) {\n            return;\n        }\n        this._viewport = size;\n        this.invalidate(false, true);\n    }\n\n    /**\n     * The size of the target viewport used to determine the aspect ratio for subsequent perspective matrix projection\n     * computation.\n     */\n    get viewport(): GLsizei2 {\n        return this._viewport;\n    }\n\n    /**\n     * Access to the viewport width.\n     */\n    get width(): GLsizei {\n        return this._viewport[0];\n    }\n\n    /**\n     * Access to the viewport height.\n     */\n    get height(): GLsizei {\n        return this._viewport[1];\n    }\n\n    /**\n     * Sets the aspect ratio (width over height). However, this is not derived from viewport to allow for\n     * differentiation between viewport size and scale.\n     */\n    set aspect(aspect: GLfloat) {\n        if (this._aspect === aspect) {\n            return;\n        }\n        this._aspect = aspect;\n    }\n\n    /**\n     * Computes the ratio of width over height (set explicitly for differentiation between viewport size and scale).\n     */\n    get aspect(): GLfloat {\n        return this._aspect;\n    }\n\n    /**\n     * Either returns the cached view matrix or derives the current one after invalidation and caches it.\n     */\n    get view(): mat4 {\n        if (this._view) { // return cached value\n            return this._view;\n        }\n        this._view = mat4.lookAt(m4(), this._eye, this._center, this._up);\n        return this._view;\n    }\n\n    /**\n     * Either returns the inverse cached view matrix or derives the current one after invalidation and caches it.\n     */\n    get viewInverse(): mat4 | null {\n        if (this._viewInverse !== undefined) { // return cached value\n            return this._viewInverse;\n        }\n        this._viewInverse = mat4.invert(m4(), this.view);\n        return this._viewInverse;\n    }\n\n    /**\n     * Either returns the cached projection matrix or derives the current one after invalidation and caches it.\n     */\n    get projection(): mat4 {\n        if (this._projection) { // return cached value\n            return this._projection;\n        }\n        this._projection = mat4.perspective(m4(), this.fovy * DEG2RAD, this.aspect, this.near, this.far);\n        return this._projection;\n    }\n\n    /**\n     * Either returns the cached inverse projection matrix or derives the current one after invalidation and caches it.\n     */\n    get projectionInverse(): mat4 | null {\n        if (this._projectionInverse !== undefined) { // return cached value\n            return this._projectionInverse;\n        }\n        this._projectionInverse = mat4.invert(m4(), this.projection);\n        return this._projectionInverse;\n    }\n\n    /**\n     * Returns the view projection matrix based on view and projection. This is also cached (since matrix\n     * multiplication is involved).\n     */\n    get viewProjection(): mat4 {\n        if (this._viewProjection) { // return cached value\n            return this._viewProjection;\n        }\n        this._viewProjection = mat4.multiply(m4(), this.projection, this.view);\n        return this._viewProjection;\n    }\n\n    /**\n     * Returns the inverse view projection matrix based on view and projection. This is also cached (since matrix\n     * multiplication is involved).\n     */\n    get viewProjectionInverse(): mat4 | null {\n        if (this._viewProjectionInverse !== undefined) { // return cached value\n            return this._viewProjectionInverse;\n        }\n        this._viewProjectionInverse = mat4.invert(m4(), this.viewProjection);\n        return this._viewProjectionInverse;\n    }\n\n    /**\n     * Whether or not any other public property has changed. Please note that the alteration status is detached from\n     * caching state of lazily computed properties.\n     */\n    get altered(): boolean {\n        return this._altered;\n    }\n\n    /**\n     * Intended for resetting alteration status.\n     */\n    set altered(status: boolean) {\n        this._altered = status;\n    }\n\n}\n","\nimport { assert } from './auxiliaries';\n\nimport { Bindable } from './bindable';\nimport { Initializable } from './initializable';\nimport { AbstractObject } from './object';\n\n\n/**\n * Wrapper for drawable objects by means of multiple vertex buffer that could be bound to a vertex array. If the\n * context supports vertex array objects either natively (webgl2) or by extension, the drawable buffer are bound\n * only once on initialization and only a single VAO bind and unbind is required for a rendering pass.\n *\n * The VertexArray can be used wrapped around any VertexBuffer interface:\n * ```\n * export class ScreenFillingTriangle extends VertexBuffer {\n * // ...\n *     bind(index: GLuint): void { ...  }\n *     unbind(index: GLuint): void { ... }\n *     draw(): void { ... }\n * }\n *\n * export class ScreenFillingTriangleVAO extends VertexArray<ScreenFillingTriangle> { }\n * ```\n *\n * With that the screen-filling triangle can be drawn as follows:\n * ```\n * this.someTriangleVAO.draw();\n * ```\n */\nexport class VertexArray extends AbstractObject<any> implements Bindable {\n\n    /**\n     * Default vertex array, e.g., used for unbind.\n     */\n    static readonly DEFAULT_VERTEX_ARRAY = undefined;\n\n\n    /**\n     * Flag to track one-time initialization (in case vertex arrays are supported).\n     */\n    protected _buffersBound = false;\n\n    /**\n     * The feature specific bind function. This is mapped on initialization either to native VAO bind, extension based\n     * VAO bind or directly to the drawable's bind.\n     */\n    protected _bind: () => void;\n    /**\n     * The feature specific unbind function. This is mapped on initialization either to native VAO unbind, extension\n     * based VAO unbind or directly to the drawable's unbind.\n     */\n    protected _unbind: () => void;\n\n\n    /**\n     * Depending on the context features, a vertex array object is created and the bind method is specified (either\n     * native, by extension, or none/direct bind).\n     * @param bindBOs - Function that should bind all VBOs and IBOs required for drawing.\n     * @param unbindBOs - Function that should unbind all VBOs and IBOs used for drawing.\n     */\n    protected create(bindBOs: () => void, unbindBOs: () => void): any /* WebGLVertexArrayObject */ | undefined {\n\n        if (this.context.isWebGL2 || this.context.supportsVertexArrayObject) {\n            const gl2facade = this.context.gl2facade;\n\n            this._object = gl2facade.createVertexArray();\n            /* note that gl.isVertexArray requires the vertex array to be bound */\n            this._valid = this._object !== undefined;\n\n            this._bind = () => {\n                gl2facade.bindVertexArray(this.object);\n                if (this._buffersBound) {\n                    return;\n                }\n                bindBOs();\n                this._buffersBound = true;\n            };\n            this._unbind = () => gl2facade.bindVertexArray(VertexArray.DEFAULT_VERTEX_ARRAY);\n\n        } else {\n            this._bind = () => bindBOs();\n            this._unbind = () => unbindBOs();\n            this._valid = true;\n        }\n\n        return this._object;\n    }\n\n    /**\n     * On deletion either the VAO is deleted (when VAOs are supported natively or by extension) or nothing happens. Note\n     * that the VAO does not own any of its associated buffers (which can be shared over multiple VAO instances or\n     * used directly).\n     */\n    protected delete(): void {\n        if (!this.context.isWebGL2 && !this.context.supportsVertexArrayObject) {\n            this._valid = false;\n            return;\n        }\n\n        assert(this._object !== undefined, `expected WebGLVertexArrayObject object`);\n        this._context.gl2facade.deleteVertexArray(this._object);\n\n        this._object = undefined;\n        this._valid = false;\n\n        this._buffersBound = false;\n    }\n\n    /**\n     * Invokes the preset bind function.\n     */\n    @Initializable.assert_initialized()\n    bind(): void {\n        this._bind();\n    }\n\n    /**\n     * Invokes the preset unbind function.\n     */\n    @Initializable.assert_initialized()\n    unbind(): void {\n        this._unbind();\n    }\n\n}\n","\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\nimport { clamp } from './gl-matrix-extensions';\n\n/**\n * This internal interface is not intended for module export and should not be used as generic rendering/controller\n * interface. The renderer interface should be used for rendering related tasks instead.\n */\nexport interface Controllable {\n\n    /**\n     * Used to trigger an renderer update. Returns true iff rendering is invalidated and\n     * a new multi-frame should be rendered-\n     */\n    update(multiFrameNumber: number): boolean;\n\n    /**\n     * Used to prepare rendering of a multi-frame.\n     */\n    prepare(): void;\n\n    /**\n     * Used to trigger rendering of a single, intermediate frame.\n     */\n    frame(frameNumber: number): void;\n\n    /**\n     * Used to swap/blit frame from back to front buffer.\n     */\n    swap(): void;\n\n}\n\n\n/**\n * This class controls the rendering flow by means of triggering rendering of a well defined amount of frames\n * (multi-frame number) for frame accumulation. Single frame rendering is handled with a multi-frame number of 1. If a\n * full multi-frame is accumulated, rendering halts. The rendering is not intended to be controlled by owning objects,\n * but via invalidation from within the renderer instead. However, an explicit redraw of a full single or multi-frame\n * can be invoked by calling `update()`. Furthermore, when using multi-frame rendering, the renderer can be halted at a\n * specific frame by setting a debug-frame number.\n *\n * Terminology: a multi-frame is the final result after accumulating a number of intermediate frames (frame). The\n * number of intermediate frames is defined by the multi-frame number. For a multi-frame, the controller invokes the\n * `prepare` on a controllable first, followed by multiple `frame` and `swap` calls. Please note that the\n * adaptive batch mode is yet experimental (can be enabled using `batchSize`).\n */\n\nexport class Controller {\n\n    /**\n     * Number of intermediate frames that are rendered during one browser frame\n     */\n    protected _batchSize = 1;\n    set batch(size: number) {\n        log(LogLevel.Dev, `(adaptive) batch multi-frame rendering is experimental for now`);\n    }\n\n\n    /**\n     * Toggle for debug outputs; if true control flow will be logged.\n     */\n    protected _debug = false;\n    set debug(value: boolean) {\n        this._debug = value;\n    }\n\n\n    /**\n     * @see {@link multiFrameNumber}\n     * This property can be observed, e.g., `aController.multiFrameNumberObservable.subscribe()`.\n     */\n    protected _multiFrameNumber = 1;\n    protected _multiFrameNumberSubject = new ReplaySubject<number>(1);\n\n    /**\n     * @see {@link debugFrameNumber}\n     * This property can be observed, e.g., `aController.debugFrameNumberObservable.subscribe()`.\n     */\n    protected _debugFrameNumber = 0;\n    protected _debugFrameNumberSubject = new ReplaySubject<number>(1);\n\n    /**\n     * @see {@link frameNumber}\n     * This property can be observed, e.g., `aController.frameNumberObservable.subscribe()`.\n     */\n    protected _frameNumber = 0;\n    protected _frameNumberSubject = new ReplaySubject<number>(1);\n\n\n    /**\n     * Controllable, e.g., an instance of a Renderer.\n     */\n    protected _controllable: Controllable | undefined;\n\n\n    /**\n     * Holds the handle of the pending animate frame request, if requested. Throughout the controller, only a single\n     * request at a time is allowed.\n     */\n    protected _pendingRequest = 0;\n\n    /**\n     * Stores the controller's pause state.\n     */\n    protected _pause = false;\n\n    /**\n     * Blocking updates can be used to re-configure the controller without triggering\n     */\n    protected _block = false;\n\n    /**\n     * Number of update requested while being in blocked mode. If there is one or more blocked requests, an update will\n     * be triggered when unblocked.\n     */\n    protected _blockedUpdates = 0;\n\n\n    /* Debug and  reporting facilities. */\n\n    /**\n     * Total number of rendered intermediate frames.\n     */\n    protected _intermediateFrameCount = 0;\n\n    /**\n     * Total number of completed multi-frames.\n     */\n    protected _multiFrameCount = 0;\n\n    /**\n     * Time tracker used to the minimum and maximum frame time of an intermediate frame (per multi-frame).\n     */\n    protected _intermediateFrameTimes = new Array<number>(2);\n    /**\n     * Time tracker used to accumulate all durations of executed frame and swap callbacks per multi-frame. This is the\n     * net rendering time and is used to derive the average frame time.\n     */\n    protected _multiFrameTime: number;\n    /**\n     * Time tracker used to capture the time the update callback took.\n     */\n    protected _updateFrameTime: number;\n\n    /**\n     * Used to measure the gross rendering time of a multi-frame. The first point in time denotes the start of the\n     * rendering, the second, the point in time the last frame was rendered.\n     *\n     * Note: point in times might be shifted due to (un)pausing. Their intent is to allow measuring the rendering\n     * duration, nothing else.\n     */\n    protected _multiTime: Array<number> = [0.0, 0.0];\n\n    /**\n     * Point in time when the pause started. This is used to shift the gross rendering time measurement in _multiTime.\n     */\n    protected _pauseTime: number | undefined;\n\n\n    /**\n     * Triggers a frame invocation before the browser repaints. If no rendering callback is setup, the request\n     * is ignored.\n     */\n    protected request(type?: Controller.RequestType): void {\n        /**\n         * Prevent unnecessary canceling and requesting of animation frames when updating multiple times before an\n         * actual first frame is triggered.\n         */\n        if (this._pendingRequest !== 0) {\n            logIf(this._debug, LogLevel.ModuleDev, `c request (ignored) | pending: '${this._pendingRequest}'`);\n            return;\n        }\n        if (this._pause || !this._controllable) {\n            logIf(this._debug, LogLevel.ModuleDev, `c request (ignored) | pending: '${this._pendingRequest}'`);\n            return;\n        }\n        logIf(this._debug, LogLevel.ModuleDev, `c request           | intermediates: #${this._frameNumber}`);\n\n        const dfnum = this._debugFrameNumber;\n        const mfnum = this._multiFrameNumber;\n\n        assert(dfnum <= mfnum, `debug-frame number exceeds multi-frame number`);\n        assert(this._pendingRequest === 0, `another request is pending, cannot invoke multiple requests`);\n\n        if (dfnum > 0 && this._frameNumber >= dfnum) {\n            this.pause();\n        }\n\n        const numRemainingIntermediates = Math.max((dfnum > 0 ? dfnum : mfnum) - this._frameNumber, 0);\n\n        if (type !== undefined) {\n            this._pendingRequest = window.requestAnimationFrame(() => this.invoke(type));\n        } else if (numRemainingIntermediates > 0) {\n            this._pendingRequest = window.requestAnimationFrame(() => this.invoke(Controller.RequestType.Frame));\n        } else if (dfnum === mfnum || dfnum === 0) {\n            ++this._multiFrameCount;\n        }\n    }\n\n    protected reset(): boolean {\n        const block = this._block || (this._frameNumber === 0 && this._pendingRequest);\n        logIf(this._debug, LogLevel.ModuleDev, `c update  ${block ? '(blocked) ' : '          '}| ` +\n            `pending: '${this._pendingRequest}', intermediates: #${this._frameNumber}`);\n\n        if (block) {\n            ++this._blockedUpdates;\n            return true;\n        }\n        this.cancel();\n        return false;\n    }\n\n    /**\n     * Cancel a pending frame invocation (if existing).\n     */\n    protected cancel(): void {\n        if (this._pendingRequest === 0) {\n            logIf(this._debug, LogLevel.ModuleDev, `c cancel  (ignored) |`);\n            return;\n        }\n        logIf(this._debug, LogLevel.ModuleDev, `c cancel            | pending: '${this._pendingRequest}'`);\n\n        window.cancelAnimationFrame(this._pendingRequest);\n        this._pendingRequest = 0;\n    }\n\n    protected invoke(type: Controller.RequestType) {\n        assert(this._pendingRequest !== 0, `manual/explicit invocation not anticipated`);\n        assert(this._controllable !== undefined, `expected valid controllable for invocation`);\n\n        this._pendingRequest = 0;\n\n        /* tslint:disable-next-line:switch-default */\n        switch (type) {\n            case Controller.RequestType.Update:\n                this.invokeUpdate(false);\n                break;\n            case Controller.RequestType.NonOptionalUpdate:\n                this.invokeUpdate(true);\n                break;\n            case Controller.RequestType.Prepare:\n                this.invokePrepare();\n                break;\n            case Controller.RequestType.Frame:\n                this.invokeFrame();\n                break;\n        }\n    }\n\n    protected invokeUpdate(force: boolean = false): void {\n        logIf(this._debug, LogLevel.ModuleDev, `c invoke update     | ` +\n            `pending: '${this._pendingRequest}', mfnum: ${this._multiFrameNumber}`);\n\n        this.unblock();\n        assert(!this._pause, `updates should not be invoked when paused`);\n\n        const redraw: boolean = (this._controllable as Controllable).update(this._multiFrameNumber);\n        if (force || redraw) {\n            this.invokePrepare();\n            return;\n        }\n        this.invokeFrame();\n    }\n\n    /**\n     * Actual invocation of the controllable's prepare method\n     */\n    protected invokePrepare(): void {\n        logIf(this._debug, LogLevel.ModuleDev, `c invoke prepare    |`);\n\n        this._frameNumber = 0;\n\n        this._pause = false;\n        this._pauseTime = undefined;\n\n        this._multiFrameTime = 0.0;\n        this._intermediateFrameTimes[0] = Number.MAX_VALUE;\n        this._intermediateFrameTimes[1] = Number.MIN_VALUE;\n\n        /* Trigger preparation of a new multi-frame and measure execution time. */\n        this._multiTime[0] = performance.now();\n        (this._controllable as Controllable).prepare();\n        this._multiTime[1] = performance.now();\n\n        const updateDuration = this._multiTime[1] - this._multiTime[0];\n        this._multiFrameTime = updateDuration;\n        this._updateFrameTime = updateDuration;\n\n        this.invokeFrame();\n    }\n\n    /**\n     * Invokes rendering of an intermediate frame, increments the frame counter, and requests rendering of the next\n     * frame. The rendering is invoked by means of a callback to the canvas renderer. This function implements various\n     * asserts to assure correct control logic and absolutely prevent unnecessary frame requests.\n     */\n    protected invokeFrame(): void {\n        assert(!this._pause, `frames should not be invoked when paused`);\n        logIf(this._debug, LogLevel.ModuleDev, `c invoke frame      | pending: '${this._pendingRequest}'`);\n\n        const dfnum = this._debugFrameNumber;\n        const mfnum = this._multiFrameNumber;\n\n        if (this._frameNumber === mfnum) {\n            return;\n        }\n\n        const debug = dfnum > 0;\n        assert(!debug || this._frameNumber < dfnum, `frame number about to exceed debug-frame number`);\n\n        assert(this._controllable !== undefined, `update invoked without controllable set`);\n\n\n        /* Trigger an intermediate frame and measure and accumulate execution time for average frame time. This should\n        be the only place, any renderer frame method is invoked. */\n\n        const t0 = performance.now();\n\n        let batchEnd = Math.min(this._multiFrameNumber, this._frameNumber + this._batchSize);\n        if (this._debugFrameNumber > 0) {\n            batchEnd = Math.min(batchEnd, this._debugFrameNumber);\n        }\n\n        for (; this._frameNumber < batchEnd; ++this._frameNumber) {\n            logIf(this._debug, LogLevel.ModuleDev, `c -> frame          | frame: ${this._frameNumber}`);\n            (this._controllable as Controllable).frame(this._frameNumber);\n            ++this._intermediateFrameCount;\n        }\n        logIf(this._debug, LogLevel.ModuleDev, `c -> swap           |`);\n\n        (this._controllable as Controllable).swap();\n        this._multiTime[1] = performance.now();\n\n        /* Note: critical call sequence; be careful when changing the following lines. */\n\n        const frameDuration = this._multiTime[1] - t0;\n        this._multiFrameTime += frameDuration;\n\n        /* Keep track of minimum and maximum intermediate frame durations. */\n        this._intermediateFrameTimes[0] = Math.min(this._intermediateFrameTimes[0], frameDuration);\n        /* Note that the first frame is probably the slowest due to lazy initialization of stages/passes. */\n        this._intermediateFrameTimes[1] = Math.max(this._intermediateFrameTimes[1], frameDuration);\n\n        this.frameNumberNext();\n\n        this.request();\n    }\n\n\n    /**\n     * Utility for communicating this._multiFrameNumber changes to its associated subject.\n     */\n    protected multiFrameNumberNext(): void {\n        this._multiFrameNumberSubject.next(this._multiFrameNumber);\n    }\n\n    /**\n     * Utility for communicating this._debugFrameNumber changes to its associated subject.\n     */\n    protected debugFrameNumberNext(): void {\n        this._debugFrameNumberSubject.next(this._debugFrameNumber);\n    }\n\n    /**\n     * Utility for communicating this._frameNumber changes to its associated subject.\n     */\n    protected frameNumberNext(): void {\n        this._frameNumberSubject.next(this._frameNumber);\n    }\n\n\n    /**\n     * Sets pause state to true which affects subsequent requests. Any pending requests are canceled.\n     */\n    pause(): void {\n        const ignore = this._pause;\n        logIf(this._debug, LogLevel.ModuleDev, `c pause   ${ignore ? '(ignored)' : ''}`);\n\n        if (this._pause) {\n            return;\n        }\n        this._pause = true;\n        this._pauseTime = performance.now();\n\n        this.cancel();\n    }\n\n    /**\n     * Sets pause state to false which affects subsequent requests. Furthermore, a request is invoked.\n     */\n    unpause(): void {\n        const ignore = !this._pause;\n        logIf(this._debug, LogLevel.ModuleDev, `c unpause ${ignore ? '(ignored)' : ''}`);\n\n        if (ignore) {\n            return;\n        }\n        this._pause = false;\n\n        if (this._pauseTime !== undefined && !isNaN(this._pauseTime)) {\n            /* Subtract paused time from multi-frame time. */\n            const pauseDelay = performance.now() - this._pauseTime;\n            this._multiTime[0] += pauseDelay;\n\n            /* Note: this is just in case the fps is gathered while a request is pending. */\n            this._multiTime[1] += pauseDelay;\n        }\n        this.request();\n    }\n\n    /**\n     * Resets multi-frame rendering by restarting at the first frame. If paused, this unpauses the controller.\n     * If updates where blocked using ```block```, block updates is disabled.\n     */\n    update(force: boolean = false): void {\n        if (this.reset()) {\n            return;\n        }\n        this.request(force ? Controller.RequestType.NonOptionalUpdate : Controller.RequestType.Update);\n    }\n\n    prepare(): void {\n        if (this.reset()) {\n            return;\n        }\n        this.request(Controller.RequestType.Prepare);\n    }\n\n\n    /**\n     * Block implicit updates, e.g., caused by various setters. This can be used to reconfigure the controller without\n     * triggering to multiple intermediate updates. The block updates mode can be exited using ``unblock```.\n     */\n    block(): void {\n        logIf(this._debug, LogLevel.ModuleDev, `c block   ${this._block ? '(ignored) ' : '          '}|`);\n\n        if (this._block) {\n            return;\n        }\n        this._block = true;\n    }\n\n    /**\n     * Unblock updates. If there was at least one blocked update request, an immediate update is invoked.\n     */\n    unblock(): void {\n        logIf(this._debug, LogLevel.ModuleDev, `c unblock ${!this._block ? '(ignored) ' : '          '}` +\n            `| blocked: #${this._blockedUpdates}`);\n\n        if (!this._block) {\n            return;\n        }\n        this._block = false;\n        if (this._blockedUpdates > 0) {\n            this._blockedUpdates = 0;\n            this.update();\n        }\n    }\n\n\n    /**\n     * Returns whether or not the control is paused.\n     * @returns - True if paused, else false.\n     */\n    get paused(): boolean {\n        return this._pause;\n    }\n\n    /**\n     * Returns whether or not the control is blocking updates.\n     * @returns - True if blocked, else false.\n     */\n    get blocked(): boolean {\n        return this._block;\n    }\n\n\n    /**\n     * Sets the controllable, for which updates, frames, and swaps are invoked whenever rendering is\n     * invalidated and an updated multi-frame is required. Swap is detached from frame since rendering an intermediate\n     * frame is usually done offscreen and explicit swap control can be useful.\n     * @param controllable - Controllable for update, frame, and swap invocation.\n     */\n    set controllable(controllable: Controllable | undefined) {\n        if (controllable === this._controllable) {\n            return;\n        }\n        this._controllable = controllable;\n        this.update();\n    }\n\n\n    /**\n     * Returns the multi-frame number. The number is greater than or equal to zero. Multi-frame number is implemented\n     * as a property and allows for change callback.\n     * @returns - Multi-frame number.\n     */\n    get multiFrameNumber(): number {\n        return this._multiFrameNumber;\n    }\n\n    /**\n     * Changes the multi-frame number. If the provided value equals the current number set, nothing happens. If the\n     * provided value is negative, the multi-frame number is set to 1.\n     * @param multiFrameNumber - The multi-frame number targeted for rendering.\n     */\n    set multiFrameNumber(multiFrameNumber: number) {\n        const value: number = Math.max(1, isNaN(multiFrameNumber) ? 1 : multiFrameNumber);\n        if (value === this._multiFrameNumber) {\n            return;\n        }\n\n        this._multiFrameNumber = value;\n        this.multiFrameNumberNext();\n\n        logIf(value !== multiFrameNumber, LogLevel.ModuleDev,\n            `multi-frame number adjusted to ${value}, given ${multiFrameNumber}`);\n\n        if (this.debugFrameNumber > this.multiFrameNumber) {\n            this.debugFrameNumber = this.multiFrameNumber;\n        } else {\n            this.update();\n        }\n    }\n\n    /**\n     * Observable that can be used to subscribe to multi-frame number changes.\n     */\n    get multiFrameNumberObservable(): Observable<number> {\n        return this._multiFrameNumberSubject.asObservable();\n    }\n\n\n    /**\n     * Returns the debug-frame number greater than or equal to zero.\n     * @returns - Debug-frame number.\n     */\n    get debugFrameNumber(): number {\n        return this._debugFrameNumber;\n    }\n\n    /**\n     * Sets the debug.-frame number (debug number) that, if greater than zero, causes the rendering to halt when the\n     * current frame number (frame number) equals the debug number. Debugging can be disabled by setting the debug\n     * number to zero.\n     *\n     * If the debug number is greater than the frame number rendering is restarted by means of an update(). If the\n     * debug number is less than the frame number the rendering continues and halts accordingly. If the debug number\n     * equals the current debug number set, nothing happens. If the debug number is greater than the multi-frame\n     * number, it is reduced to the multi-frame number.\n     *\n     * Note: in contrast to setting the multi-frame number, setting the debug-frame number unpauses the controller.\n     *\n     * @param debugFrameNumber - Debug-frame number.\n     */\n    set debugFrameNumber(debugFrameNumber: number) {\n        const value: number = clamp(isNaN(debugFrameNumber) ? 0 : debugFrameNumber, 0, this.multiFrameNumber);\n        if (value === this._debugFrameNumber) {\n            return;\n        }\n\n        this._debugFrameNumber = value;\n        this.debugFrameNumberNext();\n\n        logIf(value !== debugFrameNumber, LogLevel.ModuleDev,\n            `debug-frame number adjusted to ${value}, given ${debugFrameNumber}`);\n\n        if (this._block) {\n            return;\n        }\n\n        if (this.debugFrameNumber < this._frameNumber) {\n            this.prepare();\n        } else if (!this._pendingRequest) {\n            this.unpause();\n            this.request();\n        }\n    }\n\n    /**\n     * Observable that can be used to subscribe to debug-frame number changes.\n     */\n    get debugFrameNumberObservable(): Observable<number> {\n        return this._debugFrameNumberSubject.asObservable();\n    }\n\n\n    /**\n     * The current multi-frame number; it is less than or equal to the multi-frame number and enumerates the last\n     * rendered frame. Note that this does not denote the number of 'completed' multi-frames rendered (not a continuous\n     * frame count).\n     * @returns - The current (intermediate) frame number.\n     */\n    get frameNumber(): number {\n        return this._frameNumber;\n    }\n\n    /**\n     * Observable that can be used to subscribe to frame number changes.\n     */\n    get frameNumberObservable(): Observable<number> {\n        return this._frameNumberSubject.asObservable();\n    }\n\n\n    /**\n     * Returns the total number of rendered (requested and probably completed) intermediate frames.\n     * @returns - The total number of intermediate frames rendered.\n     */\n    get intermediateFrameCount(): number {\n        return this._intermediateFrameCount;\n    }\n\n    /**\n     * Returns the total number of completed multi-frames.\n     * @returns - The total number of multi-frames completed.\n     */\n    get multiFrameCount(): number {\n        return this._multiFrameCount;\n    }\n\n    /**\n     * Provides the average time it takes to render an intermediate frame within the current displayed multi-frame (if\n     * a new multi-frame is triggered, the average frame time is reset).\n     * @returns - Average frame time (intermediate frame rendering) in ms\n     */\n    get averageFrameTime(): number {\n        return this._frameNumber === 0 ? 0.0 : this._multiFrameTime / this._frameNumber;\n    }\n\n    /**\n     * Provides the update time tracked for the current multi-frame.\n     * @returns - Time of the multi-frame update (before first intermediate frame is rendered) in ms\n     */\n    get updateFrameTime(): number {\n        return this._updateFrameTime;\n    }\n\n    /**\n     * Provides the minimum rendering time tracked over all intermediate frames of the current multi-frame.\n     * @returns - Minimum intermediate frame time in ms\n     */\n    get minimumFrameTime(): number {\n        return this._intermediateFrameTimes[0];\n    }\n\n    /**\n     * Provides the maximum rendering time tracked over all intermediate frames of the current multi-frame. Note that\n     * the maximum frame time is most often caused by the first intermediate frame within a multi-frame due to lazy\n     * stage initialization or reconfiguration.\n     * @returns - Maximum intermediate frame time in ms\n     */\n    get maximumFrameTime(): number {\n        return this._intermediateFrameTimes[1];\n    }\n\n    /**\n     * The time in milliseconds that passed since the current multi-frame (up to the current frame number) was\n     * requested. This time excludes time spent paused (e.g., caused by halting rendering at debug-frame number).\n     * Note that this is not a measure of frame rendering performance. The number of frame requests per second might be\n     * limited to 60Hz even though the rendering of an intermediate frame takes only a few milliseconds.\n     * @returns - Time passed for current multi-frame in milliseconds.\n     */\n    get multiFrameTime(): number {\n        return this._frameNumber === 0 ? 0.0 : this._multiTime[1] - this._multiTime[0];\n    }\n\n    /**\n     * The frames per second is based on the average number of a full intermediate frame request up to the current\n     * frame number.\n     * @returns - Number of frames per second based on the current multi-frame\n     */\n    get framesPerSecond(): number {\n        return this._frameNumber === 0 ? 0.0 : 1000.0 / (this.multiFrameTime / this._frameNumber);\n    }\n\n}\n\n\nexport namespace Controller {\n\n    export enum RequestType { Update, NonOptionalUpdate, Prepare, Frame }\n\n}\n","\nimport { assert, log, LogLevel } from './auxiliaries';\n\nimport { clamp } from './gl-matrix-extensions';\n\nimport { clampf, clampf3, clampf4, duplicate4, equals4, GLclampf3, GLclampf4, GLclampf5 } from './tuples';\n\n\n/**\n * Color class that allows for specification and conversion of colors in various color spaces. Please not that most of\n * the color conversion math is based on  {@link https://www.easyrgb.com/en/math.php}. The internal color representation\n * is a 4-tuple of GLclampf components in RGB color space and additional alpha. All color conversion, e.g., getters is\n * computed on the fly, not cached, and is not optimized for, e.g., massive pixel processing.\n */\nexport class Color {\n\n    protected static readonly DEFAULT_ALPHA: GLclampf = 1.0;\n    protected static readonly HEX_FORMAT_REGEX = new RegExp(/^(#|0x)?(([0-9a-f]{3}){1,2}|([0-9a-f]{4}){1,2})$/i);\n\n    protected _rgba: GLclampf4 = [0.0, 0.0, 0.0, Color.DEFAULT_ALPHA];\n\n\n    /** @see {@link altered} */\n    protected _altered = false;\n\n\n    /**\n     * Converts a hue value into an rgb value.\n     */\n    protected static hue2rgb(p: GLfloat, q: GLfloat, t: GLfloat) {\n        assert(t >= -1.0 && t <= 2.0, `t is expected to be between -1 and 2`);\n        if (t < 0.0) {\n            t += 1.0;\n        } else if (t > 1.0) {\n            t -= 1.0;\n        }\n\n        if ((6.0 * t) < 1.0) {\n            return p + (q - p) * 6.0 * t;\n        }\n        if ((2.0 * t) < 1.0) {\n            return q;\n        }\n        if ((3.0 * t) < 2.0) {\n            return p + (q - p) * 6.0 * (2.0 / 3.0 - t);\n        }\n        return p;\n    }\n\n    /**\n     * Converts a float value to two-character HEX code.\n     * @param value - A float value in [0.0, 1.0].\n     * @returns - Two-character hexadecimal representation in [00, FF].\n     */\n    protected static to2CharHexCode(value: number): string {\n        return (value < 15.5 / 255.0 ? '0' : '') + Math.round(value * 255.0).toString(16);\n    }\n\n    /**\n     * Converts a color from HSL space to RGB space.\n     * @param hsl - HSL color tuple: hue, saturation, and lightness, each in [0.0, 1.0].\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0].\n     */\n    static hsl2rgb(hsl: GLclampf3): GLclampf3 {\n        const hslF = clampf3(hsl, 'HSL input');\n\n        if (hslF[1] === 0.0) {\n            return [hslF[2], hslF[2], hslF[2]];\n        }\n\n        const q = hslF[2] < 0.5 ? hslF[2] * (1.0 + hslF[1]) : (hslF[2] + hslF[1]) - (hslF[1] * hslF[2]);\n        const p = 2.0 * hslF[2] - q;\n\n        return [Color.hue2rgb(p, q, hslF[0] + (1.0 / 3.0))\n            , Color.hue2rgb(p, q, hslF[0]), Color.hue2rgb(p, q, hslF[0] - (1.0 / 3.0))];\n    }\n\n    /**\n     * Converts a color from HSL space to RGB space.\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0].\n     * @returns - HSL color tuple: hue, saturation, and lightness, each in [0.0, 1.0].\n     */\n    static rgb2hsl(rgb: GLclampf3): GLclampf3 {\n        const rgbF = clampf3(rgb, 'RGB input');\n        const hsl: GLclampf3 = [0.0, 0.0, 0.0];\n\n        const min = Math.min(rgbF[0], rgbF[1], rgbF[2]);\n        const max = Math.max(rgbF[0], rgbF[1], rgbF[2]);\n        const delta = max - min;\n\n        hsl[2] = (max + min) * 0.5;\n\n        if (delta === 0.0) {\n            return hsl;\n        }\n\n        hsl[1] = hsl[2] < 0.5 ? delta / (max + min) : delta / (2.0 - max - min);\n\n        const deltaR = (((max - rgbF[0]) / 6.0) + (delta / 2.0)) / delta;\n        const deltaG = (((max - rgbF[1]) / 6.0) + (delta / 2.0)) / delta;\n        const deltaB = (((max - rgbF[2]) / 6.0) + (delta / 2.0)) / delta;\n\n        if (rgbF[0] === max) {\n            hsl[0] = deltaB - deltaG;\n        } else if (rgbF[1] === max) {\n            hsl[0] = deltaR - deltaB + (1.0 / 3.0);\n        } else { // if (rgbF[2] === max) {\n            hsl[0] = deltaG - deltaR + (2.0 / 3.0);\n        }\n        return hsl;\n    }\n\n\n    /**\n     * Converts a color from LAB space to XYZ space.\n     * @param lab - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\n     * @returns - XYZ color tuple: x, y, and z, each in [0.0, 1.0].\n     */\n    static lab2xyz(lab: GLclampf3): GLclampf3 {\n        const labF = clampf3(lab, 'LAB input');\n\n        const yr = (labF[0] * 100.0 + 16.0) / 116.0;\n        const xr = labF[1] * 100 / 500.0 + yr;\n        const zr = yr - labF[2] * 100 / 200.0;\n\n        const yr3 = yr * yr * yr;\n        const xr3 = xr * xr * xr;\n        const zr3 = zr * zr * zr;\n\n        /* D65/2° illuminant for XYZ conversion */\n        const y = 1.00000 * (yr3 > 0.008856 ? yr3 : (yr - 16.0 / 116.0) / 7.787);\n        const x = 0.95047 * (xr3 > 0.008856 ? xr3 : (xr - 16.0 / 116.0) / 7.787);\n        const z = 1.08883 * (zr3 > 0.008856 ? zr3 : (zr - 16.0 / 116.0) / 7.787);\n\n        return [x, y, z];\n    }\n\n    /**\n     * Converts a color from XYZ space to LAB space.\n     * @param xyz - XYZ color tuple: x, y, and z, each in [0.0, 1.0].\n     * @returns - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\n     */\n    static xyz2lab(xyz: GLclampf3): GLclampf3 {\n        // DO NOT CLAMP! const xyzF = clampf3(xyz, 'XYZ input');\n        const xyzF = [xyz[0] / 0.95047, xyz[1] * 1.00000, xyz[2] / 1.08883];\n\n        /* implicit illuminant of [1.0, 1.0, 1.0] assumed */\n        const x = xyzF[0] > 0.008856 ? Math.pow(xyzF[0], 1.0 / 3.0) : (7.787 * xyzF[0]) + (16.0 / 116.0);\n        const y = xyzF[1] > 0.008856 ? Math.pow(xyzF[1], 1.0 / 3.0) : (7.787 * xyzF[1]) + (16.0 / 116.0);\n        const z = xyzF[2] > 0.008856 ? Math.pow(xyzF[2], 1.0 / 3.0) : (7.787 * xyzF[2]) + (16.0 / 116.0);\n\n        return clampf3([\n            0.01 * (116.0 * y - 16.0),\n            0.01 * (500.0 * (x - y)),\n            0.01 * (200.0 * (y - z))]);\n    }\n\n\n    /**\n     * Converts a color from XYZ space to Adobe-RGB space.\n     * @param xyz - XYZ color tuple: x, y, and z, and refer to the D65/2° illuminant.\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\n     */\n    static xyz2rgb(xyz: GLclampf3): GLclampf3 {\n        // DO NOT CLAMP! const xyzF = clampf3(xyz, 'XYZ input');\n\n        const r = xyz[0] * +2.04159 + xyz[1] * -0.56501 + xyz[2] * -0.34473;\n        const g = xyz[0] * -0.96924 + xyz[1] * +1.87597 + xyz[2] * +0.04156;\n        const b = xyz[0] * +0.01344 + xyz[1] * -0.11836 + xyz[2] * +1.01517;\n\n        return clampf3([\n            Math.pow(r, 1.0 / 2.19921875),\n            Math.pow(g, 1.0 / 2.19921875),\n            Math.pow(b, 1.0 / 2.19921875)]);\n\n        // Standard-RGB\n        // let r = xyz[0] * +3.2406 + xyz[1] * -1.5372 + xyz[2] * -0.4986;\n        // let g = xyz[0] * -0.9689 + xyz[1] * +1.8758 + xyz[2] * +0.0415;\n        // let b = xyz[0] * +0.0557 + xyz[1] * -0.2040 + xyz[2] * +1.0570;\n\n        // r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : 12.92 * r;\n        // g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : 12.92 * g;\n        // b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : 12.92 * b;\n        // return [r, g, b];\n    }\n\n    /**\n     * Converts a color from Adobe-RGB space to XYZ space.\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\n     * @returns - XYZ color tuple: x, y, and z, each in [0.0, 1.0].\n     */\n    static rgb2xyz(rgb: GLclampf3): GLclampf3 {\n        const rgbF = clampf3(rgb, 'RGB input');\n\n        const r = Math.pow(rgbF[0], 2.19921875);\n        const g = Math.pow(rgbF[1], 2.19921875);\n        const b = Math.pow(rgbF[2], 2.19921875);\n\n        const x = r * 0.57667 + g * 0.18556 + b * 0.18823;\n        const y = r * 0.29734 + g * 0.62736 + b * 0.07529;\n        const z = r * 0.02703 + g * 0.07069 + b * 0.99134;\n        return [x, y, z];\n    }\n\n\n    /**\n     * Converts a color from LAB space to RGB space.\n     * @param lab - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\n     */\n    static lab2rgb(lab: GLclampf3): GLclampf3 {\n        return Color.xyz2rgb(Color.lab2xyz(lab));\n    }\n\n    /**\n     * Converts a color from RGB space to LAB space.\n     * @param lab - LAB color tuple: lightness, greenRed, and blueYellow, each in [0.0, 1.0].\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\n     */\n    static rgb2lab(rgb: GLclampf3): GLclampf3 {\n        return Color.xyz2lab(Color.rgb2xyz(rgb));\n    }\n\n\n    /**\n     * Converts a color from CMYK space to RGB space.\n     * @param cmyk - CMYK color tuple: cyan, magenta, yellow, and key, each in [0.0, 1.0].\n     * @returns - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\n     */\n    static cmyk2rgb(cmyk: GLclampf4): GLclampf3 {\n        const cmykF = clampf4(cmyk, 'CMYK input');\n\n        const k = 1.0 - cmykF[3];\n        return [(1.0 - cmykF[0]) * k, (1.0 - cmykF[1]) * k, (1.0 - cmykF[2]) * k];\n    }\n\n    /**\n     * Converts a color from RGB space to CMYK space.\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\n     * @returns - CMYK color tuple: cyan, magenta, yellow, and key, each in [0.0, 1.0].\n     */\n    static rgb2cmyk(rgb: GLclampf3): GLclampf4 {\n        const rgbF = clampf3(rgb, 'RGB input');\n\n        const k1 = 1.0 - Math.max(rgbF[0], rgbF[1], rgbF[2]);\n        const k2 = 1.0 - k1;\n        const k3 = k2 === 0.0 ? 0.0 : 1.0 / k2;\n        return [(k2 - rgbF[0]) * k3, (k2 - rgbF[1]) * k3, (k2 - rgbF[2]) * k3, k1];\n    }\n\n\n    /**\n     * Converts a color from HEX string to RGBA space. The hex string can start with '#' or '0x' or neither of these.\n     * @param hex - Hexadecimal color string: red, green, and blue, each in ['00', 'ff'].\n     * @returns - RGBA color tuple: red, green, blue, and alpha, each in [0.0, 1.0]. On error [0, 0, 0, 0] is returned.\n     */\n    static hex2rgba(hex: string): GLclampf4 {\n        const rgba: GLclampf4 = [0.0, 0.0, 0.0, Color.DEFAULT_ALPHA];\n\n        if (!Color.HEX_FORMAT_REGEX.test(hex)) {\n            log(LogLevel.User, `hexadecimal RGBA color string must conform to either \\\n'0x0000', '#0000', '0000', '0x00000000', '#00000000', or '00000000', given '${hex}'`);\n            return rgba;\n        }\n\n        const offset = hex.startsWith('0x') ? 2 : hex.startsWith('#') ? 1 : 0;\n        const length = Math.floor((hex.length - offset) / 3);\n        const stride = length - 1;\n\n        rgba[0] = parseInt(hex[offset + 0 * length] + hex[offset + 0 * length + stride], 16) / 255.0;\n        rgba[1] = parseInt(hex[offset + 1 * length] + hex[offset + 1 * length + stride], 16) / 255.0;\n        rgba[2] = parseInt(hex[offset + 2 * length] + hex[offset + 2 * length + stride], 16) / 255.0;\n        if ((hex.length - offset) === 4 || (hex.length - offset) === 8) {\n            rgba[3] = parseInt(hex[offset + 3 * length] + hex[offset + 3 * length + stride], 16) / 255.0;\n        }\n\n        assert(!isNaN(rgba[0]) && !isNaN(rgba[1]) && !isNaN(rgba[2]) && !isNaN(rgba[3]),\n            `expected well formated hexadecimal RGBA string, given '${hex}'`);\n        return rgba;\n    }\n\n    /**\n     * Converts a color from RGB space to HEX string.\n     * @param rgb - RGB color tuple: red, green, and blue, each in [0.0, 1.0]\n     * @returns - Hexadecimal color string: red, green, and blue, each in ['00', 'ff'], with '#' prefix\n     */\n    static rgb2hex(rgb: GLclampf3): string {\n        const rgbF = clampf3(rgb, 'RGB input');\n\n        const r = Color.to2CharHexCode(rgbF[0]);\n        const g = Color.to2CharHexCode(rgbF[1]);\n        const b = Color.to2CharHexCode(rgbF[2]);\n        return '#' + r + g + b;\n    }\n\n    /**\n     * Converts a color from RGBA space to HEX string.\n     * @param rgba - RGBA color tuple: red, green, blue, and alpha, each in [0.0, 1.0]\n     * @returns - Hexadecimal color string: red, green, blue, and alpha, each in ['00', 'ff'], with '#' prefix\n     */\n    static rgba2hex(rgba: GLclampf4): string {\n        const rgbaF = clampf4(rgba, 'RGBA input');\n\n        const r = Color.to2CharHexCode(rgbaF[0]);\n        const g = Color.to2CharHexCode(rgbaF[1]);\n        const b = Color.to2CharHexCode(rgbaF[2]);\n        const a = Color.to2CharHexCode(rgbaF[3]);\n        return '#' + r + g + b + a;\n    }\n\n    /**\n     * Creates an instance of color (a 4-tuple in RGBA space).\n     * @param rgba - Either RGB tuple or RGBA tuple. If none is provided, default will be kept.\n     * @param alpha - If RGB tuple is provided an additional alpha value can be specified.\n     */\n    constructor(rgba?: GLclampf3 | GLclampf4, alpha?: GLclampf) {\n        if (rgba === undefined) {\n            return;\n        }\n        if (rgba.length === 3 && alpha !== undefined) {\n            this.fromF32(rgba[0], rgba[1], rgba[2], alpha);\n        } else if (rgba.length === 4) {\n            this.fromF32(rgba[0], rgba[1], rgba[2], rgba[3]);\n            assert(alpha === undefined, `expected alpha to be undefined when given an 4-tuple in RGBA`);\n        } else {\n            this.fromF32(rgba[0], rgba[1], rgba[2]);\n        }\n    }\n\n\n    /**\n     * Checks whether or not this color matches a second color (based on internal rgba floating representation).\n     * @param other - Color to compare color values to.\n     * @returns - True iff both colors have the exact same rgba floating point values.\n     */\n    equals(other: Color): boolean {\n        return equals4<GLclampf>(this._rgba, other._rgba);\n    }\n\n\n    /**\n     * Specifies the internal rgba store using a color in float (32bit) RGBA colors.\n     * @param red - Red color component in [0.0, 1.0]\n     * @param green - Green color component in [0.0, 1.0]\n     * @param blue - Blue color component in [0.0, 1.0]\n     * @param alpha - Alpha color component in [0.0, 1.0]\n     * @returns - The color instance (this).\n     */\n    fromF32(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat = Color.DEFAULT_ALPHA): Color {\n        const previous = duplicate4<GLclampf>(this._rgba);\n\n        this._rgba[0] = clampf(red, `red value`);\n        this._rgba[1] = clampf(green, `green value`);\n        this._rgba[2] = clampf(blue, `blue value`);\n        this._rgba[3] = clampf(alpha, `alpha value`);\n\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\n        return this;\n    }\n\n    /**\n     * Specifies the internal rgba store using a color in unsigned int (8bit) RGBA colors.\n     * @param red - Red color component in [0, 255]\n     * @param green - Green color component in [0, 255]\n     * @param blue - Blue color component in [0, 255]\n     * @param alpha - Alpha color component in [0, 255]\n     * @returns - The color instance (this).\n     */\n    fromUI8(red: GLubyte, green: GLubyte, blue: GLubyte,\n        alpha: GLubyte = Math.floor(Color.DEFAULT_ALPHA * 255)): Color {\n        const previous = duplicate4<GLclampf>(this._rgba);\n\n        this._rgba[0] = clamp(red, 0, 255) / 255.0;\n        this._rgba[1] = clamp(green, 0, 255) / 255.0;\n        this._rgba[2] = clamp(blue, 0, 255) / 255.0;\n        this._rgba[3] = clamp(alpha, 0, 255) / 255.0;\n\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\n        return this;\n    }\n\n    /**\n     * Specifies the internal rgba store using a color in HSL color space.\n     * @param hue - Hue color component in [0.0, 1.0]\n     * @param saturation - Saturation color component in [0.0, 1.0]\n     * @param lightness - Lightness color component in [0.0, 1.0]\n     * @param alpha - Alpha color component in [0.0, 1.0]\n     * @returns - The color instance (this).\n     */\n    fromHSL(hue: GLclampf, saturation: GLclampf, lightness: GLclampf,\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\n        const previous = duplicate4<GLclampf>(this._rgba);\n\n        const rgb = Color.hsl2rgb([hue, saturation, lightness]);\n        const alphaf = clampf(alpha, 'ALPHA input');\n\n        this._rgba = [rgb[0], rgb[1], rgb[2], alphaf];\n\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\n        return this;\n    }\n\n    /**\n     * Specifies the internal rgba store using a color in CIE-Lab color space.\n     * @param lightness - Lightness color component in [0.0, 1.0]\n     * @param greenRed - Green-Red/a color component in [0.0, 1.0]\n     * @param blueYellow - Blue-Yellow/b color component in [0.0, 1.0]\n     * @param alpha - Alpha color component in [0.0, 1.0]\n     * @returns - The color instance (this).\n     */\n    fromLAB(lightness: GLclampf, greenRed: GLclampf, blueYellow: GLclampf,\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\n        const previous = duplicate4<GLclampf>(this._rgba);\n\n        const rgb = Color.lab2rgb([lightness, greenRed, blueYellow]);\n        const alphaf = clampf(alpha, 'ALPHA input');\n\n        this._rgba = [rgb[0], rgb[1], rgb[2], alphaf];\n\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\n        return this;\n    }\n\n    /**\n     * Specifies the internal rgba store using a color in CMYK color space.\n     * @param cyan - Cyan color component in [0.0, 1.0]\n     * @param magenta - Magenta color component in [0.0, 1.0]\n     * @param yellow - Yellow color component in [0.0, 1.0]\n     * @param key - Key/Black color component in [0.0, 1.0]\n     * @param alpha - Alpha color component in [0.0, 1.0]\n     * @returns - The color instance (this).\n     */\n    fromCMYK(cyan: GLclampf, magenta: GLclampf, yellow: GLclampf, key: GLclampf,\n        alpha: GLclampf = Color.DEFAULT_ALPHA): Color {\n        const previous = duplicate4<GLclampf>(this._rgba);\n\n        const rgb = Color.cmyk2rgb([cyan, magenta, yellow, key]);\n        const alphaf = clampf(alpha, 'ALPHA input');\n\n        this._rgba = [rgb[0], rgb[1], rgb[2], alphaf];\n\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\n        return this;\n    }\n\n    /**\n     * Specifies the internal rgba store using a hexadecimal color string.\n     * @param hex - Hexadecimal color string: red, green, blue, and alpha (optional) each in ['00', 'ff'].\n     * @returns - The color instance (this).\n     */\n    fromHex(hex: string): Color {\n        const previous = duplicate4<GLclampf>(this._rgba);\n\n        this._rgba = Color.hex2rgba(hex);\n\n        this._altered = !equals4<GLclampf>(this._rgba, previous);\n        return this;\n    }\n\n\n    gray(algorithm: Color.GrayscaleAlgorithm = Color.GrayscaleAlgorithm.LinearLuminance): GLclampf {\n\n        switch (algorithm) {\n\n            /* does not represent shades of grayscale w.r.t. human perception of luminosity. */\n            case Color.GrayscaleAlgorithm.Average:\n                return (this._rgba[0] + this._rgba[1] + this._rgba[2]) / 3.0;\n\n            /* flat (reduced contrast) and dark grayscale */\n            case Color.GrayscaleAlgorithm.LeastSaturatedVariant:\n                return (Math.max(this._rgba[0], this._rgba[1], this._rgba[2])\n                    - Math.min(this._rgba[0], this._rgba[1], this._rgba[2])) * 0.5;\n\n            /* provides a darker grayscale */\n            case Color.GrayscaleAlgorithm.MinimumDecomposition:\n                return Math.min(this._rgba[0], this._rgba[1], this._rgba[2]);\n\n            /* provides a brighter grayscale */\n            case Color.GrayscaleAlgorithm.MaximumDecomposition:\n                return Math.max(this._rgba[0], this._rgba[1], this._rgba[2]);\n\n            case Color.GrayscaleAlgorithm.LinearLuminance:\n            /* falls through */\n            default:\n                return this._rgba[0] * 0.2126 + this._rgba[1] * 0.7152 + this._rgba[2] * 0.0722;\n        }\n    }\n\n\n    get rgb(): GLclampf3 {\n        return [this._rgba[0], this._rgba[1], this._rgba[2]];\n    }\n\n    get rgbUI8(): Uint8Array {\n        const ui8Array = new Uint8Array(3);\n        ui8Array[0] = Math.round(this._rgba[0] * 255.0);\n        ui8Array[1] = Math.round(this._rgba[1] * 255.0);\n        ui8Array[2] = Math.round(this._rgba[2] * 255.0);\n        return ui8Array;\n    }\n\n    get rgbF32(): Float32Array {\n        const f32Array = new Float32Array(3);\n        f32Array[0] = this._rgba[0];\n        f32Array[1] = this._rgba[1];\n        f32Array[2] = this._rgba[2];\n        return f32Array;\n    }\n\n    get rgba(): GLclampf4 {\n        return this._rgba;\n    }\n\n    get rgbaUI8(): Uint8Array {\n        const ui8Array = new Uint8Array(4);\n        ui8Array[0] = Math.round(this._rgba[0] * 255.0);\n        ui8Array[1] = Math.round(this._rgba[1] * 255.0);\n        ui8Array[2] = Math.round(this._rgba[2] * 255.0);\n        ui8Array[3] = Math.round(this._rgba[3] * 255.0);\n        return ui8Array;\n    }\n\n    get rgbaF32(): Float32Array {\n        return new Float32Array(this._rgba);\n    }\n\n    get r(): GLclampf {\n        return this._rgba[0];\n    }\n\n    get g(): GLclampf {\n        return this._rgba[1];\n    }\n\n    get b(): GLclampf {\n        return this._rgba[2];\n    }\n\n    get a(): GLclampf {\n        return this._rgba[3];\n    }\n\n\n    get hexRGB(): string {\n        return Color.rgb2hex(this.rgb);\n    }\n\n    get hexRGBA(): string {\n        return Color.rgba2hex(this._rgba);\n    }\n\n\n    get hsl(): GLclampf3 {\n        return Color.rgb2hsl(this.rgb);\n    }\n\n    get hsla(): GLclampf4 {\n        const hsl = Color.rgb2hsl(this.rgb);\n        return [hsl[0], hsl[1], hsl[2], this._rgba[3]];\n    }\n\n\n    get lab(): GLclampf3 {\n        return Color.rgb2lab(this.rgb);\n    }\n\n    get laba(): GLclampf4 {\n        const lab = Color.rgb2lab(this.rgb);\n        return [lab[0], lab[1], lab[2], this._rgba[3]];\n    }\n\n\n    get cmyk(): GLclampf4 {\n        return Color.rgb2cmyk(this.rgb);\n    }\n\n    get cmyka(): GLclampf5 {\n        const cmyk = Color.rgb2cmyk(this.rgb);\n        return [cmyk[0], cmyk[1], cmyk[2], cmyk[3], this._rgba[3]];\n    }\n\n    /**\n     * Whether or not color value has changed.\n     */\n    get altered(): boolean {\n        return this._altered;\n    }\n\n    /**\n     * Intended for resetting alteration status.\n     */\n    set altered(status: boolean) {\n        this._altered = status;\n    }\n\n}\n\n/* istanbul ignore next */\nexport namespace Color {\n\n    export enum GrayscaleAlgorithm {\n        Average,\n        LinearLuminance, /* CIE1931 */\n        LeastSaturatedVariant,\n        MinimumDecomposition,\n        MaximumDecomposition,\n    }\n\n}\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\nvar vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nvec4.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    out[3] = Math.ceil(a[3]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nvec4.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    out[3] = Math.floor(a[3]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nvec4.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    out[3] = Math.round(a[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = glMatrix.RANDOM();\n    out[1] = glMatrix.RANDOM();\n    out[2] = glMatrix.RANDOM();\n    out[3] = glMatrix.RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec4.str = function (a) {\n    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec4.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec4.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n};\n\nmodule.exports = vec4;\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nvec3.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nvec3.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nvec3.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.hermite = function (out, a, b, c, d, t) {\n  var factorTimes2 = t * t,\n      factor1 = factorTimes2 * (2 * t - 3) + 1,\n      factor2 = factorTimes2 * (t - 2) + t,\n      factor3 = factorTimes2 * (t - 1),\n      factor4 = factorTimes2 * (3 - 2 * t);\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.bezier = function (out, a, b, c, d, t) {\n  var inverseFactor = 1 - t,\n      inverseFactorTimesTwo = inverseFactor * inverseFactor,\n      factorTimes2 = t * t,\n      factor1 = inverseFactorTimesTwo * inverseFactor,\n      factor2 = 3 * t * inverseFactorTimesTwo,\n      factor3 = 3 * factorTimes2 * inverseFactor,\n      factor4 = factorTimes2 * t;\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    var z = (glMatrix.RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  \tr[1] = p[1];\n  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  \tr[2] = p[2];\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n   \n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n \n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n \n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }     \n};\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec3.str = function (a) {\n    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n};\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec3.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec3.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2];\n    var b0 = b[0], b1 = b[1], b2 = b[2];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n};\n\nmodule.exports = vec3;\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nmat3.fromValues = function(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n};\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nmat3.set = function(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nmat3.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nmat3.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat3.str = function (a) {\n    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + \n                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n};\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nmat3.sub = mat3.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nmat3.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n};\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nmat3.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    out[6] = a[6] + (b[6] * scale);\n    out[7] = a[7] + (b[7] * scale);\n    out[8] = a[8] + (b[8] * scale);\n    return out;\n};\n\n/*\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat3.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && \n           a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n           a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat3.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = a[6], b7 = b[7], b8 = b[8];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n};\n\n\nmodule.exports = mat3;\n","\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { vec2, vec4 } from 'gl-matrix';\nimport { clamp2, parseVec2, parseVec4 } from './gl-matrix-extensions';\n\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\nimport { GLclampf2, GLsizei2, tuple2, tuple4 } from './tuples';\n\n\nimport { Color } from './color';\nimport { Context } from './context';\nimport { Controller } from './controller';\nimport { MouseEventProvider } from './mouseeventprovider';\nimport { Renderer } from './renderer';\nimport { Resizable } from './resizable';\nimport { Wizard } from './wizard';\nimport { XRController } from './xrcontroller';\n\n\n/**\n * A canvas is associated to a single canvas element (DOM) and integrates or delegates event handling as well as\n * control over the rendering loop and the attached renderer respectively. Furthermore, the canvas can bind a single\n * renderer (non owning) and sets up communication between controller, renderer, and navigation. The controller invokes\n * the renderer's update, frame, and swap methods. The navigation manipulates the renderer's camera. The renderer can\n * invalidate itself which causes a controller update.\n *\n * Note: Since only the multi-frame number is used by the renderer and the controller, the canvas provides getter,\n * setter, and change callback setter. Debug-frame and frame number are managed exclusively by the controller.\n *\n * Note: the canvas should hold any properties that are required to be passed onto a newly bound renderer (in the case\n * multiple renderer are used with a canvas). The clear color is one example of such a property.\n */\nexport class Canvas extends Resizable {\n\n    /**\n     * Default color that is used if none is set via data attributes.\n     */\n    protected static readonly DEFAULT_CLEAR_COLOR: Color = new Color([0.203, 0.227, 0.250, 1.0]);\n\n    /**\n     * Default frame precision, e.g., accumulation format when multi-frame rendering is used.\n     */\n    protected static readonly DEFAULT_FRAME_PRECISION: Wizard.Precision = Wizard.Precision.auto;\n\n    /**\n     * Default multi-frame number used if none is set via data attributes.\n     */\n    protected static readonly DEFAULT_MULTI_FRAME_NUMBER = 0;\n\n\n    /** @see {@link context} */\n    protected _context: Context;\n\n    /** @see {@link controller} */\n    protected _controller: Controller | XRController;\n\n    /** @see {@link renderer} */\n    protected _renderer: Renderer | undefined;\n\n\n    /** @see {@link clearColor} */\n    protected _clearColor: Color;\n\n\n    /**\n     * @see {@link framePrecision}\n     * This property can be observed, e.g., `aCanvas.framePrecisionObservable.subscribe()`.\n     */\n    protected _framePrecision: Wizard.Precision;\n    protected _framePrecisionSubject = new ReplaySubject<Wizard.Precision>(1);\n\n\n    /**\n     * @see {@link size}\n     * This property can be observed, e.g., `aCanvas.sizeObservable.subscribe()`.\n     */\n    protected _size: GLsizei2 = [1, 1];\n    protected _sizeSubject = new ReplaySubject<GLsizei2>(1);\n\n    /**\n     * @see {@link frameScale}\n     * This property can be observed, `aCanvas.frameScaleObservable.subscribe()`.\n     */\n    protected _frameScale: GLclampf2;\n    protected _frameScaleSubject = new ReplaySubject<GLclampf2>(1);\n\n    /**\n     * @see {@link frameSize}\n     * This property can be observed, `aCanvas.frameSizeObservable.subscribe()`.\n     */\n    protected _frameSize: GLsizei2;\n    protected _frameSizeSubject = new ReplaySubject<GLsizei2>(1);\n\n    /**\n     * Flag used to determine whether frame size or frame scale is the dominant configuration.\n     */\n    protected _favorSizeOverScale: boolean;\n\n\n    /** @see {@link element} */\n    protected _element: HTMLCanvasElement;\n\n    /** @see {@link mouseEventProvider} */\n    protected _mouseEventProvider: MouseEventProvider;\n\n\n    /**\n     * Create and initialize a multi-frame controller, setup a default multi-frame number and get the canvas's webgl\n     * context as well as the canvas resolution. The context and resolution will be passed on to the set renderer and\n     * its stages/passes appropriately. The canvas does not provide lazy initialization and is strictly bound to a\n     * single canvas element (DOM) that cannot be changed.\n     *\n     * Note: the multi-frame number can be set using a data attribute in the canvas element called\n     * 'data-multi-frame-number'.\n     *\n     * The canvas supports the following data attributes:\n     * - data-multi-frame-number {number} - integer greater than 0\n     * - data-clear-color {Color} - rgba color for clearing\n     * - data-frame-scale {GLclampf2} - width and height frame scale in [0.0,1.0]\n     * - data-frame-size {GLizei2} - width and height frame size in pixel\n     * - data-frame-precision {RenderPrecision} - precision for, e.g., frame accumulation\n     * , either 'float', 'half', 'byte', or 'auto'.\n     *\n     * Note: data-frame-size takes precedence if both frame-scale and frame-size data attributes are provided.\n     * @param element - Canvas element or element id {string} to be used for querying the canvas element.\n     */\n    constructor(element: HTMLCanvasElement | string, contextAttributes?: WebGLContextAttributes,\n        controller?: Controller | XRController) {\n        super(); // setup resize event handling\n        this._element = element instanceof HTMLCanvasElement ? element :\n            document.getElementById(element) as HTMLCanvasElement;\n        this._mouseEventProvider = new MouseEventProvider(this._element, 200);\n\n        const dataset = this._element.dataset;\n\n        /* Requesting a context asserts when no context could be created. */\n        this._context = Context.request(this._element, contextAttributes);\n        if (controller) {\n            this._controller = controller;\n            this._controller.block(); // Remain in block mode until renderer is bound and configured.\n        } else {\n            this.configureController(dataset);\n        }\n\n        this.configureSizeAndScale(dataset);\n\n        /* Retrieve clear color from data attributes or set default. */\n        let dataClearColor: vec4 | undefined;\n        if (dataset.clearColor) {\n            dataClearColor = parseVec4(dataset.clearColor);\n            logIf(dataClearColor === undefined, LogLevel.Dev,\n                `data-clear-color could not be parsed, given '${dataset.clearColor}'`);\n        }\n        this._clearColor = dataClearColor ? new Color(tuple4<GLclampf>(dataClearColor)) : Canvas.DEFAULT_CLEAR_COLOR;\n\n        /* Retrieve frame precision (e.g., accumulation format) from data attributes or set default */\n        let dataFramePrecision = dataset.accumulationFormat ?\n            dataset.accumulationFormat as Wizard.Precision : Canvas.DEFAULT_FRAME_PRECISION;\n        if (!(dataFramePrecision in Wizard.Precision)) {\n            dataFramePrecision = Canvas.DEFAULT_FRAME_PRECISION;\n            log(LogLevel.Dev,\n                `unknown frame precision '${dataset.accumulationFormat}' changed to '${dataFramePrecision}'`);\n        }\n        this._framePrecision = dataFramePrecision;\n        this.framePrecisionNext();\n    }\n\n    /**\n     * Creates and initializes a new controller that is used for this canvas. If provided via data attributes\n     * multi-frame number and debug-frame number are set.\n     * @param dataset - The attributes data-multi-frame-number and data-debug-frame-number are supported.\n     */\n    protected configureController(dataset: DOMStringMap): void {\n        /* Create and setup a multi-frame controller. */\n        this._controller = new Controller();\n        this._controller.block(); // Remain in block mode until renderer is bound and configured.\n\n        /* Retrieve multi-frame number from data attributes or set default. */\n        let dataMFNum: number | undefined;\n        if (dataset.multiFrameNumber) {\n            dataMFNum = parseInt(dataset.multiFrameNumber, 10);\n            logIf(isNaN(dataMFNum), LogLevel.Dev,\n                `data-multi-frame-number could not be parsed, given '${dataset.multiFrameNumber}'`);\n        }\n\n        /* Retrieve debug-frame number from data attributes or set default. */\n        let dataDFNum: number | undefined;\n        if (dataset.debugFrameNumber) {\n            dataDFNum = parseInt(dataset.debugFrameNumber, 10);\n            logIf(isNaN(dataDFNum), LogLevel.Dev,\n                `data-debug-frame-number could not be parsed, given '${dataset.debugFrameNumber}'`);\n        }\n\n        this._controller.multiFrameNumber = dataMFNum ? dataMFNum : Canvas.DEFAULT_MULTI_FRAME_NUMBER;\n        this._controller.debugFrameNumber = dataDFNum ? dataDFNum : 0;\n\n        const mfNumChanged = dataMFNum ? dataMFNum !== this._controller.multiFrameNumber : false;\n        logIf(mfNumChanged, LogLevel.Dev, `data-multi-frame-number changed to `\n            + `${this._controller.multiFrameNumber}, given '${dataset.multiFrameNumber}'`);\n\n        const dfNumChanged = dataDFNum ? dataDFNum !== this._controller.debugFrameNumber : false;\n        logIf(dfNumChanged, LogLevel.Dev, `data-debug-frame-number changed to `\n            + `${this._controller.debugFrameNumber}, given '${dataset.debugFrameNumber}'`);\n    }\n\n\n    /**\n     * Initializes the frame size and scale. By default, the scale is 1.0 for width and height and the size reflects\n     * the native canvas size.\n     * @param dataset - The attributes data-frame-size and data-frame-scale are supported.\n     */\n    protected configureSizeAndScale(dataset: DOMStringMap): void {\n\n        /* Setup frame scale with respect to the canvas size. */\n        let dataFrameScale: vec2 | undefined;\n        if (dataset.frameScale) {\n            dataFrameScale = parseVec2(dataset.frameScale);\n            logIf(dataset.frameScale !== undefined && dataFrameScale === undefined, LogLevel.Dev,\n                `data-frame-scale could not be parsed, given '${dataset.frameScale}'`);\n        }\n        this._frameScale = dataFrameScale ? tuple2<GLfloat>(dataFrameScale) : [1.0, 1.0];\n\n        /* Setup frame size. */\n        let dataFrameSize: vec2 | undefined;\n        if (dataset.frameSize) {\n            dataFrameSize = parseVec2(dataset.frameSize);\n            logIf(dataset.frameSize !== undefined && dataFrameSize === undefined, LogLevel.Dev,\n                `data-frame-size could not be parsed, given '${dataset.frameSize}'`);\n        }\n        this._favorSizeOverScale = dataFrameSize !== undefined;\n        this._frameSize = dataFrameSize ? tuple2<GLsizei>(dataFrameSize) : [this._size[0], this._size[1]];\n\n        this.onResize(); // invokes frameScaleNext and frameSizeNext\n    }\n\n\n    /**\n     * Convenience function that triggers the canvas size retrieval. The native width and height of the canvas dom\n     * element is cached (in pixel).\n     */\n    protected retrieveSize(): void {\n        const size = Resizable.elementSize(this._element);\n        this._size = [size[0], size[1]];\n        this.sizeNext();\n    }\n\n    /**\n     * Resize is invoked by the resizable mixin. It retrieves the canvas size and promotes it to the renderer.\n     */\n    protected onResize(): void {\n        this.retrieveSize();\n\n        /**\n         * Set canvas rendering size to pixel size of the canvas. This assures a 1 to 1 mapping of native pixels to\n         * fragments and thus should prevent upscaling.\n         */\n        this._element.width = this._size[0];\n        this._element.height = this._size[1];\n\n        if (this._renderer) {\n            this._controller.block();\n        }\n\n        if (this._favorSizeOverScale) {\n            this.frameSize = this._frameSize;\n        } else {\n            this.frameScale = this._frameScale;\n        }\n\n        if (this._renderer) {\n            this._controller.unblock();\n        }\n    }\n\n    /**\n     * Utility for communicating this._framePrecision changes to its associated subject.\n     */\n    protected framePrecisionNext(): void {\n        this._framePrecisionSubject.next(this._framePrecision);\n    }\n\n    /**\n     * Utility for communicating this._size changes to its associated subject.\n     */\n    protected sizeNext(): void {\n        this._sizeSubject.next(this._size);\n    }\n\n    /**\n     * Utility for communicating this._frameScale changes to its associated subject.\n     */\n    protected frameScaleNext(): void {\n        this._frameScaleSubject.next(this._frameScale);\n    }\n\n    /**\n     * Utility for communicating this._frameSize changes to its associated subject.\n     */\n    protected frameSizeNext(): void {\n        this._frameSizeSubject.next(this._frameSize);\n    }\n\n\n    /**\n     * The renderer (if not null) will be connected to the controller and navigation. The controller will\n     * immediately trigger a multi-frame, thereby causing the renderer to render frames.\n     *\n     * Note that no renderer should be bound to multiple canvases\n     * simultaneously. The reference is non owning.\n     *\n     * @param renderer - Either undefined or an uninitialized renderer.\n     */\n    protected bind(renderer: Renderer | undefined): void {\n        if (this._renderer === renderer) {\n            return;\n        }\n        this.unbind(); // block controller\n        if (renderer === undefined) {\n            return;\n        }\n        assert(this._controller.blocked, `expected controller to be blocked`);\n        this._renderer = renderer;\n\n        /**\n         * Note: a renderer that is to be bound to a canvas is expected to be not initialized. For it, initializable\n         * throws on re-initialization. Similarly to the frame callback for the controller, the controller's update\n         * method is assigned to the pipelines invalidation event.\n         */\n        this._renderer.initialize(this.context, (force) => this._controller.update(force),\n            this._mouseEventProvider /*, this._keyEventProvider, this._touchEventProvider */);\n\n        this._renderer.frameSize = this._frameSize;\n        this._renderer.clearColor = this._clearColor.rgba;\n        this._renderer.framePrecision = this._framePrecision;\n        this._renderer.debugTexture = -1;\n\n        /**\n         * Note: again, no asserts required since controller and renderer already take care of that.\n         * Assign the renderer's update, frame, and swap method to the controller's frame and swap event callback.\n         * The assignments trigger immediate update and subsequently updates on invalidation.\n         */\n        this._controller.controllable = this._renderer;\n        this._controller.unblock();\n    }\n\n    /**\n     * Unbinds the current renderer from the canvas as well as the controller and navigation, and uninitializes the\n     * renderer.\n     */\n    protected unbind(): void {\n        if (this._renderer === undefined) {\n            return;\n        }\n\n        this._controller.block();\n        /**\n         * Since canvas is not the owner of the renderer it should not dispose it. However, the canvas manages the\n         * initialization of bound pipelines.\n         */\n        this._controller.controllable = undefined;\n        this._renderer = undefined;\n    }\n\n\n    /**\n     * Uninitializes and deletes the controller as well as all other properties.\n     */\n    dispose(): void {\n        super.dispose();\n\n        if (this._renderer) {\n            this._renderer.uninitialize();\n            this.unbind();\n        }\n    }\n\n    /**\n     * Allows for explicit trigger of onResize, e.g., in case resize event-handling is managed explicitly ...\n     */\n    resize(): void {\n        this.onResize();\n    }\n\n\n    /**\n     * Single controller that is managing the rendering control flow of a bound renderer.\n     * @returns - The controller used by the canvas.\n     */\n    get controller(): Controller {\n        return this._controller as Controller; // TODO!\n    }\n\n    /**\n     * The currently bound renderer. If no renderer is bound null is returned. If a renderer is bound, it should\n     * always be initialized (renderer initialization handled by the canvas).\n     * @returns - The currently bound renderer.\n     */\n    get renderer(): Renderer | undefined {\n        return this._renderer;\n    }\n\n    /**\n     * Binds a renderer to the canvas. A previously bound renderer will be unbound (see bind and unbind).\n     * @param renderer - A renderer object or undefined.\n     */\n    set renderer(renderer: Renderer | undefined) {\n        this.bind(renderer);\n    }\n\n    /**\n     * Targeted scale for rendering with respect to the canvas size. This property can be observed, e.g.,\n     * `canvas.frameScaleObservable.subscribe()`.\n     * @returns - The frame scale in [0.0, 1.0].\n     */\n    get frameScale(): GLclampf2 {\n        return this._frameScale;\n    }\n\n    /**\n     * Set the targeted scale for rendering with respect to the canvas size. The scale will be clamped to [0.0,1.0]. A\n     * scale of 0.0 results in 1px frame resolution for the respective component.\n     * The frame scale allows to detach the rendering resolution from the native canvas resolution, e.g., in order to\n     * decrease rendering cost. The frame resolution can also be specified explicitly by width and height.\n     * @param frameScale - Scale of rendering.\n     * @returns - The frame scale in [0.0,1.0].\n     */\n    set frameScale(frameScale: GLclampf2) {\n        /* Always apply frame scale, e.g., when canvas is resized scale remains same, but frame size will change. */\n        logIf(frameScale[0] < 0.0 || frameScale[0] > 1.0, LogLevel.Dev,\n            `frame width scale clamped to [0.0,1.0], given ${frameScale[0]}`);\n        logIf(frameScale[1] < 0.0 || frameScale[1] > 1.0, LogLevel.Dev,\n            `frame height scale clamped to [0.0,1.0], given ${frameScale[0]}`);\n\n        const scale = vec2.create();\n        clamp2(scale, frameScale, [0.0, 0.0], [1.0, 1.0]);\n\n        const size = vec2.create();\n        vec2.mul(size, this._size, scale);\n        vec2.max(size, [1, 1], size);\n        vec2.round(size, size);\n\n        /* Adjust scale based on rounded (integer) frame size. */\n        vec2.div(scale, size, this._size);\n        logIf(!vec2.exactEquals(scale, frameScale), 2,\n            `frame scale was adjusted to ${scale.toString()}, given ${frameScale.toString()}`);\n\n        this._frameScale = tuple2<GLclampf>(scale);\n        this._frameSize = tuple2<GLsizei>(size);\n        this._favorSizeOverScale = false;\n\n        this.frameScaleNext();\n        this.frameSizeNext();\n\n        if (this._renderer) {\n            this._renderer.frameSize = this._frameSize;\n        }\n    }\n\n    /**\n     * Observable that can be used to subscribe to frame scale changes.\n     */\n    get frameScaleObservable(): Observable<GLclampf2> {\n        return this._frameScaleSubject.asObservable();\n    }\n\n\n    /**\n     * Targeted resolution (width and height) for rendering in pixel. This property can be observed, e.g.,\n     * `canvas.frameSizeObservable.subscribe()`.\n     * @returns - The frame size in pixel (must not be physical/native pixels).\n     */\n    get frameSize(): GLsizei2 {\n        return this._frameSize;\n    }\n\n    /**\n     * Set the targeted size for rendering in pixels. The size will be clamped to [1, canvas-size]. The frame size\n     * allows to detach the rendering resolution from the native canvas resolution, e.g., in order to decrease\n     * rendering cost.\n     * The render resolution can also be specified implicitly by width and height in scale (@see frameScale).\n     * @param frameSize - Size for rendering in pixel (must not be physical/native pixels).\n     * @returns - The frame size in [1, canvas-size].\n     */\n    set frameSize(frameSize: GLsizei2) {\n        logIf(frameSize[0] < 1 || frameSize[0] > this._size[0], LogLevel.Dev,\n            `frame width scale clamped to [1,${this._size[0]}], given ${frameSize[0]}`);\n        logIf(frameSize[1] < 1 || frameSize[1] > this._size[1], LogLevel.Dev,\n            `frame height scale clamped to [1, ${this._size[1]}], given ${frameSize[1]}`);\n\n        const size = vec2.create();\n        clamp2(size, frameSize, [1.0, 1.0], this._size);\n        vec2.round(size, size);\n\n        logIf(!vec2.exactEquals(size, frameSize), LogLevel.ModuleDev,\n            `frame size was adjusted to ${size.toString()}, given ${frameSize.toString()}`);\n\n        const scale = vec2.create();\n        vec2.div(scale, size, this._size);\n\n        this._frameScale = tuple2<GLclampf>(scale);\n        this._frameSize = tuple2<GLsizei>(size);\n        /* Switch back to default mode (scale based) when frame size matches canvas size. */\n        this._favorSizeOverScale = !vec2.exactEquals(this._frameSize, this._size);\n\n        this.frameScaleNext();\n        this.frameSizeNext();\n\n        if (this._renderer) {\n            this._renderer.frameSize = this._frameSize;\n        }\n    }\n\n    /**\n     * Observable that can be used to subscribe to frame size changes.\n     */\n    get frameSizeObservable(): Observable<GLsizei2> {\n        return this._frameSizeSubject.asObservable();\n    }\n\n\n    /**\n     * Getter for the canvas's clear color. The clear color is provided to the renderer (on bind). Since this is a\n     * canvas specific setting it is stored here, not in a renderer or controller.\n     * @returns - Color object passed to any renderer bound to this canvas.\n     */\n    get clearColor(): Color {\n        return this._clearColor;\n    }\n\n    /**\n     * Sets the clear color that is then passed to the currently bound renderer as well as to any pipelines bound in\n     * the future. The provided color will be clamped to [0.0;1.0] for every component.\n     * @param clearColor - Color object that will be referenced.\n     */\n    set clearColor(clearColor: Color) {\n        this._clearColor = clearColor;\n        if (this._renderer) {\n            this._renderer.clearColor = this._clearColor.rgba;\n        }\n    }\n\n\n    /**\n     * Getter for the targeted frame precision. This property can be observed, e.g.,\n     * `canvas.framePrecisionObservable.subscribe()`.\n     * @returns - Accumulation format as string passed to any renderer bound.\n     */\n    get framePrecision(): Wizard.Precision {\n        return this._framePrecision;\n    }\n\n    /**\n     * Sets the targeted frame precision that is then passed to the currently bound renderer as well as to any renderers\n     * bound in the future. This might be used for frame accumulation in multi-frame based rendering.\n     * @param precision - Frame precision, 'float', 'half', 'byte' or 'auto' are supported.\n     */\n    set framePrecision(precision: Wizard.Precision) {\n        this._framePrecision = precision;\n\n        if (this._renderer) {\n            this._renderer.framePrecision = this._framePrecision;\n            this._framePrecision = this._renderer.framePrecision; // might change due to missing support\n        }\n        this.framePrecisionNext();\n    }\n\n    /**\n     * Observable that can be used to subscribe to frame precision changes.\n     */\n    get framePrecisionObservable(): Observable<string> {\n        return this._framePrecisionSubject.asObservable();\n    }\n\n\n    /**\n     * Provides access to the WebGL context (leaky abstraction).\n     */\n    get context(): Context {\n        return this._context;\n    }\n\n    /**\n     * Getter for the created rendering backend (webgl context type).\n     * @returns - Backend that was created on construction, either 'webgl' or 'webgl2' based on which one was created\n     * successfully. If no context could be created null is returned.\n     */\n    get backend(): string {\n        return this._context.backendString as string;\n    }\n\n\n    /**\n     * Size of the canvas measured in physical/native screen pixels. This is the 'managed' canvas width and height. The\n     * unmanaged canvas width and height are available via context.gl.canvas.width and context.gl.canvas.height (which\n     * should always be the same).\n     * This property can be observed, e.g., `allocationRegister.bytesObservable.subscribe()`.\n     * @returns - The canvas width and height in physical/native screen pixels as 2-tuple.\n     */\n    get size(): GLsizei2 {\n        return this._size;\n    }\n\n    /**\n     * Observable that can be used to subscribe to canvas size changes.\n     */\n    get sizeObservable(): Observable<GLsizei2> {\n        return this._sizeSubject.asObservable();\n    }\n\n\n    /**\n     * Width of the canvas measured in physical/native screen pixels. This is the 'managed' canvas width. The\n     * unmanaged canvas width is available via context.gl.canvas_width (which should always be the same).\n     * @returns - The canvas width in physical/native screen pixels.\n     */\n    get width(): GLsizei {\n        return this._size[0];\n    }\n\n    /**\n     * Height of the canvas measured in physical/native screen pixels. This is the 'managed' canvas height. The\n     * unmanaged canvas height is available via context.gl.canvas_height (which should always be the same).\n     * @returns - The canvas height in physical/native screen pixels.\n     */\n    get height(): GLsizei {\n        return this._size[1];\n    }\n\n\n    /**\n     * Canvas element within the HTML5 document.\n     */\n    get element(): HTMLElement {\n        return this._element;\n    }\n\n\n    /**\n     * Canvas mouse event provider referring to the canvas element.\n     */\n    get mouseEventProvider(): MouseEventProvider {\n        return this._mouseEventProvider;\n    }\n\n}\n","\n\n/** Namespace that comprises extensions by WebGL version (also cleans up documentation). */\nnamespace extensions {\n\n    /**\n     * All extensions specified for WebGL. This array is used to verify extension queries in WebGL contexts. Most of\n     * these extensions should not be queried in WebGL2.\n     */\n    export const WEBGL1_EXTENSIONS: Array<string> = [\n\n        'ANGLE_instanced_arrays',\n\n        'EXT_blend_minmax',\n        'EXT_color_buffer_half_float',\n        'EXT_disjoint_timer_query',\n        'EXT_frag_depth',\n        'EXT_sRGB',\n        'EXT_shader_texture_lod',\n        'EXT_texture_filter_anisotropic',\n\n        'OES_element_index_uint',\n        'OES_standard_derivatives',\n        'OES_texture_float',\n        'OES_texture_float_linear',\n        'OES_texture_half_float',\n        'OES_texture_half_float_linear',\n        'OES_vertex_array_object',\n\n        'WEBGL_color_buffer_float',\n        'WEBGL_compressed_texture_astc',\n        'WEBGL_compressed_texture_atc',\n        'WEBGL_compressed_texture_etc',\n        'WEBGL_compressed_texture_etc1',\n        'WEBGL_compressed_texture_pvrtc',\n        'WEBGL_compressed_texture_s3tc',\n        'WEBGL_compressed_texture_s3tc_srgb',\n        'WEBGL_debug_renderer_info',\n        'WEBGL_debug_shaders',\n        'WEBGL_depth_texture',\n        'WEBGL_draw_buffers',\n        'WEBGL_lose_context',\n    ];\n\n    /**\n     * All extensions specified for WebGL2. This array is used to verify extension queries in WebGL2 contexts.\n     */\n    export const WEBGL2_EXTENSIONS: Array<string> = [\n\n        'EXT_color_buffer_float',\n        'EXT_disjoint_timer_query_webgl2',\n        'EXT_texture_filter_anisotropic',\n\n        'OES_texture_float_linear',\n        'OES_texture_half_float_linear',\n\n        'WEBGL_compressed_texture_astc',\n        'WEBGL_compressed_texture_atc',\n        'WEBGL_compressed_texture_etc',\n        'WEBGL_compressed_texture_etc1',\n        'WEBGL_compressed_texture_pvrtc',\n        'WEBGL_compressed_texture_s3tc',\n        'WEBGL_compressed_texture_s3tc_srgb',\n        'WEBGL_debug_renderer_info',\n        'WEBGL_debug_shaders',\n        'WEBGL_lose_context',\n    ];\n\n    /**\n     * WebGL extensions that are supported by default in WebGL2.\n     */\n    export const WEBGL2_DEFAULT_EXTENSIONS: Array<string> = [\n        'ANGLE_instanced_arrays',\n\n        'EXT_blend_minmax',\n        'EXT_frag_depth',\n        'EXT_sRGB',\n        'EXT_shader_texture_lod',\n\n        'OES_element_index_uint',\n        'OES_standard_derivatives',\n        'OES_texture_float',\n        'OES_texture_half_float',\n        'OES_vertex_array_object',\n\n        'WEBGL_depth_texture',\n        'WEBGL_draw_buffers',\n    ];\n\n}\n\nexport = extensions;\n","\nimport { assert, GETparameter } from './auxiliaries';\n\nimport { ExtensionsHash } from './extensionshash';\n\n\n/**\n * Mask object for context masquerade. It is used to artificially restrict the capabilities of context instances.\n * It is intended to simplify cross-browser testing without actually using different browsers.\n *\n * A mask can be instantiated in four different ways:\n * 1. by creating the object and explicitly configuring all values as required.\n * 2. from a preset identifier (all presets are stored in assets/masquerade.json).\n * 3. from an extension hash\n * 4. from GET parameters, either 'msqrd_p=<Identifer>' or 'msqrd_h=<ExtensionsHash>'.\n *\n * Intended use; when the context's static masquerade is set, all subsequent instances apply that mask:\n * ```\n * Context.masquerade = ContextMasquerade.fromHash('288M01-o');\n * ```\n */\nexport class ContextMasquerade {\n\n    /** @see {@link presets} */\n    protected static readonly MASQUERADE_JSON: ContextMasquerade.Presets = require('./data/masquerade.json');\n\n    /** @see {@link backend} */\n    protected _backend: string;\n\n    /** @see {@link extensionsStrive} */\n    protected _extensionsStrive = new Array<string>();\n\n    /** @see {@link extensionsConceal} */\n    protected _extensionsConceal = new Array<string>();\n\n    /** @see {@link functionsUndefine} */\n    protected _functionsUndefine = new Array<string>();\n\n    /**\n     * Generates a mask based on an extensions hash (encoding backend and extensions_strive). If extensions are strived\n     * for, all extensions that are not explicitly mentioned will be added to the list of concealed extensions.\n     * @param hash - Hash that is to be decoded for backend and extensions data.\n     */\n    static fromHash(hash: string): ContextMasquerade {\n        const mask = new ContextMasquerade();\n        const tuple = ExtensionsHash.decode(hash);\n\n        mask._backend = tuple[0];\n        mask._extensionsStrive = tuple[1];\n        mask._extensionsConceal = ExtensionsHash.complement(mask._backend, mask._extensionsStrive);\n\n        return mask;\n    }\n\n    /**\n     * Creates a context mask based on a preset. Note that the presence of an extensions_hash overrides the backend,\n     * extensions_strive, as well as extensions_conceal. Only the functions_undefine will be preserved in that case.\n     * @param identifier - Name of a preset as specified in masquerade.json.\n     */\n    static fromPreset(identifier: string): ContextMasquerade {\n        const mask = new ContextMasquerade();\n\n        const identifiers = new Array<string>();\n        let preset: ContextMasquerade.Preset | undefined;\n        for (const p of ContextMasquerade.presets()) {\n            identifiers.push(p.identifier);\n            if (p.identifier !== identifier) {\n                continue;\n            }\n            preset = p;\n            break;\n        }\n\n        if (preset === undefined) {\n            assert(false,\n                `expected valid identifier, available ['${identifiers.join('\\', \\'')}'], given '${identifier}'`);\n            return mask;\n        }\n        preset = preset as ContextMasquerade.Preset;\n\n        if (preset.extensions_hash !== undefined) {\n            const tuple = ExtensionsHash.decode(preset.extensions_hash);\n            mask._backend = tuple[0];\n            mask._extensionsStrive = tuple[1];\n        } else {\n            mask._backend = preset.backend;\n            mask._extensionsConceal = preset.extensions_conceal;\n            mask._extensionsStrive = preset.extensions_strive;\n        }\n        mask._functionsUndefine = preset.functions_undefine;\n\n        assert(mask._backend !== undefined,\n            'expected backend to be included in preset');\n\n        if (mask._extensionsStrive === undefined) {\n            mask._extensionsStrive = [];\n        } else {\n            mask._extensionsConceal = ExtensionsHash.complement(mask._backend, mask._extensionsStrive);\n        }\n\n        if (mask._extensionsConceal === undefined) {\n            mask._extensionsConceal = [];\n        }\n\n        if (mask._functionsUndefine === undefined) {\n            mask._functionsUndefine = [];\n        }\n\n        return mask;\n    }\n\n    /**\n     * Tries to generate a mask based on GET parameters: if msqrd_h is present, its value is interpreted as\n     * extensions hash and a mask is generated from hash. If no hash was found, presence of msqrd_p is evaluated and if\n     * found, a mask is generated from preset identifier.\n     */\n    static fromGET(): ContextMasquerade | undefined {\n        const msqrdHash = GETparameter('msqrd_h');\n        if (msqrdHash !== undefined) {\n            return ContextMasquerade.fromHash(msqrdHash);\n        }\n        const msqrdPreset = GETparameter('msqrd_p');\n        if (msqrdPreset !== undefined) {\n            return ContextMasquerade.fromPreset(msqrdPreset);\n        }\n        return undefined;\n    }\n\n    /*\n     * Presets for emulation of various browsers. This can be used to maintain multiple test configurations and\n     * simplify cross-browser testing without actually using different browsers.\n     */\n    static presets() {\n        return this.MASQUERADE_JSON.presets;\n    }\n\n    /**\n     * Defines the backend (currently either 'webgl1' or 'webgl2').\n     */\n    get backend() {\n        return this._backend;\n    }\n\n    /**\n     * Extensions that the context should strive to support. The support can only go as far as the extensions are\n     * actually supported.\n     */\n    get extensionsStrive() {\n        return this._extensionsStrive;\n    }\n\n    /**\n     * Extensions that the context should conceal support of. This only affects supported extensions, which will\n     * be reported to be not supported.\n     */\n    get extensionsConceal() {\n        return this._extensionsConceal;\n    }\n\n    /**\n     * Functions that the context should delete during construction. Since WebGL context functions cannot be deleted\n     * they are undefined instead.\n     */\n    get functionsUndefine() {\n        return this._functionsUndefine;\n    }\n}\n\n\nexport namespace ContextMasquerade {\n\n    /**\n     * Interfaces required to prevent implicit any when parsing masquerade.json.\n     */\n    export interface Preset {\n        identifier: string;\n        backend: string;\n        extensions_hash: string;\n        extensions_strive: Array<string>;\n        extensions_conceal: Array<string>;\n        functions_undefine: Array<string>;\n    }\n\n    /**\n     * Interfaces required to prevent implicit any when parsing masquerade.json.\n     */\n    export interface Presets {\n        presets: Array<Preset>;\n    }\n\n}\n","\nimport { assert, logIf, LogLevel } from './auxiliaries';\n\nimport { Context } from './context';\nimport { Framebuffer } from './framebuffer';\nimport { Initializable } from './initializable';\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\nimport { Program } from './program';\nimport { Shader } from './shader';\nimport { Texture2 } from './texture2';\n\n\n/**\n * This rendering pass blits the color attachment of a given rgba-framebuffer into the target buffer provided on frame.\n * For rendering, a direct blit is used. However, if this is not supported, a textured, screen-aligned triangle is used\n * for blitting as fallback.\n *\n * The blit component can be used as follows:\n * ```\n * this.blit.framebuffer = this.intermediateFBO;\n * this.blit.frame(this.defaultFBO, null, null);\n * ```\n */\nexport class BlitPass extends Initializable {\n\n    /**\n     * Read-only access to the objects context, used to get context information and WebGL API access.\n     */\n    protected _context: Context;\n\n    /** @see {@link target} */\n    protected _target: Framebuffer;\n\n    /** @see {@link framebuffer} */\n    protected _framebuffer: Framebuffer;\n\n    /** @see {@link readBuffer} */\n    protected _readBuffer: GLenum;\n\n    /** @see {@link drawBuffer} */\n    protected _drawBuffer: GLenum;\n\n    /* Indirect blit and fallback implementation. */\n\n    /**\n     * Geometry used to draw on. This is not provided by default to allow for geometry sharing. If no triangle is given,\n     * the ndc triangle will be created and managed internally.\n     */\n    protected _ndcTriangle: NdcFillingTriangle;\n\n    /**\n     * Tracks ownership of the ndc-filling triangle.\n     */\n    protected _ndcTriangleShared = false;\n\n    protected _program: Program;\n\n\n    constructor(context: Context) {\n        super();\n        this._context = context;\n    }\n\n    /**\n     * Uses direct blit via glBlitFramebuffer for blitting a single read buffer into the given target's draw buffer.\n     */\n    private functionBlit(): void {\n        const gl = this._context.gl;\n\n        this._target.bind(gl.DRAW_FRAMEBUFFER);\n        this._framebuffer.bind(gl.READ_FRAMEBUFFER);\n        gl.readBuffer(this._readBuffer);\n        gl.drawBuffers([this._drawBuffer]);\n\n        /**\n         * The glClear is somehow required to make the blit work. Reducing the clear area to zero is intended to reduce\n         * the actual load of clear.\n         */\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.disable(gl.SCISSOR_TEST);\n\n        gl.blitFramebuffer(0, 0, this._framebuffer.width, this._framebuffer.height, 0, 0\n            , this._target.width, this._target.height, gl.COLOR_BUFFER_BIT, gl.NEAREST);\n\n        this._framebuffer.unbind(gl.READ_FRAMEBUFFER);\n        this._target.unbind(gl.DRAW_FRAMEBUFFER);\n    }\n\n    /**\n     * Uses indirect blit by drawing a textured, screen-aligned triangle into the given target framebuffer.\n     */\n    private programBlit(): void {\n        assert(this._ndcTriangle && this._ndcTriangle.initialized, `expected an initialized ndc triangle`);\n        const gl = this._context.gl;\n\n        gl.viewport(0, 0, this._target.width, this._target.height);\n\n        this._program.bind();\n\n        const texture = this._framebuffer.texture(this._readBuffer) as Texture2;\n        texture.bind(gl.TEXTURE0);\n\n        const target = this._context.isWebGL2 ? gl.DRAW_FRAMEBUFFER : gl.FRAMEBUFFER;\n        this._target.bind(target);\n        this._ndcTriangle.bind();\n        this._ndcTriangle.draw();\n        this._ndcTriangle.unbind();\n        this._target.unbind(target);\n\n        texture.unbind();\n\n        /* Every pass is expected to bind its own program when drawing, thus, unbinding is not necessary. */\n        // this.program.unbind();\n    }\n\n    /**\n     * Specializes this pass's initialization. This pass either requires blitFramebuffer support or creates screen-\n     * aligned triangle geometry and a single program. All attribute and dynamic uniform locations are cached.\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\n     * triangle will be created internally.\n     */\n    @Initializable.initialize()\n    initialize(ndcTriangle?: NdcFillingTriangle): boolean {\n        const gl = this._context.gl;\n\n        /* Configure program-based blit. */\n\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (blit)');\n        vert.initialize(require('./shaders/ndcvertices.vert'));\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'blit.frag');\n        frag.initialize(require('./shaders/blit.frag'));\n\n        this._program = new Program(this._context, 'BlitProgram');\n        this._program.initialize([vert, frag]);\n\n        this._program.bind();\n        gl.uniform1i(this._program.uniform('u_texture'), 0);\n        this._program.unbind();\n\n\n        if (ndcTriangle === undefined) {\n            this._ndcTriangle = new NdcFillingTriangle(this._context);\n        } else {\n            this._ndcTriangle = ndcTriangle;\n            this._ndcTriangleShared = true;\n        }\n\n        if (!this._ndcTriangle.initialized) {\n            const aVertex = this._program.attribute('a_vertex', 0);\n            this._ndcTriangle.initialize(aVertex);\n        } else {\n            this._program.attribute('a_vertex', this._ndcTriangle.aVertex);\n        }\n\n        return true;\n    }\n\n    /**\n     * Specializes this pass's uninitialization. Program and geometry resources are released (if allocated). Cached\n     * uniform and attribute locations are invalidated.\n     */\n    @Initializable.uninitialize()\n    uninitialize(): void {\n        if (!this._ndcTriangleShared && this._ndcTriangle.initialized) {\n            this._ndcTriangle.uninitialize();\n        }\n        this._program.uninitialize();\n    }\n\n    /**\n     * A blit frame either blits or draws the color attachment of the given framebuffer to the target framebuffer. For\n     * program based/indirect blit a viewport filling area, i.e., a screen-aligned triangle is used.\n     */\n    @Initializable.assert_initialized()\n    frame() {\n        logIf(!this._target || !this._target.valid, LogLevel.Dev, `valid target expected, given ${this._target}`);\n        logIf(!this._framebuffer || !this._framebuffer.valid, LogLevel.Dev,\n            `valid framebuffer for blitting from expected, given ${this._framebuffer}`);\n\n        const gl = this._context.gl;\n\n        switch (this._readBuffer) {\n            /* falls through */\n            case gl.DEPTH_ATTACHMENT:\n            case gl.STENCIL_ATTACHMENT:\n            case gl.DEPTH_STENCIL_ATTACHMENT:\n                return this.programBlit();\n            default:\n                break;\n        }\n\n        /* BlitFramebuffer is not an extension and, thus, it does not need to be enabled. */\n        if (this._context.supportsBlitFramebuffer) {\n            return this.functionBlit();\n        }\n        this.programBlit();\n    }\n\n    /**\n     * Sets the framebuffer that is to be blitted.\n     * @param framebuffer - Framebuffer that is to be blitted.\n     */\n    set framebuffer(framebuffer: Framebuffer) {\n        this.assertInitialized();\n        this._framebuffer = framebuffer;\n    }\n\n    /**\n     * The read buffer to blit from (currently, this is expected to refer to a texture attachment of this._framebuffer).\n     * @param readBuffer - GLenum that is to be queried from the FBO.\n     */\n    set readBuffer(readBuffer: GLenum) {\n        this.assertInitialized();\n        this._readBuffer = readBuffer;\n    }\n\n    /**\n     * The draw buffer to blit to (currently, this is expected to refer to a texture attachment of this._target or\n     * gl.BACK). Please note that this will be ignored if WebGL 1 is used without a WEBGL_draw_buffer extension.\n     * Furthermore, if the drawBuffer is gl.BACK, a DefaultBuffer is expected as target.\n     * @param drawBuffer - GLenum that specifies the draw buffer.\n     */\n    set drawBuffer(drawBuffer: GLenum) {\n        this.assertInitialized();\n        this._drawBuffer = drawBuffer;\n    }\n\n    /**\n     * Framebuffer to blit the given framebuffer (@see framebuffer} into.\n     * @param target - Framebuffer to blit into.\n     */\n    set target(target: Framebuffer) {\n        this.assertInitialized();\n        this._target = target;\n    }\n\n}\n","\nimport { assert, log, logIf, LogLevel } from './auxiliaries';\nimport { GLsizei2 } from './tuples';\n\nimport { ChangeLookup } from './changelookup';\nimport { Context } from './context';\nimport { Framebuffer } from './framebuffer';\nimport { Initializable } from './initializable';\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\nimport { Program } from './program';\nimport { Shader } from './shader';\nimport { Texture2 } from './texture2';\nimport { Wizard } from './wizard';\n\n\n/**\n * This pass accumulates the color attachment 0 of a framebuffer, e.g., the result of an intermediate frame, into an\n * accumulation buffer. For accumulation the frame number is used to derive the accumulation weight. For rendering to\n * texture, a textured ndc-filling triangle is used.\n *\n * The accumulation pass can be used as follows:\n * ```\n * this.accumulate.initialize();\n * this.accumulate.texture = this.intermediateFBO.texture(gl2facade.COLOR_ATTACHMENT0);\n * this.accumulate.update();\n * this.accumulate.frame(frameNumber);\n * ```\n */\nexport class AccumulatePass extends Initializable {\n\n    /**\n     * Read-only access to the objects context, used to get context information and WebGL API access.\n     */\n    protected _context: Context;\n\n    /**\n     * Alterable auxiliary object for tracking changes on this object's input and lazy updates.\n     */\n    protected readonly _altered = Object.assign(new ChangeLookup(), {\n        any: false, texture: false, precision: false, passThrough: false,\n    });\n\n\n    /** @see {@link texture} */\n    protected _texture: Texture2;\n\n    /** @see {@link precision} */\n    protected _precision: Wizard.Precision = Wizard.Precision.half;\n\n    /** @see {@link passThrough} */\n    protected _passThrough: boolean;\n\n    /**\n     * Two rgba-framebuffers used for accumulation (buffer ping-ponging is used for alternating the buffers for read\n     * and write access due to a limitation in WebGL).\n     */\n    protected _accumulationFBOs: [Framebuffer, Framebuffer];\n    protected _accumulationTextures: [Texture2, Texture2];\n\n\n    /**\n     * Stores the index of the last buffer written to.\n     */\n    protected _write: GLuint = 0;\n\n    /**\n     * Geometry used to draw on. This is not provided by default to allow for geometry sharing. If no triangle is given,\n     * the ndc triangle will be created and managed internally.\n     */\n    protected _ndcTriangle: NdcFillingTriangle;\n\n    /**\n     * Tracks ownership of the ndc-filling triangle.\n     */\n    protected _ndcTriangleShared = false;\n\n    protected _program: Program;\n    protected _uWeight: WebGLUniformLocation;\n\n\n    constructor(context: Context) {\n        super();\n        this._context = context;\n    }\n\n\n    /**\n     * Specializes this pass's initialization. This pass requires an ndc-filling triangle, a single accumulation\n     * program, and two accumulation framebuffers for ping pong (simultaneous read and write is currently not allowed\n     * by webgl). All attribute and dynamic uniform locations are cached.\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\n     * triangle will be created internally.\n     */\n    @Initializable.initialize()\n    initialize(ndcTriangle?: NdcFillingTriangle): boolean {\n        const gl = this._context.gl;\n\n        this._accumulationFBOs = [\n            new Framebuffer(this._context, 'AccumPingFBO'),\n            new Framebuffer(this._context, 'AccumPongFBO')];\n\n        this._accumulationTextures = [\n            new Texture2(this._context, 'AccumPingTexture'),\n            new Texture2(this._context, 'AccumPongTexture')];\n\n        /* Configure program-based accumulate. */\n\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (accumulate)');\n        vert.initialize(require('./shaders/ndcvertices.vert'));\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'accumulate.frag');\n        frag.initialize(require('./shaders/accumulate.frag'));\n\n        this._program = new Program(this._context, 'AccumulateProgram');\n        this._program.initialize([vert, frag]);\n\n        this._uWeight = this._program.uniform('u_weight');\n        this._program.bind();\n        gl.uniform1f(this._uWeight, 0.0);\n        gl.uniform1i(this._program.uniform('u_accumulationTexture'), 0);\n        gl.uniform1i(this._program.uniform('u_currentFrameTexture'), 1);\n        this._program.unbind();\n\n\n        if (ndcTriangle === undefined) {\n            this._ndcTriangle = new NdcFillingTriangle(this._context);\n        } else {\n            this._ndcTriangle = ndcTriangle;\n            this._ndcTriangleShared = true;\n        }\n\n        if (!this._ndcTriangle.initialized) {\n            const aVertex = this._program.attribute('a_vertex', 0);\n            this._ndcTriangle.initialize(aVertex);\n        } else {\n            this._program.attribute('a_vertex', this._ndcTriangle.aVertex);\n        }\n\n        return true;\n    }\n\n    /**\n     * Specializes this pass's uninitialization. Program and geometry resources are released (if allocated). Cached\n     * uniform and attribute locations are invalidated.\n     */\n    @Initializable.uninitialize()\n    uninitialize(): void {\n        if (!this._ndcTriangleShared && this._ndcTriangle.initialized) {\n            this._ndcTriangle.uninitialize();\n        }\n        this._program.uninitialize();\n\n        this._accumulationFBOs[0].uninitialize();\n        this._accumulationFBOs[1].uninitialize();\n        this._accumulationTextures[0].uninitialize();\n        this._accumulationTextures[1].uninitialize();\n\n        this._write = 0;\n    }\n\n    /**\n     * Initialize accumulation textures and FBOs (if not initialized yet). Then verifies if the texture's size has\n     * changed, and if so, resizes the accumulation buffers.\n     */\n    @Initializable.assert_initialized()\n    update() {\n        if (!this._texture || !this._texture.valid) {\n            log(LogLevel.Dev, `valid texture for accumulation update expected, given ${this._texture}`);\n            return;\n        }\n\n        if (this._passThrough) {\n            return;\n        }\n\n        const sizeAltered = this._altered.texture || this._accumulationTextures[0].width !== this._texture.width ||\n            this._accumulationTextures[0].height !== this._texture.height;\n        if (!this._altered.any && !sizeAltered) {\n            assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid,\n                `valid accumulation framebuffers expected`);\n            return;\n        }\n\n        const gl = this._context.gl;\n        const gl2facade = this._context.gl2facade;\n\n        /* Create and initialize accumulation texture and FBOs. */\n\n        const textureSize = this._texture.size;\n\n        if (!this._accumulationTextures[0].initialized) {\n            const internalFormat = Wizard.queryInternalTextureFormat(this._context, gl.RGBA, this._precision);\n            this._accumulationTextures[0].initialize(textureSize[0], textureSize[1],\n                internalFormat[0], gl.RGBA, internalFormat[1]);\n            this._accumulationTextures[1].initialize(textureSize[0], textureSize[1],\n                internalFormat[0], gl.RGBA, internalFormat[1]);\n\n        } else {\n            if (this._altered.texture || sizeAltered) {\n                this._accumulationTextures[0].resize(this._texture.width, this._texture.height);\n                this._accumulationTextures[1].resize(this._texture.width, this._texture.height);\n            }\n            if (this._altered.precision) {\n                const internalFormat = Wizard.queryInternalTextureFormat(this._context, gl.RGBA, this._precision);\n                this._accumulationTextures[0].reformat(internalFormat[0], gl.RGBA, internalFormat[1]);\n                this._accumulationTextures[1].reformat(internalFormat[0], gl.RGBA, internalFormat[1]);\n            }\n        }\n\n        if (!this._accumulationFBOs[0].initialized) {\n            this._accumulationFBOs[0].initialize([[gl2facade.COLOR_ATTACHMENT0, this._accumulationTextures[0]]]);\n            this._accumulationFBOs[1].initialize([[gl2facade.COLOR_ATTACHMENT0, this._accumulationTextures[1]]]);\n        }\n\n        assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid,\n            `valid accumulation framebuffers expected`);\n\n        this._altered.reset();\n    }\n\n    /**\n     * An accumulation frame binds the two accumulation textures (ping-pong framebuffer), one for read, the other for\n     * write/accumulating into. A screen-aligned triangle is used to fill the viewport and mix the input texture with\n     * the weight of 1 / (frameNumber + 1) with the previous accumulation result. If no texture is specified, pass\n     * through is used.\n     * @param frameNumber - Frame number used to select the current read and write framebuffer as well as frame weight.\n     * @param viewport - If specified, the viewport for accumulation will be set to the given width and height. If not,\n     * the currently set viewport is used.\n     */\n    @Initializable.assert_initialized()\n    frame(frameNumber: number, viewport?: GLsizei2) {\n        assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid,\n            `valid framebuffer objects for accumulation expected (initialize or update was probably not be called`);\n\n        if (this._passThrough || this._texture === undefined) {\n            return;\n        }\n        logIf(!this._texture || !this._texture.valid, LogLevel.Dev,\n            `valid texture for accumulation frame expected, given ${this._texture}`);\n\n        const gl = this._context.gl;\n\n        if (viewport !== undefined) {\n            gl.viewport(0, 0, viewport[0], viewport[1]);\n        }\n\n        const readIndex = frameNumber % 2;\n        const writeIndex = this._write = 1 - readIndex;\n\n        const accumTexture = this._accumulationTextures[readIndex];\n        const frameTexture = this._texture;\n\n        accumTexture.bind(gl.TEXTURE0);\n        frameTexture.bind(gl.TEXTURE1);\n\n        this._program.bind();\n        gl.uniform1f(this._uWeight, 1.0 / (frameNumber + 1));\n\n        this._accumulationFBOs[writeIndex].bind(gl.DRAW_FRAMEBUFFER); // bind draw only does not work for IE and EDGE\n        this._ndcTriangle.bind();\n        this._ndcTriangle.draw();\n        this._ndcTriangle.unbind();\n        this._accumulationFBOs[writeIndex].unbind(gl.DRAW_FRAMEBUFFER);\n\n        /** Every pass is expected to bind its own program when drawing, thus, unbinding is not necessary. */\n        // this.program.unbind();\n\n        accumTexture.unbind(gl.TEXTURE0);\n        frameTexture.unbind(gl.TEXTURE1);\n    }\n\n\n    /**\n     * Sets the texture that is to be accumulated. The ping and pong render textures will be resized on next frame\n     * automatically if the texture size changed.\n     * @param texture - Framebuffer that is to be accumulated.\n     */\n    set texture(texture: Texture2) {\n        this.assertInitialized();\n        if (this._texture !== texture) {\n            this._texture = texture;\n            this._altered.alter('texture');\n        }\n    }\n\n    /**\n     * Allows to specify the accumulation precision.\n     */\n    set precision(precision: Wizard.Precision) {\n        this.assertInitialized();\n        if (this._precision !== precision) {\n            this._precision = precision;\n            this._altered.alter('precision');\n        }\n    }\n\n    /**\n     * Allows to skip accumulation. If pass through is enabled, nothing will be rendered on frame at all and the\n     * ping pong render textures will be reduced to a minimum size of [1, 1] until pass through is disabled.\n     */\n    set passThrough(passThrough: boolean) {\n        this.assertInitialized();\n\n        if (this._passThrough === passThrough) {\n            return;\n        }\n\n        if (this._passThrough && this._accumulationTextures[0].initialized) {\n            this._accumulationTextures[0].uninitialize();\n            this._accumulationTextures[1].uninitialize();\n        }\n        if (this._passThrough && this._accumulationFBOs[0].initialized) {\n            this._accumulationFBOs[0].uninitialize();\n            this._accumulationFBOs[1].uninitialize();\n        }\n\n        this._passThrough = passThrough;\n        this._altered.alter('passThrough');\n    }\n\n    /**\n     * Returns the framebuffer last accumulated into. Note: the accumulation buffer is represented by two framebuffers\n     * swapped for read and write every frame. The accumulation result is in the first color attachment.\n     * @returns - The rgba framebuffer last accumulated into.\n     */\n    get framebuffer(): Framebuffer | undefined {\n        return this._passThrough ? undefined : this._accumulationFBOs[this._write];\n    }\n\n}\n","\nimport { RandomSquareKernel } from './randomsquarekernel';\n\n\n/**\n * An anti-aliasing kernel which provides NDC offsets for anti-aliasing, e.g., when using multi-frame sampling.\n */\nexport class AntiAliasingKernel extends RandomSquareKernel {\n\n    /**\n     * @override\n     * Seems to only work if the getter of this kernels width setter is redefined here.\n     */\n    get width(): GLsizei {\n        return this._width;\n    }\n\n    /**\n     * Changes the size of the kernel and triggers regeneration of all values. If width is either 8 or 64 pre-built\n     * kernels will be loaded (golden set). In any other case, a random square kernel will be created.\n     */\n    set width(width: GLsizei) {\n        if (this._width === width) {\n            return;\n        }\n        this._width = width;\n        switch (this._width) {\n            case 8:\n                this.fromJSON(require('./data/goldenset08.json'));\n                break;\n\n            case 64:\n                this.fromJSON(require('./data/goldenset64.json'));\n                break;\n\n            default:\n                this.resize();\n                this.generate();\n        }\n    }\n\n}\n","\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { vec2, vec4 } from 'gl-matrix';\n\nimport { assert, logIf, LogLevel } from './auxiliaries';\nimport { clamp, v2 } from './gl-matrix-extensions';\n\nimport { ChangeLookup } from './changelookup';\nimport { Context } from './context';\nimport { Controllable } from './controller';\nimport { Initializable } from './initializable';\nimport { MouseEventProvider } from './mouseeventprovider';\nimport { GLclampf4, GLfloat2, GLsizei2, tuple2 } from './tuples';\nimport { Wizard } from './wizard';\nimport { RenderView } from './xrcontroller';\n\n\n// export interface IdCallback { (id: number, x?: number, y?: number): void; }\n\n\n/**\n * The interface to a callback that is called if the renderer is invalidated.\n */\nexport interface Invalidate { (force: boolean): void; }\n\n\n/**\n * Base class for hardware-accelerated processing and/or image-synthesis. It provides information such as the current\n * canvas, the canvas's size (native resolution), and the multi-frame number (for progressive rendering). A renderer's\n * properties are expected to be managed by its owning object or the canvas and should not be set directly/manually.\n * Alterations to these properties can be tracked with the `_altered` property. This allows an inheritor to implement\n * partial asset reallocation and, e.g., speed up dynamic multi-frame reconfiguration. The alterable object can be\n * extended using `Object.assign(this._alterable, ... some structure of booleans)`.\n *\n * This base class further provides the invalidate method that invokes an invalidation callback also provided by the\n * owning/controlling canvas.\n *\n * Since Initializable is extended, the initialization workflow applies to all specialized renderers (requires super\n * calls in constructor as well as in initialize and uninitialize).\n *\n * Note that a renderer is currently intended to always render to the canvas it is bound to. Hence, there is no\n * interface for setting a frame target.\n */\nexport abstract class Renderer extends Initializable implements Controllable {\n\n    /**\n     * The renderer's invalidation callback. This should usually be setup by the canvas and refer to a function in the\n     * canvas's controller, e.g., it should trigger an update within the controller.\n     */\n    protected _invalidate: Invalidate;\n\n    /** @see {@link context} */\n    protected _context: Context;\n\n\n    /**\n     * Alterable auxiliary object for tracking changes on renderer input and lazy updates.\n     */\n    protected readonly _altered = Object.assign(new ChangeLookup(), {\n        any: false, multiFrameNumber: false, frameSize: false, canvasSize: false, framePrecision: false,\n        clearColor: false, debugTexture: false,\n    });\n\n\n    /**\n     * This multi-frame number is for lazy reconfiguration and set on update. The inheritor can react to changes using\n     * this.altered.multiFrameNumber.\n     */\n    protected _multiFrameNumber: number;\n\n    /**\n     * Targeted resolution for image synthesis. This might differ from the canvas resolution and should be used in\n     * frame calls of inheritors.\n     */\n    protected _frameSize: GLsizei2 = [0, 0];\n\n    /**\n     * Actual, native resolution for the canvas currently in charge of controlling the renderer. This might differ from\n     * the targeted frame resolution but is required, e.g., for specific non-proportional ratios between frame size and\n     * canvas size.\n     */\n    protected _canvasSize: GLsizei2 = [0, 0];\n\n    /**\n     * Targeted frame precision, e.g., used for frame accumulation. Note that any renderer is currently\n     * expected to take advantage of progressive rendering (e.g., multi-frame sampling) and accumulation as well as a\n     * blit pass (since main intend is multi-frame based rendering).\n     */\n    protected _framePrecision: Wizard.Precision = Wizard.Precision.half;\n\n    /**\n     * The clear color, provided by the canvas the renderer is bound to. This is used in frame calls of inheritors.\n     */\n    protected _clearColor: GLclampf4 = [0.0, 0.0, 0.0, 1.0];\n\n\n    /**\n     * List of textures for debugging purposes such as normals, ids, depth, masks, etc. that can be populated by the\n     * inheritor. The index of a texture identifier can then be for specifying a debug output of a render texture.\n     */\n    protected _debugTextures = new Array<string>();\n\n    /**\n     * @see {@link debugTexture}\n     * This property can be observed, e.g., `aRenderer.debugTextureObservable.subscribe()`.\n     */\n    protected _debugTexture: GLint;\n    protected _debugTextureSubject = new ReplaySubject<GLint>(1);\n\n\n    /** @callback Invalidate\n     * A callback intended to be invoked whenever the specialized renderer itself or one of its objects is invalid. This\n     * callback should be passed during initialization to all objects that might handle invalidation internally as well.\n     */\n    @Initializable.assert_initialized()\n    protected invalidate(force: boolean = false): void {\n        this._invalidate(force);\n    }\n\n\n    /**\n     * Utility for communicating this._debugTexture changes to its associated subject.\n     */\n    protected debugTextureNext(): void {\n        this._debugTextureSubject.next(this._debugTexture);\n    }\n\n    /**\n     * Context that can be used for processing and rendering as well as passed to rendering stages.\n     */\n    protected get context(): Context {\n        this.assertInitialized();\n        return this._context;\n    }\n\n    protected get canvasSize(): GLsizei2 {\n        this.assertInitialized();\n        return this._canvasSize;\n    }\n\n    /**\n     * Whether or not any of the (relevant/monitored) rendering properties has been altered. This concept should be used\n     * by other classes (e.g., camera, rendering stages) for detecting modifications relevant for rendering output.\n     */\n    protected get altered(): boolean {\n        return this._altered.any;\n    }\n\n\n    /**\n     * Actual initialize call specified by inheritor.\n     * @returns - whether initialization was successful\n     */\n    protected abstract onInitialize(context: Context, callback: Invalidate,\n        mouseEventProvider: MouseEventProvider | undefined,\n        /* keyEventProvider: KeyEventProvider | undefined, */\n        /* touchEventProvider: TouchEventProvider | undefined */): boolean;\n\n    /**\n     * Actual uninitialize call specified by inheritor.\n     */\n    protected abstract onUninitialize(): void;\n\n\n    /**\n     * Actual update call specified by inheritor.\n     * @returns - whether to redraw\n     */\n    protected abstract onUpdate(): boolean;\n\n    /**\n     * Actual prepare call specified by inheritor.\n     */\n    protected abstract onPrepare(): void;\n\n    /**\n     * Actual frame call specified by inheritor.\n     */\n    protected abstract onFrame(frameNumber: number, renderViews?: RenderView[]): void;\n\n    /**\n     * Actual swap call specified by inheritor.\n     */\n    protected abstract onSwap(): void;\n\n\n    /**\n     * When extending (specializing) this class, initialize should initialize all required stages and allocate assets\n     * that are shared between multiple stages. Note that `super.initialize()` should always be call first when\n     * 'overriding' this function.\n     *\n     * Note: the context handle is stored in a property, but should be passed to the stages by specializing\n     * renderer instead. The renderer itself should not allocate rendering resources directly, thus, it should not\n     * require a webgl context.\n     *\n     * @param context - Wrapped gl context for function resolution (passed to all stages).\n     * @param callback - Functions that is invoked when the renderer (or any stage) is invalidated.\n     * @param mouseEventProvider - Provider for mouse events referring to the canvas element.\n     */\n    @Initializable.initialize()\n    initialize(context: Context, callback: Invalidate,\n        mouseEventProvider: MouseEventProvider | undefined,\n        /* keyEventProvider: KeyEventProvider | undefined, */\n        /* touchEventProvider: TouchEventProvider | undefined */): boolean {\n\n        assert(context !== undefined, `valid webgl context required`);\n        this._context = context;\n        assert(callback !== undefined, `valid multi-frame update callback required`);\n        this._invalidate = callback;\n\n        return this.onInitialize(context, callback, mouseEventProvider);\n    }\n\n    /**\n     * Should release all assets and uninitialize all stages. `super.uninitialize()` should always be call first when\n     * overriding this function.\n     */\n    @Initializable.uninitialize()\n    uninitialize(): void {\n        this.onUninitialize();\n    }\n\n\n    /**\n     *\n     */\n    @Initializable.assert_initialized()\n    update(multiFrameNumber: number): boolean {\n        if (this._canvasSize[0] !== this._context.gl.canvas.width ||\n            this._canvasSize[1] !== this._context.gl.canvas.height) {\n            this._canvasSize[0] = this._context.gl.canvas.width;\n            this._canvasSize[1] = this._context.gl.canvas.height;\n            this._altered.alter('canvasSize');\n        }\n        if (this._multiFrameNumber !== multiFrameNumber) {\n            this._multiFrameNumber = multiFrameNumber;\n            this._altered.alter('multiFrameNumber');\n        }\n        return this.onUpdate() || this._altered.any;\n    }\n\n    /**\n     * Prepares the rendering of the next frame (or subsequent frames when multi-frame rendering).\n     * This is part of the controllable interface. The renderer should reconfigure as lazy as possible.\n     * @param multiFrameNumber - The multi-frame number as requested by controller.\n     */\n    @Initializable.assert_initialized()\n    prepare(): void {\n        this.onPrepare();\n    }\n\n    /**\n     * Controllable interface intended to trigger rendering of a full pass of the renderer that results in either an\n     * intermediate frame for accumulation to a full multi-frame or full frame for itself.  The inheritor should invoke\n     * frames of relevant rendering and processing stages.\n     * @param frameNumber - The current frame number forwarded to onFrame.\n     * @param renderViews - views for WebXR rendering\n     */\n    @Initializable.assert_initialized()\n    frame(frameNumber: number, renderViews?: RenderView[]): void {\n        this.onFrame(frameNumber, renderViews);\n    }\n\n    /**\n     * Interface intended to trigger swap (by controller).\n     */\n    @Initializable.assert_initialized()\n    swap(): void {\n        this.onSwap();\n    }\n\n\n    /**\n     * Transforms local viewport coordinates into local intermediate frame coordinates.\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\n     */\n    frameCoords(x: GLint, y: GLint): GLfloat2 {\n        const position = vec2.divide(v2(), this._frameSize, this.canvasSize);\n        vec2.floor(position, vec2.multiply(position, [x + 0.5, y + 0.5], position));\n        vec2.add(position, position, [0.5, 0.5]);\n        return tuple2<GLfloat>(position);\n    }\n\n    // /**\n    //  * @interface CoordsAccess\n    //  * Look up a fragments coordinates by unprojecting the depth using the renderer's camera.\n    //  * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\n    //  * @param y - Vertical coordinate for the upper left corner of the viewport origin.\n    //  * @param zInNDC - optional depth parameter (e.g., from previous query).\n    //  * @returns - 3D coordinate reprojected from NDC/depth to world space.\n    //  */\n    // abstract coordsAt(x: GLint, y: GLint, zInNDC?: number, viewProjectionInverse?: mat4): vec3 | undefined;\n\n    // /**\n    //  * @interface IDAccess\n    //  * Look up an object id at a specific fragment.\n    //  * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\n    //  * @param y - Vertical coordinate for the upper left corner of the viewport origin.\n    //  * @returns - ID encoded of an object rendered/visible at given position.\n    //  */\n    // abstract idAt(x: GLint, y: GLint): GLsizei | undefined;\n\n\n    /**\n     * Changes the frame size for rendering. This setter should only be used by the canvas this renderer is bound to.\n     * Changing the frame size invalidates the renderer.\n     *\n     * Note: the frame size is detached from the canvas size. When blitting the frame into the canvas, the frame is\n     * rescaled to fill or fit the canvas size.\n     *\n     * @param size - Resolution of the framebuffer.\n     */\n    set frameSize(size: GLsizei2) {\n        this.assertInitialized();\n        if (vec2.equals(this._frameSize, size)) {\n            return;\n        }\n        Object.assign(this._frameSize, size);\n        this._altered.alter('frameSize');\n        this.invalidate();\n    }\n\n    /**\n     * Set the frame precision.\n     * @param format - The accumulation format. Expected values are one of 'byte', 'half', 'float', or 'auto'\n     */\n    set framePrecision(precision: Wizard.Precision) {\n        this.assertInitialized();\n        if (this._framePrecision === precision) {\n            return;\n        }\n        this._framePrecision = precision;\n        this._altered.alter('framePrecision');\n        this.invalidate();\n    }\n\n    /**\n     * Sets the color used for clearing the background. This setter should only be used by the canvas this renderer is\n     * bound to. Changing the frame size invalidates the renderer.\n     * @param color - Red, green, blue, and alpha color components.\n     */\n    set clearColor(color: GLclampf4) {\n        this.assertInitialized();\n        if (vec4.equals(this._clearColor, color)) {\n            return;\n        }\n        Object.assign(this._clearColor, color);\n        this._altered.alter('clearColor');\n        this.invalidate();\n    }\n\n    /**\n     * Read only access to the renderers registered render textures that can be blit to the back buffer for debugging.\n     * @returns - Array of render texture identifiers.\n     */\n    get debugTextures(): Array<string> {\n        this.assertInitialized();\n        return this._debugTextures;\n    }\n\n    /**\n     * The render texture index for debug output. This is -1 when debug output is disabled. This should be used in\n     * the renderers swap implementation.\n     */\n    get debugTexture(): GLint {\n        this.assertInitialized();\n        return this._debugTexture;\n    }\n\n    /**\n     * Enables to specify the index of a render texture to be blit to the back buffer for debugging. This invalidates\n     * but should result in a blit only if nothing else changed. When the requested debug texture was blit (and\n     * debugTexture was actually altered) `this.debugTextureNext()` should be called to inform observers.\n     * @param index - Render texture index based on debuggableTextures array. This should be in [-1, length of array].\n     */\n    set debugTexture(index: GLint) {\n        this.assertInitialized();\n        if (this._debugTexture === index) {\n            return;\n        }\n        logIf(index >= this._debugTextures.length, LogLevel.Dev, `invalid texture index, ` +\n            `debug texture disabled (index set to -1) | ${index} not in [-1,+${this._debugTextures.length - 1}]`);\n        this._debugTexture = index < this._debugTextures.length ?\n            clamp(index, -1, this._debugTextures.length - 1) : -1;\n        this._altered.alter('debugTexture');\n        this.invalidate();\n    }\n\n    /**\n     * Observable that can be used to subscribe to debug texture changes.\n     */\n    get debugTextureObservable(): Observable<GLint> {\n        return this._debugTextureSubject.asObservable();\n    }\n\n}\n","\nimport { assert } from './auxiliaries';\nimport { GLclampf4 } from './tuples';\n\nimport { Framebuffer } from './framebuffer';\nimport { Initializable } from './initializable';\n\n\n/**\n * Default framebuffer with framebuffer interface. It is intended for use as default buffer binding and enables lazy\n * target size reconfiguration of stages.\n *\n * ```\n * this._someStage.frame(this._nullFBO, frameNumber, multiFrameNumber);\n * ```\n *\n * Note that this buffer does query its size from the current context's canvas.\n */\nexport class DefaultFramebuffer extends Framebuffer {\n\n    /**\n     * @override\n     * Default framebuffer cannot be created.\n     */\n    protected create(): WebGLFramebuffer | undefined {\n        this._object = Framebuffer.DEFAULT_FRAMEBUFFER;\n        this._valid = true;\n\n        /* Initialize with default clear values */\n        this._clearColors = new Array<GLclampf4>(1);\n        this._clearDepth = 1.0;\n        this._clearStencil = 0;\n\n        this.clear = this.es2Clear;\n\n        return this._object;\n    }\n\n    /**\n     * @override\n     * Default framebuffer cannot be deleted.\n     */\n    protected delete(): void {\n        this._object = undefined;\n        this._valid = false;\n    }\n\n    /**\n     * @override\n     * @returns - Always false, since default buffer cannot have any attachments.\n     */\n    protected hasAttachment(attachment: GLenum): boolean {\n        return false;\n    }\n\n    /**\n     * @override\n     * Binds the default framebuffer object to the provided target.\n     * @param target - Specifying the binding point (target).\n     */\n    @Initializable.assert_initialized()\n    bind(target: GLenum = this.context.gl.FRAMEBUFFER): void {\n        this.context.gl.bindFramebuffer(target, this._object);\n    }\n\n    /**\n     * @override\n     * Sets the clear color used for clearing the default color buffer. In order to have transparency working, the\n     * canvas needs to have the alpha  attribute enabled. This stage also supports premultiplied alpha, which is applied\n     * automatically when the context's `premultipliedAlpha` attribute is set.\n     * @param color - RGBA clear color.\n     */\n    clearColor(color: GLclampf4): void {\n        super.clearColor(color);\n    }\n\n    /**\n     * Resets the size (important for valid size change detection in stages).\n     */\n    resize(): void {\n        assert(false, `the default framebuffer cannot be resized directly`);\n    }\n\n    /**\n     * Convenience accessor: returns the renderable width of the canvas back buffer.\n     */\n    get width(): GLsizei {\n        return this.context.gl.canvas.width as GLsizei;\n    }\n\n    /**\n     * Convenience accessor: returns the renderable height of the canvas back buffer.\n     */\n    get height(): GLsizei {\n        return this.context.gl.canvas.height as GLsizei;\n    }\n\n}\n","\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var ourBase = schema.id ? urilib.resolve(baseuri, schema.id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+schema+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', ((schema.items instanceof Array)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', ((schema.extends instanceof Array)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!(schemas instanceof Array)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  var schemaUri = base;\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","/// WebXR playground - to be refactored into a reasonable file structure later\n\nimport { mat4, vec3 } from 'gl-matrix';\nimport { assert } from './auxiliaries';\nimport { Canvas } from './canvas';\nimport { Controllable } from './controller';\nimport { Renderer } from './renderer';\n\nexport function supportsXR(): boolean {\n    return navigator.xr !== undefined;\n}\n\n/**\n * Helper class to hold render configuration per XRView,\n * i.e. per eye for standard VR/AR.\n * NOTE: Optimized to avoid allocations during render loop.\n */\nexport class RenderView {\n    private _cameraPositionValid = false;\n    private _cameraPosition = vec3.create();\n    private _inverseViewMatrix: Float32Array;\n\n    private _projectionMatrix: Float32Array;\n    get projectionMatrix() {\n        return this._projectionMatrix;\n    }\n    private _viewMatrix: Float32Array;\n    get viewMatrix() {\n        return this._viewMatrix;\n    }\n    private _viewport: XRViewport;\n    get viewport() {\n        return this._viewport;\n    }\n\n    set(projectionMatrix: Float32Array, viewMatrix: Float32Array, viewport: XRViewport) {\n        this._projectionMatrix = projectionMatrix;\n        this._viewMatrix = viewMatrix;\n        this._viewport = viewport;\n\n        this._cameraPositionValid = false;\n    }\n\n    /**\n     * Computes camera position from viewMatrix. Not done by default since it's not cheap.\n     */\n    get cameraPosition() {\n        if (this._cameraPositionValid) {\n            return this._cameraPosition;\n        }\n        if (!this._inverseViewMatrix) {\n            this._inverseViewMatrix = mat4.create();\n        }\n\n        mat4.invert(this._inverseViewMatrix as mat4, this.viewMatrix as mat4);\n        vec3.transformMat4(this._cameraPosition, this._cameraPosition, this._inverseViewMatrix as mat4);\n\n        this._cameraPositionValid = true;\n        return this._cameraPosition;\n    }\n}\n\n// tslint:disable-next:member-ordering\n// tslint:disable-next-line:max-classes-per-file\nexport class XRController {\n    private onXRFrameCallback = this.onXRFrame.bind(this);\n    private renderViews: RenderView[] = [new RenderView()];\n\n    // Configuration options for setting up and XR session.\n\n    sessionCreationOptions?: XRSessionCreationOptions;\n    /**\n     * Attributes for WebGL context creation. `compatibleXRDevice` will be set\n     * automatically after session creation.\n     */\n    contextAttributes: WebGLContextAttributes = {};\n    webGLLayerInit?: XRWebGLLayerInit;\n    frameOfRefType: XRFrameOfReferenceType = 'eye-level';\n    frameOfRefOptions?: XRFrameOfReferenceOptions;\n\n    device: XRDevice | undefined;\n    session: XRSession | undefined;\n    canvas: Canvas | undefined;\n    gl: any;\n    frameOfRef: XRFrameOfReference | undefined;\n\n    renderer: Renderer;\n\n    constructor(sessionOpts?: XRSessionCreationOptions) {\n        this.sessionCreationOptions = sessionOpts;\n    }\n\n    /**\n     * Initializes `this.device` and checks if it supports sessions with the configured creation options.\n     * @throws {NotFoundError} - No devices found.\n     * @returns - whether initialization was successful\n     */\n    async initialize(): Promise<void> {\n        assert(supportsXR(), 'WebXR not supported by browser');\n        this.device = await navigator.xr.requestDevice();\n        this.contextAttributes.compatibleXRDevice = this.device;\n    }\n\n    /**\n     * Checks whether device supports a session with `this.sessionCreationOptions`.\n     * Must call `initialize` before.\n     */\n    async supportsSession(): Promise<boolean> {\n        assert(this.device !== undefined, 'this.device not initialized');\n        try {\n            await this.device!.supportsSession(this.sessionCreationOptions);\n            return true;\n        } catch (e) { // === null\n            return false;\n        }\n    }\n\n    /**\n     * Request an XR session (`this.session`) using `this.sessionCreationOptions`\n     * and initialize WebGL context and `frameOfRef`.\n     * May fail with:\n     * - NotSupportedError if the options are not supported\n     * - InvalidStateError if options.immersive is true and the device already has an immersive session\n     * - SecurityError if options.immersive is true and the algorithm is not triggered by user activation\n     */\n    async requestSession(): Promise<void> {\n        this.session = await this.device!.requestSession(this.sessionCreationOptions);\n\n        const canvasEl = document.createElement('canvas');\n        // TODO!: external canvas?\n        this.canvas = new Canvas(canvasEl, this.contextAttributes, this);\n        this.gl = this.canvas.context.gl;\n\n        this.session.baseLayer = new XRWebGLLayer(this.session, this.gl, this.webGLLayerInit);\n        this.frameOfRef = await this.session.requestFrameOfReference(this.frameOfRefType, this.frameOfRefOptions);\n\n        this.session.requestAnimationFrame(this.onXRFrameCallback);\n\n        this.session.addEventListener('end', () => this.onEndSession());\n    }\n\n    async endSession(): Promise<void> {\n        await this.session!.end();\n    }\n\n    onEndSession() {\n        this.session = undefined;\n        this.canvas = undefined;\n        this.gl = undefined;\n        this.frameOfRef = undefined;\n    }\n\n    onXRFrame(time: number, frame: XRFrame) {\n        this.session!.requestAnimationFrame(this.onXRFrameCallback);\n        const gl = this.gl;\n\n        const pose = frame.getDevicePose(this.frameOfRef!);\n        // Getting the pose may fail if, for example, tracking is lost.\n        if (pose) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.session!.baseLayer.framebuffer);\n\n            for (let i = 0; i < frame.views.length; ++i) {\n                const view = frame.views[i];\n                if (!this.renderViews[i]) {\n                    this.renderViews[i] = new RenderView();\n                }\n                this.renderViews[i].set(\n                    view.projectionMatrix,\n                    pose.getViewMatrix(view),\n                    this.session!.baseLayer.getViewport(view)!,\n                );\n            }\n\n            this.renderer.frame(0, this.renderViews);\n        } else {\n            // TODO!: how to handle?\n        }\n    }\n\n    // TODO!!: stub other controller methods/properties\n    // tslint:disable-next-line:member-ordering\n    _block = false;\n    block() {\n        this._block = true;\n    }\n    get blocked() {\n        // TODO!?\n        return this._block;\n    }\n    unblock() {\n        // TODO!?\n        this._block = false;\n    }\n    set controllable(c: Controllable) {\n        this.renderer = c as Renderer;\n    }\n    update(force: boolean = false): void {\n        // TODO:!?\n    }\n}\n","\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport { abs2, abs3, sign, v2, v3 } from './gl-matrix-extensions';\n\nimport { DEG2RAD } from './auxiliaries';\nimport { Camera } from './camera';\n\n\nnamespace ray_math {\n\n    /**\n     * Lots of variables that represent components of other variables or are transformed.\n     * For these I (dl) prefer, e.g.,  _component or _transformation notation\n     */\n    /* tslint:disable:variable-name */\n\n    /**\n     * Computes the intersection point of a given ray and a circle at [0.0, 0.0] and a given radius.\n     * @param ray0 - Start point of a ray.\n     * @param ray1 - Far point of a ray, used to derive the ray's direction.\n     * @param radius - Radius of the circle to test for intersection with.\n     * @returns The intersection point of the given ray and a circle, undefined if no intersection exists.\n     */\n    export function rayCircleIntersection(ray0: vec2, ray1: vec2, radius: number = 1.0): vec2 | undefined {\n        const ray_direction = vec2.subtract(v2(), ray1, ray0);\n        if (vec2.equals(ray_direction, vec2.fromValues(0.0, 0.0))) {\n            return undefined;\n        }\n\n        /**\n         * This is a default ray circle intersection with common variable names. It's math and math sometimes has no\n         * meaning full variable names... (we could use twoTimesDotProductOfRayAndOrigin instead of b, but this is\n         * obviously not a good idea :D).\n         */\n        const a = vec2.squaredLength(ray_direction);\n        const b = 2.0 * vec2.dot(ray_direction, ray0);\n        const c = vec2.squaredLength(ray0) - radius * radius;\n\n        const delta = b * b - 4.0 * a * c;\n        if (delta < 0.0) {\n            return undefined;\n        }\n\n        /* Compute the two possible intersections and use nearest one. */\n        const s = Math.sqrt(delta);\n        const t = Math.min((-b + s) / (2.0 * a), (-b - s) / (2.0 * a));\n        const intersection = vec2.scale(v2(), ray_direction, t);\n\n        return vec2.add(intersection, intersection, ray0);\n    }\n\n    /**\n     * Computes the intersection point of a ray starting at a given point and pointing to the center of an axis-aligned\n     * square of a given side length.\n     * @param point - Starting point used to derive a ray for intersection.\n     * @param edgeLength - Side length of the square.\n     * @returns - The intersection point of the square and the derived ray.\n     */\n    export function pointSquareIntersection(point: vec2, edgeLength: number = 1.0): vec2 {\n        const a = abs2(v2(), point);\n        if (a[0] >= a[1]) { // intersection is with left or right border\n            return vec2.fromValues(sign(point[0]) * edgeLength, point[1] / a[0] * edgeLength);\n        }\n        return vec2.fromValues(point[0] / a[1] * edgeLength, sign(point[1]) * edgeLength);\n    }\n\n    /**\n     * Computes the intersection of a ray with an axis-aligned square at [0.0, 0.0] with side length of 2 * halfLength.\n     * @param ray0 - Start point of a ray.\n     * @param ray1 - Far point of a ray, used to derive the ray's direction.\n     * @returns - The intersection point of the square and the ray.\n     */\n    export function raySquareIntersection(ray0: vec2, ray1: vec2, halfLength: number = 1.0): Array<number> {\n        const vertices = [vec2.fromValues(-halfLength, +halfLength), vec2.fromValues(-halfLength, -halfLength),\n        vec2.fromValues(+halfLength, -halfLength), vec2.fromValues(+halfLength, +halfLength)];\n\n        const intersections = new Array<number>();\n        for (let i = 0; i < 4; ++i) {\n            const intersection = rayLineIntersection(ray0, ray1, vertices[i], vertices[(i + 1) % 4]);\n            if (intersection) {\n                intersections.push(intersection[1]);\n            }\n        }\n        return intersections;\n    }\n\n    /**\n     * Computes the intersection of a ray with a line.\n     * @param ray0 - Start point of a ray.\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\n     * @param line0 - Start point of a line.\n     * @param line1 - End point of a line.\n     * @returns - If ray intersects, a 2-tuple of intersection point and t (ray0 + t + ray1) is returned.\n     */\n    export function rayLineIntersection(ray0: vec2, ray1: vec2, line0: vec2, line1: vec2): [vec2, number] | undefined {\n        const p = ray0; /* do not write to p (or clone ray0) */\n        const r = vec2.sub(v2(), ray1, ray0);\n\n        const q = line0;  /* do not write to q (or clone line0) */\n        const s = vec2.sub(v2(), line1, line0);\n\n        const cross_rs = vec2.cross(v3(), r, s)[2];\n        if (cross_rs === 0.0) {\n            return undefined;\n        }\n\n        const qp = vec2.sub(v2(), q, p);\n        const u = vec2.cross(v3(), qp, vec2.scale(v2(), r, 1.0 / cross_rs))[2];\n        const t = vec2.cross(v3(), qp, vec2.scale(v2(), s, 1.0 / cross_rs))[2];\n        if (u < 0.0 || u > 1.0 || t < 0.0) { // } || t > 1.0) { // ray intersects line segment in both directions ...\n            return undefined;\n        }\n        return [vec2.add(v2(), q, vec2.scale(v2(), s, u)), t];\n    }\n\n    /**\n     * Computes the intersection point of a given ray and a given plane (rooted at [ 0, 0, 0 ]).\n     * t = -(dot(plane.xyz, origin) + plane.w) / dot(plane.xyz, ray);\n     * The ray intersects when (t > 0.0) && (t < tm) is true.\n     * @param ray0 - Start point of a ray.\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\n     * @param origin - Point on a plane with origin [ 0, 0, 0 ].\n     * @param normal - Normal of the plane with origin [ 0, 0, 0 ].\n     * @returns - If ray intersects, the intersection point on the plane if the plane was hit.\n     */\n    export function rayPlaneIntersection(ray0: vec3, ray1: vec3\n        , origin: vec3 | number[] = [0.0, 0.0, 0.0], normal: vec3 | number[] = [0.0, 1.0, 0.0]): vec3 | undefined {\n\n        const ray_direction = vec3.normalize(v3(), vec3.subtract(v3(), ray1, ray0));\n\n        /* Intersect with plane in point normal form. */\n        const rdDotN: number = vec3.dot(ray_direction, normal);\n\n        /* Constrain the intersection to rays that point from front to back with respect to the plane. */\n        if (vec3.equals(ray_direction, [0, 0, 0]) || rdDotN >= 0.0) {\n            return undefined;\n        }\n\n        /* Retrieve point using the ray. */\n        const t: number = vec3.dot(vec3.subtract(v3(), origin, ray0), normal) / rdDotN;\n        return vec3.add(v3(), vec3.scale(v3(), ray_direction, t), ray0);\n    }\n\n    /**\n     * Computes the intersection point of a given ray and a given sphere.\n     * t = -(dot(plane.xyz, origin) + plane.w) / dot(plane.xyz, ray);\n     * The ray intersects when (t > 0.0) && (t < tm) is true.\n     * @param ray0 - Start point of a ray.\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\n     * @param origin - Location of the sphere.\n     * @param radius - Radius of the sphere.\n     * @returns - If ray intersects, the intersection point on the plane if the plane was hit.\n     */\n    export function raySphereIntersection(ray0: vec3, ray1: vec3\n        , origin: vec3 = vec3.fromValues(0.0, 0.0, 0.0), radius: number = 1.0): vec3 | undefined {\n\n        const rayOriginToSphereCenter = vec3.subtract(v3(), ray0, origin); // o - c\n        const ray_direction = vec3.normalize(v3(), vec3.subtract(v3(), ray1, ray0)); // l\n\n        const dot_term = vec3.dot(ray_direction, rayOriginToSphereCenter); // l * (o - c)\n\n        // Note: dot product can be used to compute the squared length of a vector -> gl-matrix supports squaredLength\n        // vec3.squaredLength(rayOriginToSphereCenter); // ||o -c||²\n\n        const t = dot_term * dot_term - vec3.squaredLength(rayOriginToSphereCenter) + radius * radius;\n        if (t <= 0.0) { // no intersection\n            return undefined;\n        }\n        return vec3.add(v3(), ray0, vec3.scale(v3(), ray_direction, -dot_term - Math.sqrt(t)));\n    }\n\n    /**\n     * Computes the intersection point of a given ray and a given plane (origin [ 0, 0, 0 ]). The intersection point,\n     * however, is constrained to a tube of a given radius. The computation is currently limited to a tube\n     * on the plane y = 0 with origin in [0.0, 0.0, 0.0], extending towards [0.0, 1.0, 0.0].\n     * @param ray0 - Start point of a ray.\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\n     * @param radius - Constrain intersection point to be within a tube of this radius.\n     * @returns - The intersection point on the plane if the plane was hit, undefined otherwise.\n     */\n    export function rayPlaneIntersection_tube(ray0: vec3, ray1: vec3, radius: number = 1.0): vec3 | undefined {\n        const intersection = rayPlaneIntersection(ray0, ray1);\n\n        if (intersection !== undefined && vec3.length(intersection) < radius) {\n            return intersection;\n        }\n\n        /* Project the ray start to the y = 0 plane. */\n        const ray0_xz = vec2.fromValues(ray0[0], ray0[2]);\n        const ray1_xz = vec2.fromValues(ray1[0], ray1[2]);\n\n        const intersection2 = rayCircleIntersection(ray0_xz, ray1_xz, radius);\n        return intersection2 ? vec3.fromValues(intersection2[0], 0.0, intersection2[1]) : undefined;\n    }\n\n    /**\n     * Evaluates whether or not a given point is within a square of a given edge length.\n     * @param point - Point to check the within-square-status for.\n     * @param halfLength - Half of the side length of the square.\n     * @returns - Whether or not the given point is within an axis aligned square at [0.0, 0.0] and edge length.\n     */\n    export function isPointWithinSquare(point: vec2, halfLength: number = 1.0): boolean {\n        const p_abs = abs2(v2(), point);\n        return p_abs[0] <= halfLength && p_abs[1] <= halfLength;\n    }\n\n    /**\n     * Evaluates whether or not a given point is within the NDC-space (normalized device coordinates) after being\n     * transformed by a view projection matrix.\n     * @param viewProjection - (Model) view projection matrix to transform the point with.\n     * @param point - Point that is to be transformed\n     * @returns True if the point should be visible (within NDC), false otherwise.\n     */\n    export function isPointWithinNDC(viewProjection: mat4, point: vec3): boolean {\n        const p_transformed = vec3.transformMat4(v3(), point, viewProjection);\n        const p_abs = abs3(v3(), p_transformed);\n        return p_abs[0] <= 1.0 && p_abs[1] <= 1.0 && p_transformed[2] >= 0.0 && p_transformed[2] <= 1.0;\n    }\n\n    /**\n     * Computes the shortest distance of a point to a ray (closest point on ray distance).\n     * @param ray0 - Start point of a ray.\n     * @param ray1 - Far point of a ray, used to derive the ray direction.\n     * @param point - Point to compute the distance for.\n     * @returns - Distance of the closest point on a ray to a point.\n     */\n    export function distancePointToRay(ray0: vec3, ray1: vec3, point: vec3): number {\n        const ray_direction = vec3.subtract(v3(), ray1, ray0);\n        const ray_length = vec3.squaredLength(ray_direction);\n        if (ray_length === 0.0) {\n            return 0.0;\n        }\n\n        const eyeToPoint = vec3.subtract(v3(), point, ray0);\n        const theta = vec3.dot(eyeToPoint, ray_direction);\n        return theta / ray_length;\n    }\n\n    /**\n     * Computes a new eye coordinate for the camera that should have the given point within view. The eye is only\n     * modified with respect to its distance to the camera's center (on the camera look-at ray).\n     * @param camera - Camera as base constraint for the eye movement (only distance to center is changed).\n     * @param point - Point to adjust the camera position for.\n     * @returns - Eye coordinate for the given camera that should have the given point within view.\n     */\n    export function eyeWithPointInView(camera: Camera, point: vec3): vec3 {\n        const ray_direction = vec3.subtract(v3(), camera.center, camera.eye);\n        const ray_normalized = vec3.normalize(v3(), ray_direction);\n\n        /* Retrieve u and v for an orthonormal basis. */\n        const ortho_v = vec3.normalize(v3(), vec3.cross(v3(), ray_normalized, camera.up));\n        const ortho_u = vec3.normalize(v3(), vec3.cross(v3(), ortho_v, ray_normalized));\n\n        const distance = distancePointToRay(camera.eye, camera.center, point);\n\n        /* Compute the closest point c on the ray. */\n        const closest = vec3.add(v3(), camera.eye, vec3.scale(v3(), ray_direction, distance));\n        const t = vec3.subtract(v3(), point, closest);\n        const part_v = Math.abs(vec3.dot(t, ortho_v)) / camera.aspect;\n        const part_u = Math.abs(vec3.dot(t, ortho_u));\n\n        /* Retrieve max distance to camera with required fov. */\n        const part_max = Math.max(part_v, part_u);\n\n        /* Require distance from closest to new camera position. */\n        const a = part_max / Math.tan(camera.fovy * DEG2RAD * 0.5);\n        return vec3.subtract(v3(), closest, vec3.scale(v3(), ray_normalized, a));\n    }\n\n}\n\nexport = ray_math;\n","module.exports = \"\\nprecision highp float;\\n\\n\\n#if __VERSION__ == 100\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\n#else \\n    #define varying in\\n#endif\\n\\n\\nconst float one255ths = 1.0 / 255.0;\\n\\nvec3 float24x1_to_uint8x3(const in float f) {\\n    vec3 uint8x3 = vec3(f, fract(f * 256.0), fract(f * 65536.0));\\n    return floor(uint8x3 * 256.0) * one255ths;\\n}\\n\\nvec4 float24x1_to_uint8x4(const in float f) {\\n    vec4 uint8x4 = vec4(f, fract(f * 256.0), fract(f * 65536.0), fract(f * 16777216.0));\\n    return floor(uint8x4 * 256.0) * one255ths;\\n}\\n\\nconst vec3 premultUint8x3 = vec3(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0);\\nfloat uint8x3_to_float24x1(const in vec3 v) {\\n    return dot(v, premultUint8x3); // a1 * b1 + a2 * b2 + a3 * b3  ;)\\n}\\n\\nconst vec4 premultUint8x4 = vec4(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0, 255.0 / 4294967296.0);\\nfloat uint8x4_to_float24x1(const in vec4 v) {\\n    return dot(v, premultUint8x4); // a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4  ;)\\n}\\n\\n\\n\\n#if __VERSION__ == 100\\n    #define fragDepth gl_FragColor\\n#else \\n    layout(location = 0) out vec4 fragDepth;\\n#endif\\n\\n\\nuniform sampler2D u_texture;\\nuniform vec2 u_offset;\\nuniform vec2 u_scale;\\n\\nvarying vec2 v_uv;\\n\\n\\n\\nvoid main(void)\\n{\\n    vec2 uv = vec2(v_uv.x, 1.0 - v_uv.y) * u_scale + u_offset;\\n    float depth = texture(u_texture, uv).r;\\n\\n    fragDepth = vec4(float24x1_to_uint8x3(depth), 1.0);\\n}\\n\"","\nimport { mat4, vec3, vec4 } from 'gl-matrix';\n\nimport { assert } from './auxiliaries';\nimport { decode_float24x1_from_uint8x3, decode_uint32_from_rgba8 } from './gl-matrix-extensions';\n\nimport { Context } from './context';\nimport { Framebuffer } from './framebuffer';\nimport { Initializable } from './initializable';\nimport { NdcFillingTriangle } from './ndcfillingtriangle';\nimport { Program } from './program';\nimport { Shader } from './shader';\nimport { Texture2 } from './texture2';\n\n\n/**\n * This stage provides means to sample G-Buffers, in order to give access to world space coordinates, depth values and\n * IDs. World space coordinates are calculated by sampling the depth value and unprojecting the normalized device\n * coordinates. Depth and ID values are read from the GPU by rendering the requested pixel to a 1x1 texture and reading\n * back the value from this texture. Note that depth and ID values are cached as long as no redraw (frame) was invoked.\n */\nexport class ReadbackPass extends Initializable {\n\n    /**\n     * Read-only access to the objects context, used to get context information and WebGL API access.\n     */\n    protected _context: Context;\n\n\n    /** @see {@link cache} */\n    protected _cache = false;\n\n\n    /** @see {@link depthFBO} */\n    protected _depthFBO: Framebuffer;  // This is used if depth is already uint8x3 encoded\n\n    /** @see {@link depthAttachment} */\n    protected _depthAttachment: GLenum = 0;\n\n    /**\n     * Cache providing previously read depth values for a given position hash.\n     */\n    protected _cachedDepths = new Map<GLsizei, GLfloat | undefined>();\n\n\n    /** @see {@link idFBO} */\n    protected _idFBO: Framebuffer;\n\n    /** @see {@link idAttachment} */\n    protected _idAttachment: GLenum;\n\n    /**\n     * Cache providing previously read id values for a given position hash.\n     */\n    protected _cachedIDs = new Map<GLsizei, GLsizei | undefined>();\n\n\n    /**\n     * Buffer to read into.\n     */\n    protected _buffer = new Uint8Array(4);\n\n\n    /**\n     * Properties required for 24bit depth readback workaround. If a valid depth format is available as renderable\n     * texture format, a single fragment is rasterized in order to encode the depth of at a specific location into\n     * uint8x3 format, rendered into a RGBA texture for readback. This workaround is currently necessary since reading\n     * back depth buffer data is not supported. All following protected properties are undefined when this workaround\n     * is not required (i.e., in IE11), since the depth texture is already rendered explicitly in a previous render\n     * pass.\n     */\n    protected _texture: Texture2;\n    protected _framebuffer: Framebuffer;\n\n    /**\n     * Geometry used to draw on. This is not provided by default to allow for geometry sharing. If no triangle is given,\n     * the ndc triangle will be created and managed internally.\n     */\n    protected _ndcTriangle: NdcFillingTriangle;\n\n    /**\n     * Tracks ownership of the ndc-filling triangle.\n     */\n    protected _ndcTriangleShared = false;\n\n\n    protected _program: Program;\n    protected _uOffset: WebGLUniformLocation;\n    protected _uScale: WebGLUniformLocation;\n\n\n    /**\n     * Retrieve the depth of a fragment in normalized device coordinates. The implementation of this function is\n     * assigned at initialization based on the available WebGL features.\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\n     */\n    depthAt: (x: GLsizei, y: GLsizei) => GLfloat | undefined;\n\n\n    constructor(context: Context) {\n        super();\n        this._context = context;\n    }\n\n\n    /**\n     * Frame implementation clearing depth and ID caches. To avoid unnecessary readbacks (potentially causing sync\n     * points), the requested and found IDs and depths are cached by position. Hence, these cached values have to be\n     * cleared whenever the frame buffers are written/rendered to.\n     */\n    protected onFrame() {\n        this._cachedDepths.clear();\n        this._cachedIDs.clear();\n    }\n\n\n    /**\n     * Create a numerical hash that can be used for efficient look-up (number preferred, no string for now). Note that\n     * the implementation assumes that we do not exceed 65k pixel in horizontal or vertical resolution soon.\n     * @param x - Horizontal coordinate from the upper left corner of the viewport origin.\n     * @param y - Vertical coordinate from the upper left corner of the viewport origin.\n     */\n    protected hash(x: GLsizei, y: GLsizei): GLsizei {\n        return 0xffff * y + x;\n    }\n\n    /**\n     * Retrieve the depth of a fragment in normalized device coordinates. This function implements the direct readback\n     * of uint8x3 encoded depth values from a given frame buffer (see depthFBO and depthAttachment).\n     * @param x - Horizontal coordinate from the upper left corner of the viewport origin.\n     * @param y - Vertical coordinate from the upper left corner of the viewport origin.\n     * @returns - Either the depth at location x, y or undefined, if the far plane was hit.\n     */\n    @Initializable.assert_initialized()\n    protected directReadDepthAt(x: GLsizei, y: GLsizei): GLfloat | undefined {\n        const hash = this.hash(x, y);\n        if (this._cache && this._cachedDepths.has(hash)) {\n            return this._cachedDepths.get(hash);\n        }\n\n        assert(this._depthFBO !== undefined && this._depthFBO.valid, `valid depth FBO expected for reading back depth`);\n        const texture = this._depthFBO.texture(this._depthAttachment) as Texture2;\n\n        const gl = this._context.gl;\n        const size = texture.size;\n\n        this._depthFBO.bind();\n\n        if (this._context.isWebGL2 || this._context.supportsDrawBuffers) {\n            gl.readBuffer(this._depthAttachment);\n        }\n        gl.readPixels(x, size[1] - (y + 0.5), 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, this._buffer);\n\n        let depth: GLfloat | undefined = decode_float24x1_from_uint8x3(\n            vec3.fromValues(this._buffer[0], this._buffer[1], this._buffer[2]));\n        /** @todo fix far plane depth to be at 1.0 */\n        depth = depth > 0.996 ? undefined : depth;\n\n        if (this._cache) {\n            this._cachedDepths.set(hash, depth);\n        }\n        return depth;\n    }\n\n\n    /**\n     * Retrieve the depth of a fragment in normalized device coordinates.\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\n     * @returns - Either the depth at location x, y or undefined, if the far plane was hit.\n     */\n    @Initializable.assert_initialized()\n    renderThenReadDepthAt(x: GLsizei, y: GLsizei): GLfloat | undefined {\n        const hash = this.hash(x, y);\n        if (this._cache && this._cachedDepths.has(hash)) {\n            return this._cachedDepths.get(hash);\n        }\n\n        assert(this._depthFBO !== undefined && this._depthFBO.valid, `valid depth FBO expected for reading back depth`);\n        const texture = this._depthFBO.texture(this._depthAttachment) as Texture2;\n\n        const gl = this._context.gl;\n        const size = texture.size;\n\n        /* Render a single fragment, thereby encoding the depth render texture data of the requested position. */\n        gl.viewport(0, 0, 1, 1);\n\n        this._program.bind();\n        gl.uniform2f(this._uOffset, x / size[0], (size[1] - y) / size[1]);\n        gl.uniform2f(this._uScale, 1.0 / size[0], 1.0 / size[1]);\n\n        texture.bind(gl.TEXTURE0);\n\n        this._framebuffer.bind();\n\n        this._ndcTriangle.bind();\n        this._ndcTriangle.draw();\n        this._ndcTriangle.unbind();\n\n        texture.unbind();\n\n        /** Every stage is expected to bind its own program when drawing, thus, unbinding is not necessary. */\n        // this.program.unbind();\n\n\n        /* Bind the framebuffer and read back the requested pixel. */\n\n        if ((this._context.isWebGL2 || this._context.supportsDrawBuffers) && gl.readBuffer) {\n            gl.readBuffer(gl.COLOR_ATTACHMENT0);\n        }\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, this._buffer);\n        this._framebuffer.unbind();\n\n        let depth: GLfloat | undefined = decode_float24x1_from_uint8x3(\n            vec3.fromValues(this._buffer[0], this._buffer[1], this._buffer[2]));\n        /** @todo fix far plane depth to be at 1.0 */\n        depth = depth > 0.996 ? undefined : depth;\n\n        if (this._cache) {\n            this._cachedDepths.set(hash, depth);\n        }\n        return depth;\n    }\n\n\n    /**\n     * Specializes this pass's initialization. If required. ad screen-filling triangle geometry and a single program\n     * are created. All attribute and dynamic uniform locations are cached.\n     * @param ndcTriangle - If specified, assumed to be used as shared geometry. If none is specified, a ndc-filling\n     * triangle will be created internally.\n     */\n    @Initializable.initialize()\n    initialize(ndcTriangle: NdcFillingTriangle | undefined): boolean {\n        const gl = this._context.gl;\n        const gl2facade = this._context.gl2facade;\n\n        /* If depth is already uint8x3 encoded into a rgb/rgba target no readback workaround is required. */\n        if (this._context.isWebGL1 && !this._context.supportsDepthTexture) {\n            this.depthAt = this.directReadDepthAt;\n            return true;\n        }\n\n        /* Configure read back for depth data. */\n        this.depthAt = this.renderThenReadDepthAt;\n\n\n        const vert = new Shader(this._context, gl.VERTEX_SHADER, 'ndcvertices.vert (readback)');\n        vert.initialize(require('./shaders/ndcvertices.vert'));\n        const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'readbackdepth.frag');\n        frag.initialize(require('./shaders/readbackdepth.frag'));\n\n        this._program = new Program(this._context, 'ReadbackDepthProgram');\n        this._program.initialize([vert, frag]);\n\n        this._uOffset = this._program.uniform('u_offset');\n\n        this._program.bind();\n        gl.uniform1i(this._program.uniform('u_texture'), 0);\n        this._program.unbind();\n\n        /* Configure read back frame buffer and color attachment. */\n\n        this._texture = new Texture2(this._context, 'ReadbackRenderTexture');\n        this._texture.initialize(1, 1, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE);\n\n        this._framebuffer = new Framebuffer(this._context, 'ReadbackFBO');\n        this._framebuffer.initialize([[gl2facade.COLOR_ATTACHMENT0, this._texture]]);\n\n\n        if (ndcTriangle === undefined) {\n            this._ndcTriangle = new NdcFillingTriangle(this._context);\n        } else {\n            this._ndcTriangle = ndcTriangle;\n            this._ndcTriangleShared = true;\n        }\n\n        if (!this._ndcTriangle.initialized) {\n            const aVertex = this._program.attribute('a_vertex', 0);\n            this._ndcTriangle.initialize(aVertex);\n        } else {\n            this._program.attribute('a_vertex', this._ndcTriangle.aVertex);\n        }\n\n        return true;\n    }\n\n\n    /**\n     * Specializes this stage's uninitialization. Program and geometry resources are released (if allocated). Cached\n     * uniform and attribute locations are invalidated.\n     */\n    @Initializable.uninitialize()\n    uninitialize(): void {\n        if (this._context.isWebGL1 && !this._context.supportsDepthTexture) {\n            return;\n        }\n\n        if (!this._ndcTriangleShared && this._ndcTriangle.initialized) {\n            this._ndcTriangle.uninitialize();\n        }\n\n        this._program.uninitialize();\n\n        this._texture.uninitialize();\n        this._framebuffer.uninitialize();\n    }\n\n\n    /**\n     * Retrieving the world space coordinate of a fragment.\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\n     * @param zInNDC - optional depth parameter (e.g., from previous query).\n     * @param viewProjectionInverse - matrix used to unproject the coordinate from ndc to world space.\n     * @returns - The unprojected world space coordinate at location x, y.\n     */\n    @Initializable.assert_initialized()\n    coordsAt(x: GLsizei, y: GLsizei, zInNDC: number | undefined, viewProjectionInverse: mat4): vec3 | undefined {\n        const size = (this._depthFBO.texture(this._depthAttachment) as Texture2).size;\n        const depth = zInNDC === undefined ? this.depthAt(x, y) : zInNDC;\n        if (depth === undefined) {\n            return undefined;\n        }\n        const p = vec3.fromValues(x * 2.0 / size[0] - 1.0, 1.0 - y * 2.0 / size[1], depth * 2.0 - 1.0);\n        return vec3.transformMat4(vec3.create(), p, viewProjectionInverse);\n    }\n\n    /**\n     * Retrieve the id of an object at fragment position.\n     * @param x - Horizontal coordinate for the upper left corner of the viewport origin.\n     * @param y - Vertical coordinate for the upper left corner of the viewport origin.\n     * @returns - The id rendered at location x, y.\n     */\n    @Initializable.assert_initialized()\n    idAt(x: GLsizei, y: GLsizei): GLsizei | undefined {\n        const hash = this.hash(x, y);\n        if (this._cache && this._cachedIDs.has(hash)) {\n            return this._cachedIDs.get(hash);\n        }\n\n        const gl = this._context.gl;\n        const size = (this._idFBO.texture(this._idAttachment) as Texture2).size;\n\n        this._idFBO.bind();\n        if ((this._context.isWebGL2 || this._context.supportsDrawBuffers)\n            && gl.readBuffer) {\n            gl.readBuffer(this._idAttachment);\n        }\n        gl.readPixels(x, size[1] - (y + 0.5), 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, this._buffer);\n\n        const id = decode_uint32_from_rgba8(\n            vec4.fromValues(this._buffer[0], this._buffer[1], this._buffer[2], this._buffer[3]));\n\n        if (this._cache) {\n            this._cachedIDs.set(hash, id);\n        }\n        return id;\n    }\n\n\n    /**\n     * Whether or not caching of requested depths and ids should be used to reduce performance impact.\n     */\n    set cache(value: boolean) {\n        this._cache = value;\n    }\n\n\n    /**\n     * Sets the framebuffer object that is to be used for depth readback.\n     * @param framebuffer - Framebuffer that is to be used for depth readback.\n     */\n    set depthFBO(framebuffer: Framebuffer) {\n        this._depthFBO = framebuffer;\n    }\n\n    /**\n     * Sets the framebuffer's {@link depthFBO} depth attachment that is to be used for depth readback.\n     * @param attachment - Depth attachment that is to be used for depth readback.\n     */\n    set depthAttachment(attachment: GLenum) {\n        this._depthAttachment = attachment;\n    }\n\n    /**\n     * Sets the framebuffer object that is to be used for id readback.\n     * @param framebuffer - Framebuffer that is to be used for id readback.\n     */\n    set idFBO(framebuffer: Framebuffer) {\n        this._idFBO = framebuffer;\n    }\n\n    /**\n     * Sets the framebuffer's {@link idFBO} id attachment that is to be used for id readback.\n     * @param attachment - ID attachment that is to be used for id readback.\n     */\n    set idAttachment(attachment: GLenum) {\n        this._idAttachment = attachment;\n    }\n\n}\n","module.exports = \"\\nprecision lowp float;\\n\\n\\n#if __VERSION__ == 100\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\n#else \\n    #define varying in\\n#endif\\n\\n\\n\\n#if __VERSION__ == 100\\n    #define fragColor gl_FragColor\\n#else \\n    layout(location = 0) out vec4 fragColor;\\n#endif\\n\\n\\nuniform sampler2D u_texture;\\n\\nvarying vec2 v_uv;\\n\\n\\nvoid main(void)\\n{\\n    fragColor = texture(u_texture, v_uv);\\n}\\n\"","module.exports = \"\\nprecision lowp float;\\n\\n\\n#if __VERSION__ == 100\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\n#else \\n    #define varying in\\n#endif\\n\\n\\n\\n#if __VERSION__ == 100\\n    #define fragColor gl_FragColor\\n#else\\n    layout(location = 0) out vec4 fragColor;\\n#endif\\n\\n\\nuniform float u_weight;\\nuniform sampler2D u_accumulationTexture;\\nuniform sampler2D u_currentFrameTexture;\\n\\nvarying vec2 v_uv;\\n\\n\\nvoid main(void)\\n{\\n    vec4 accumulationColor = texture(u_accumulationTexture, v_uv);\\n    vec4 currentFrameColor = texture(u_currentFrameTexture, v_uv);\\n    fragColor = mix(accumulationColor, currentFrameColor, u_weight);\\n}\\n\"","\nimport { assert } from './auxiliaries';\n\nimport { Buffer } from './buffer';\nimport { Context } from './context';\nimport { Geometry } from './geometry';\nimport { Initializable } from './initializable';\n\n\n/**\n * Geometry for a viewport/screen-filling rectangle. The geometry creates rectangle vertices, associated to\n * a vertex array object (from geometry base class), and provides a specialized draw call for rendering. It is intended\n * for, e.g., viewport/screen-filling rendering in post-processing. The vertices can be used directly as normalized\n * device space (NDC) coordinates, e.g., by using the following vertex shader snippet:\n *\n * ```\n * #if __VERSION__ == 100\n *     attribute vec2 a_vertex;\n * #else\n *     layout(location = 0) in vec2 a_vertex;\n * #endif\n *\n * ...\n *\n * v_uv = a_vertex * 0.5 + 0.5;\n * gl_Position = vec4(a_vertex, 0.0, 1.0);\n * ```\n */\nexport class NdcFillingRectangle extends Geometry {\n\n    /**\n     * 2 ───── 3\n     * │  \\    │\n     * │    \\  │\n     * 0 ───── 1\n     */\n    protected static readonly VERTICES = new Float32Array(\n        [-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]);\n\n    /**\n     * Object constructor, requires a context and an identifier.\n     * @param context - Valid context to create the object for.\n     * @param identifier - Meaningful name for identification of this instance.\n     */\n    constructor(context: Context, identifier?: string) {\n        super(context, identifier);\n\n        /* Generate identifier from constructor name if none given. */\n        identifier = identifier !== undefined && identifier !== `` ? identifier : this.constructor.name;\n\n        const vertexVBO = new Buffer(context, identifier + 'VBO');\n\n        this._buffers.push(vertexVBO);\n    }\n\n\n    /**\n     * Binds the vertex buffer object (VBO) to an attribute binding point of a given, pre-defined index.\n     */\n    protected bindBuffers(indices: Array<GLuint>): void {\n        /* Please note the implicit bind in attribEnable. */\n        this._buffers[0].attribEnable(indices[0], 2, this.context.gl.FLOAT, false, 0, 0, true, false);\n    }\n\n    /**\n     * Unbinds the vertex buffer object (VBO) and disables the binding point.\n     */\n    protected unbindBuffers(indices: Array<GLuint>): void {\n        /* Please note the implicit unbind in attribEnable is skipped. */\n        this._buffers[0].attribDisable(indices[0], true, true);\n    }\n\n\n    /**\n     * Creates the vertex buffer object (VBO) and creates and initializes the buffer's data store.\n     * @param aVertex - Attribute binding point for vertices.\n     */\n    initialize(aVertex: GLuint): boolean {\n        const gl = this.context.gl;\n        const valid = super.initialize([gl.ARRAY_BUFFER], [aVertex]);\n\n        assert(this._buffers[0] !== undefined && this._buffers[0].object instanceof WebGLBuffer,\n            `expected valid WebGLBuffer`);\n\n        this._buffers[0].data(NdcFillingRectangle.VERTICES, gl.STATIC_DRAW);\n\n        return valid;\n    }\n\n    /**\n     * Specifies/invokes the draw of this screen-aligned triangle.\n     */\n    @Initializable.assert_initialized()\n    draw(): void {\n        const gl = this.context.gl;\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n}\n","\nimport { CameraModifier } from './cameramodifier';\n\n\nexport class ZoomModifier extends CameraModifier {\n\n    update(): void {\n\n    }\n\n}\n","\nimport { CameraModifier } from './cameramodifier';\n\n\nexport class PanModifier extends CameraModifier {\n\n    update(): void {\n\n    }\n\n}\n","\nimport { vec2 } from 'gl-matrix';\n\nimport { Camera } from './camera';\nimport { EventHandler } from './eventhandler';\nimport { MouseEventProvider } from './mouseeventprovider';\nimport { PointerLock } from './pointerlock';\nimport { Invalidate } from './renderer';\n\nimport { FirstPersonModifier } from './firstpersonmodifier';\nimport { TrackballModifier } from './trackballmodifier';\nimport { TurntableModifier } from './turntablemodifier';\n\n\nexport class Navigation {\n\n    /**\n     * The navigation's invalidation callback. This should usually be setup by the owning renderer and invoke the\n     * same callback the renderer has been given by the canvas. This invalidation is required, when continuous\n     * rendering is not present, events might cause need for new rendering requests.\n     */\n    protected _invalidate: Invalidate;\n\n    /** @see {@link camera} */\n    protected _camera: Camera;\n\n    /**\n     * Currently active metaphor.\n     */\n    protected _metaphor: Navigation.Metaphor;\n\n    /**\n     * Identifies the active camera modifier.\n     */\n    protected _mode: Navigation.Modes | undefined;\n\n    /**\n     * Specifies, whether or not rotation mode should be invoked on any move event, regardless of buttons.\n     */\n    protected _alwaysRotateOnMove = false;\n\n    /**\n     * First person camera modifier.\n     */\n    protected _firstPerson: FirstPersonModifier | undefined;\n\n    /**\n     * Trackball camera modifier.\n     */\n    protected _trackball: TrackballModifier | undefined;\n\n    /**\n     * Turntable camera modifier.\n     */\n    protected _turntable: TurntableModifier | undefined;\n\n    /**\n     * Even handler used to forward/map events to specific camera modifiers.\n     */\n    protected _eventHandler: EventHandler;\n\n\n    constructor(invalidate: Invalidate, mouseEventProvider: MouseEventProvider) {\n        this._invalidate = invalidate;\n\n        /* Create event handler that listens to mouse events. */\n        this._eventHandler = new EventHandler(invalidate, mouseEventProvider);\n\n        /* Listen to mouse events. */\n        this._eventHandler.pushMouseDownHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\n            this.onMouseDown(latests, previous));\n        this._eventHandler.pushMouseUpHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\n            this.onMouseUp(latests, previous));\n        this._eventHandler.pushMouseMoveHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\n            this.onMouseMove(latests, previous));\n\n        this._eventHandler.pushClickHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\n            this.onClick(latests, previous));\n\n        // this._eventHandler.pushMouseWheelHandler((latests: Array<WheelEvent>, previous: Array<WheelEvent>) =>\n        //     this.onWheel(latests, previous));\n\n        /* Explicitly use the setter here to create the appropriate modifier. */\n        this.metaphor = Navigation.Metaphor.Turntable;\n    }\n\n\n    /**\n     * Resolves the event to camera modifier mapping by returning the responsible camera modifier.\n     * @param event - Event to retrieve navigation mode for.\n     */\n    protected mode(event: MouseEvent | TouchEvent | KeyboardEvent): Navigation.Modes | undefined {\n\n        const isPrimaryButtonDown = (event as MouseEvent).buttons & 1;\n        const isMouseDown = event.type === 'mousedown';\n        const isMouseMove = event.type === 'mousemove';\n\n        const isPointerLockedRotate = PointerLock.active() && this._alwaysRotateOnMove;\n\n        if (isPointerLockedRotate || ((isMouseDown || isMouseMove) && isPrimaryButtonDown)) {\n            return Navigation.Modes.Rotate;\n\n            // } else if ((event.type === 'mousedown' || event.type === 'mousemove')\n            //     && ((event as MouseEvent).buttons & 2)) {\n            //     return Navigation.Modes.Zoom;\n\n            // } else if (event.type === 'wheel') {\n            //     return Navigation.Modes.ZoomStep;\n            // }\n        }\n        return undefined;\n    }\n\n    protected rotate(event: MouseEvent | TouchEvent, start: boolean): void {\n        const point = this._eventHandler.offsets(event)[0];\n\n        switch (this._metaphor) {\n            case Navigation.Metaphor.FirstPerson:\n                const firstPerson = this._firstPerson as FirstPersonModifier;\n                let movement: vec2 | undefined;\n                if (PointerLock.active() && event instanceof MouseEvent) {\n                    movement = vec2.fromValues((event as MouseEvent).movementX, (event as MouseEvent).movementY);\n                }\n                start ? firstPerson.initiate(point) : firstPerson.process(point, movement);\n                event.preventDefault();\n                break;\n\n            case Navigation.Metaphor.Trackball:\n                const trackball = this._trackball as TrackballModifier;\n                start ? trackball.initiate(point) : trackball.process(point);\n                event.preventDefault();\n                break;\n\n            case Navigation.Metaphor.Turntable:\n                const turntable = this._turntable as TurntableModifier;\n                start ? turntable.initiate(point) : turntable.process(point);\n                event.preventDefault();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n\n    protected onMouseDown(latests: Array<MouseEvent>, previous: Array<MouseEvent>) {\n        const event: MouseEvent = latests[latests.length - 1];\n        // for (const event of latests) {\n\n        this._mode = this.mode(event);\n        switch (this._mode) {\n            case Navigation.Modes.Zoom:\n                // this.startZoom(event);\n                break;\n\n            case Navigation.Modes.Rotate:\n                this.rotate(event, true);\n                break;\n\n            default:\n                break;\n            // }\n        }\n    }\n\n    protected onMouseUp(latests: Array<MouseEvent>, previous: Array<MouseEvent>) {\n        const event: MouseEvent = latests[latests.length - 1];\n\n        // for (const event of latests) {\n        if (undefined === this._mode) {\n            return;\n        }\n        event.preventDefault();\n        // }\n    }\n\n    protected onMouseMove(latests: Array<MouseEvent>, previous: Array<MouseEvent>) {\n        const event: MouseEvent = latests[latests.length - 1];\n        // for (const event of latests) {\n\n        const modeWasUndefined = (this._mode === undefined);\n        this._mode = this.mode(event);\n        switch (this._mode) {\n            // case Navigation.Modes.Zoom:\n            //     // modeWasUndefined ? this.startZoom(event) : this.updateZoom(event);\n            //     break;\n\n            case Navigation.Modes.Rotate:\n                this.rotate(event, modeWasUndefined);\n                break;\n\n            default:\n                break;\n            // }\n        }\n    }\n\n    protected onClick(latests: Array<MouseEvent>, previous: Array<MouseEvent>) {\n        // const event: MouseEvent = latests[latests.length - 1];\n    }\n\n\n    /**\n     * Update should invoke navigation specific event processing. When using, e.g., an event handler, the event handlers\n     * update method should be called in order to have navigation specific event processing invoked.\n     */\n    update(): void {\n        this._eventHandler.update();\n    }\n\n    /**\n     * The camera that is to be modified in response to various events.\n     */\n    set camera(camera: Camera) {\n        this._camera = camera;\n        if (this._firstPerson) {\n            this._firstPerson.camera = camera;\n        }\n        if (this._trackball) {\n            this._trackball.camera = camera;\n        }\n        if (this._turntable) {\n            this._turntable.camera = camera;\n        }\n    }\n\n    /**\n     * Configure this navigation's metaphor.\n     */\n    set metaphor(metaphor: Navigation.Metaphor) {\n        if (this._metaphor === metaphor) {\n            return;\n        }\n\n        this._firstPerson = undefined;\n        this._trackball = undefined;\n        this._turntable = undefined;\n\n        this._eventHandler.exitPointerLock(); /* Might be requested (and active) from FirstPerson or Flight. */\n        this._alwaysRotateOnMove = false;\n\n        this._metaphor = metaphor;\n        switch (this._metaphor) {\n            case Navigation.Metaphor.FirstPerson:\n\n                this._eventHandler.requestPointerLock();\n                this._alwaysRotateOnMove = true;\n\n                this._firstPerson = new FirstPersonModifier();\n                this._firstPerson.camera = this._camera;\n                break;\n\n            case Navigation.Metaphor.Trackball:\n                this._trackball = new TrackballModifier();\n                this._trackball.camera = this._camera;\n                break;\n\n            case Navigation.Metaphor.Turntable:\n                this._turntable = new TurntableModifier();\n                this._turntable.camera = this._camera;\n                break;\n\n            default:\n                break;\n        }\n        this._invalidate(true);\n    }\n\n    get metaphor(): Navigation.Metaphor {\n        return this._metaphor;\n    }\n\n}\n\n\nexport namespace Navigation {\n\n    /**\n     * Navigation modes used for identification of the current navigation intend, which is derived based on the event\n     * types or gestures, regardless of the active navigation metaphor and its constraints.\n     */\n    export enum Modes {\n        Move,\n        Pan,\n        Rotate,\n        Zoom,\n        ZoomStep,\n    }\n\n    /**\n     * Navigation metaphors supported by the default navigation implementation.\n     */\n    export enum Metaphor {\n        FirstPerson = 'firstperson',\n        Flight = 'flight',\n        Trackball = 'trackball',\n        Turntable = 'turntable',\n    }\n}\n","\nimport { assert, log, LogLevel } from './auxiliaries';\nimport { byteSizeOfFormat } from './formatbytesizes';\n\nimport { Bindable } from './bindable';\nimport { TexImage2DData } from './gl2facade';\nimport { Initializable } from './initializable';\nimport { AbstractObject } from './object';\n\n\n/**\n * Wrapper for an WebGL cube texture providing size accessors and requiring for bind, unbind, resize, validity, and\n * initialization implementations. The texture cube object is created on initialization and deleted on uninitialization.\n * After being initialized, the texture cube can be resized, reformated, and data can set directly or via load:\n * ```\n * const cubeMap = new TextureCube(context, 'CubeMap');\n * cubeMap.initialize(512, gl.RGB8, gl.RGB, gl.UNSIGNED_BYTE);\n * cubeMap.load({\n *     positiveX: 'data/cubemap.px.png', negativeX: 'data/cubemap.nx.png',\n *     positiveY: 'data/cubemap.py.png', negativeY: 'data/cubemap.ny.png',\n *     positiveZ: 'data/cubemap.pz.png', negativeZ: 'data/cubemap.nz.png',\n * }).then(() => this.invalidate(true);\n * ```\n * Please note that each of the six textures of a texture cube is required to be of the exact same, square dimensions.\n * This is reflected within this classes interface by providing a single size property in favor to width and height.\n */\nexport class TextureCube extends AbstractObject<WebGLTexture> implements Bindable {\n\n    /**\n     * Default texture, e.g., used for unbind.\n     */\n    static readonly DEFAULT_TEXTURE = undefined;\n\n    /** @see {@link size} */\n    protected _size: GLsizei = 0;\n\n    /** @see {@link internalFormat} */\n    protected _internalFormat: GLenum = 0;\n\n    /** @see {@link format} */\n    protected _format: GLenum = 0;\n\n    /** @see {@link type} */\n    protected _type: GLenum = 0;\n\n    /**\n     * For tracking approximate use of GPU storage in bytes per face.\n     */\n    protected _bytes: Array<GLsizei> = [0, 0, 0, 0, 0, 0];\n\n\n    /**\n     * Provides an ID for each of the six texture cube identifier (0: +x, 1: -x, 2: +y, 3: -y, 4: +z, 5: -z).\n     * @param face - Texture cube face identifier, e.g., `TEXTURE_CUBE_MAP_POSITIVE_X`.\n     * @returns - Face ID in the following sequence: 0: +x, 1: -x, 2: +y, 3: -y, 4: +z, 5: -z.\n     */\n    protected faceID(face: GLenum): GLint {\n        const gl = this._context.gl;\n        switch (face) {\n            case gl.TEXTURE_CUBE_MAP_POSITIVE_X:\n                return 0;\n            case gl.TEXTURE_CUBE_MAP_NEGATIVE_X:\n                return 1;\n            case gl.TEXTURE_CUBE_MAP_POSITIVE_Y:\n                return 2;\n            case gl.TEXTURE_CUBE_MAP_NEGATIVE_Y:\n                return 3;\n            case gl.TEXTURE_CUBE_MAP_POSITIVE_Z:\n                return 4;\n            case gl.TEXTURE_CUBE_MAP_NEGATIVE_Z:\n                return 5;\n            default:\n                assert(false, `expected texture cube map identifier (${gl.TEXTURE_CUBE_MAP_POSITIVE_X}, ` +\n                    `${gl.TEXTURE_CUBE_MAP_NEGATIVE_X}, ${gl.TEXTURE_CUBE_MAP_POSITIVE_Y}, ` +\n                    `${gl.TEXTURE_CUBE_MAP_NEGATIVE_Y}, ${gl.TEXTURE_CUBE_MAP_POSITIVE_Z}, or` +\n                    `${gl.TEXTURE_CUBE_MAP_NEGATIVE_Z}), given ${face}`);\n                return -1;\n        }\n    }\n\n\n    /**\n     * Create a texture object on the GPU.\n     * @param size - Initial size (width/height) of each face, which are required to be a square texture.\n     * @param internalFormat - Internal format of the texture object.\n     * @param format - Format of the texture data even though no data is passed.\n     * @param type - Data type of the texel data.\n     */\n    protected create(size: GLsizei, internalFormat: GLenum, format: GLenum, type: GLenum): WebGLTexture | undefined {\n\n        assert(size > 0, `texture cube requires valid size (width/height) of greater than zero`);\n        const gl = this._context.gl;\n        const gl2facade = this._context.gl2facade;\n\n        this._object = gl.createTexture();\n\n        this._size = size;\n        this._internalFormat = internalFormat;\n        this._format = format;\n        this._type = type;\n\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._object);\n\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, this._internalFormat,\n            this._size, this._size, 0, this._format, this._type);\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, this._internalFormat,\n            this._size, this._size, 0, this._format, this._type);\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, this._internalFormat,\n            this._size, this._size, 0, this._format, this._type);\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, this._internalFormat,\n            this._size, this._size, 0, this._format, this._type);\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, this._internalFormat,\n            this._size, this._size, 0, this._format, this._type);\n        gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, this._internalFormat,\n            this._size, this._size, 0, this._format, this._type);\n\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, TextureCube.DEFAULT_TEXTURE);\n        /* note that gl.isTexture requires the texture to be bound */\n        this._valid = gl.isTexture(this._object);\n        this.context.allocationRegister.reallocate(this._identifier, 0);\n\n        return this._object;\n    }\n\n    /**\n     * Delete the texture object on the GPU. This should have the reverse effect of `create`.\n     */\n    protected delete(): void {\n        assert(this._object instanceof WebGLTexture, `expected WebGLTexture object`);\n        this._context.gl.deleteTexture(this._object);\n\n        this._object = undefined;\n        this._valid = false;\n\n        this._internalFormat = 0;\n        this._format = 0;\n        this._type = 0;\n\n        this._size = 0;\n    }\n\n\n    /**\n     * Bind the texture object to a texture unit.\n     */\n    @Initializable.assert_initialized()\n    bind(unit?: GLenum): void {\n        const gl = this.context.gl;\n        if (unit) {\n            gl.activeTexture(unit);\n        }\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._object);\n    }\n\n    /**\n     * Unbind the texture object from a texture unit.\n     */\n    @Initializable.assert_initialized()\n    unbind(unit?: GLenum): void {\n        const gl = this.context.gl;\n        if (unit) {\n            gl.activeTexture(unit);\n        }\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, TextureCube.DEFAULT_TEXTURE);\n    }\n\n    /**\n     * Asynchronous load of multiple images (specified per texture cube face) via URI or data URI. Please note\n     * that the texture will not be resized and is assumed to be resized upfront accordingly.\n     * @param urisByFace - URI linking the image that should be loaded for a specific face. Data URI is also supported.\n     * @param crossOrigin - Enable cross origin data loading.\n     * @returns - Promise for handling images load status.\n     */\n    @Initializable.assert_initialized()\n    load(urisByFace: TextureCube.PerFaceURI, crossOrigin: boolean = false): Promise<void> {\n\n        const gl = this.context.gl;\n        return new Promise((resolve, reject) => {\n            const images = new Array<[GLenum, string]>();\n\n            if (urisByFace.positiveX) {\n                images.push([gl.TEXTURE_CUBE_MAP_POSITIVE_X, urisByFace.positiveX]);\n            }\n            if (urisByFace.negativeX) {\n                images.push([gl.TEXTURE_CUBE_MAP_NEGATIVE_X, urisByFace.negativeX]);\n            }\n            if (urisByFace.positiveY) {\n                images.push([gl.TEXTURE_CUBE_MAP_POSITIVE_Y, urisByFace.positiveY]);\n            }\n            if (urisByFace.negativeY) {\n                images.push([gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, urisByFace.negativeY]);\n            }\n            if (urisByFace.positiveZ) {\n                images.push([gl.TEXTURE_CUBE_MAP_POSITIVE_Z, urisByFace.positiveZ]);\n            }\n            if (urisByFace.negativeZ) {\n                images.push([gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, urisByFace.negativeZ]);\n            }\n\n            let waiting = images.length;\n            for (const tuple of images) {\n                const image = new Image();\n                image.onerror = () => reject();\n\n                image.onload = () => {\n                    if (image.width !== image.height) {\n                        log(LogLevel.Dev, `image ignored, width and height expected to be equal (square image)`);\n                        return;\n                    }\n                    if (image.width !== this._size) {\n                        log(LogLevel.Dev, `image ignored, width and height expected to match ` +\n                            `this texture's size ${this._size}, given ${image.width}`);\n                        return;\n                    }\n                    this.data([tuple[0], image]);\n\n                    /* Resolve the promise when all requested images have been loaded. */\n                    waiting = waiting - 1;\n                    if (waiting === 0) {\n                        resolve();\n                    }\n                };\n\n                if (crossOrigin) {\n                    image.crossOrigin = 'anonymous';\n                }\n                /* Trigger asynchronous loading of image data. */\n                image.src = tuple[1];\n            }\n\n        });\n    }\n\n    /**\n     * Pass data of six images to the texture cube object.\n     * @param data - Per face texel data that will be copied into the objects data store. Either provided via object\n     * or as tuple, providing the data associated to the targeted face (as GLenum).\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    data(data: TextureCube.PerFaceData | [GLenum, TexImage2DData], bind: boolean = true, unbind: boolean = true): void {\n        const gl = this.context.gl;\n        const gl2facade = this.context.gl2facade;\n\n        let bytesPerFace = this._size * this._size * byteSizeOfFormat(this.context, this._internalFormat as GLenum);\n        // Fix in case of implicit float and half-float texture generation (e.g., in webgl with half_float support).\n        if (this._type === this.context.gl2facade.HALF_FLOAT && this._internalFormat !== this.context.gl.RGBA16F) {\n            bytesPerFace *= 2;\n        } else if (this._type === this.context.gl.FLOAT && this._internalFormat !== this.context.gl.RGBA16F) {\n            bytesPerFace *= 4;\n        }\n\n        if (bind) {\n            this.bind();\n        }\n\n        if (data instanceof Array && data.length === 2) { /* if tuple is provided... */\n            gl2facade.texImage2D(data[0], 0, this._internalFormat,\n                this._size, this._size, 0, this._format, this._type, data[1]);\n            const id = this.faceID(data[0]);\n            this.context.allocationRegister.deallocate(this._identifier, this._bytes[id]);\n            this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\n            this._bytes[id] = bytesPerFace;\n\n        } else {\n            const perFaceData = data as TextureCube.PerFaceData;\n\n            if (perFaceData.positiveX !== undefined) {\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, this._internalFormat,\n                    this._size, this._size, 0, this._format, this._type, perFaceData.positiveX);\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[0]);\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\n                this._bytes[0] = bytesPerFace;\n            }\n            if (perFaceData.negativeX !== undefined) {\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, this._internalFormat,\n                    this._size, this._size, 0, this._format, this._type, perFaceData.negativeX);\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[1]);\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\n                this._bytes[1] = bytesPerFace;\n            }\n            if (perFaceData.positiveY !== undefined) {\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, this._internalFormat,\n                    this._size, this._size, 0, this._format, this._type, perFaceData.positiveY);\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[2]);\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\n                this._bytes[2] = bytesPerFace;\n            }\n            if (perFaceData.negativeY !== undefined) {\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, this._internalFormat,\n                    this._size, this._size, 0, this._format, this._type, perFaceData.negativeY);\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[3]);\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\n                this._bytes[3] = bytesPerFace;\n            }\n            if (perFaceData.positiveZ !== undefined) {\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, this._internalFormat,\n                    this._size, this._size, 0, this._format, this._type, perFaceData.positiveZ);\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[4]);\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\n                this._bytes[4] = bytesPerFace;\n            }\n            if (perFaceData.negativeZ !== undefined) {\n                gl2facade.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, this._internalFormat,\n                    this._size, this._size, 0, this._format, this._type, perFaceData.negativeZ);\n                this.context.allocationRegister.deallocate(this._identifier, this._bytes[5]);\n                this.context.allocationRegister.allocate(this._identifier, bytesPerFace);\n                this._bytes[5] = bytesPerFace;\n            }\n        }\n\n        if (unbind) {\n            this.unbind();\n        }\n    }\n\n    /**\n     * Sets the texture object's magnification and minification filter.\n     * @param mag - Value for the TEXTURE_MAG_FILTER parameter.\n     * @param min - Value for the TEXTURE_MIN_FILTER parameter.\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    filter(mag: GLenum, min: GLenum, bind: boolean = true, unbind: boolean = true): void {\n        const gl = this.context.gl;\n\n        if (bind) {\n            this.bind();\n        }\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, mag);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, min);\n        if (unbind) {\n            this.unbind();\n        }\n    }\n\n    /**\n     * Sets the texture object's wrapping function for s and t coordinates.\n     * @param wrap_s - Value for the TEXTURE_WRAP_S parameter.\n     * @param wrap_t - Value for the TEXTURE_WRAP_T parameter.\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    /* tslint:disable-next-line:variable-name */\n    wrap(wrap_s: GLenum, wrap_t: GLenum, bind: boolean = true, unbind: boolean = true): void {\n        const gl = this.context.gl;\n\n        if (bind) {\n            this.bind();\n        }\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, wrap_s);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, wrap_t);\n        if (unbind) {\n            this.unbind();\n        }\n    }\n\n    /**\n     * This can be used to reformat the texture image without creating a new texture object. Please note that this\n     * resets the texture's image data to undefined. @see {@link data} for setting new image data.\n     * @param internalFormat - Internal format of the texture object.\n     * @param format - Format of the texture data even though no data is passed.\n     * @param type - Data type of the texel data.\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    reformat(internalFormat: GLenum, format?: GLenum, type?: GLenum,\n        bind: boolean = true, unbind: boolean = true): void {\n\n        if (internalFormat === this._internalFormat\n            && (format === undefined || format === this._format)\n            && (type === undefined || type === this._type)) {\n            return;\n        }\n        assert(internalFormat !== undefined, `valid internal format expected`);\n        this._internalFormat = internalFormat;\n\n        if (format) {\n            this._format = format;\n        }\n        if (type) {\n            this._type = type;\n        }\n\n        this.data({ clearOnUndefined: true }, bind, unbind);\n    }\n\n    /**\n     * This should be used to efficiently resize the texture.\n     * @param size - Targeted/new size (width/height) of the texture in px.\n     * @param bind - Allows to skip binding the texture (e.g., when binding is handled outside).\n     * @param unbind - Allows to skip unbinding the texture (e.g., when binding is handled outside).\n     */\n    @Initializable.assert_initialized()\n    resize(size: GLsizei, bind: boolean = true, unbind: boolean = true): void {\n        if (size === this._size) {\n            return;\n        }\n        this._size = size;\n\n        this.data({ clearOnUndefined: true }, bind, unbind);\n    }\n\n    /**\n     * Returns the number of bytes this object approximately allocates on the GPU. The size will be zero when no\n     * image data was passed to the texture object.\n     */\n    get bytes(): GLsizei {\n        this.assertInitialized();\n        return this.context.allocationRegister.allocated(this._identifier);\n    }\n\n    /**\n     * Cached internal format of the texture for efficient resize. This can only be changed by re-initialization.\n     */\n    get internalFormat(): GLenum {\n        this.assertInitialized();\n        return this._internalFormat as GLenum;\n    }\n\n    /**\n     * Cached format of the data provided to the texture object for efficient resize. This is set on initialization and\n     * might change on data transfers.\n     */\n    get format(): GLenum {\n        this.assertInitialized();\n        return this._format as GLenum;\n    }\n\n    /**\n     * Cached type of the data provided to the texture used for efficient resize. This is set on initialization and\n     * might change on data transfers.\n     */\n    get type(): GLenum {\n        this.assertInitialized();\n        return this._type as GLenum;\n    }\n\n    /**\n     * The width/height of the texture object (each cube map face is required to be a square).\n     */\n    get size(): GLsizei {\n        this.assertInitialized();\n        return this._size;\n    }\n\n}\n\n\nexport namespace TextureCube {\n\n    export interface PerFaceURI {\n        positiveX?: string;\n        negativeX?: string;\n        positiveY?: string;\n        negativeY?: string;\n        positiveZ?: string;\n        negativeZ?: string;\n    }\n\n    export interface PerFaceData {\n        positiveX?: TexImage2DData;\n        negativeX?: TexImage2DData;\n        positiveY?: TexImage2DData;\n        negativeY?: TexImage2DData;\n        positiveZ?: TexImage2DData;\n        negativeZ?: TexImage2DData;\n        clearOnUndefined: boolean;\n    }\n\n}\n","\n// import { vec4 } from 'gl-matrix';\n// import { mix } from './gl-matrix-extensions';\n\n// import { Color } from './color';\n// import { tuple4 } from './tuples';\n\n/* tslint:disable:max-classes-per-file */\n\n/**\n * Utility structure (not exposed in public interface) to easy readability.\n */\n// class ColorGradientStop {\n//     color: Color;\n//     position: number;\n// }\n\n/**\n * Basic color gradient representation that uses color stops, a color at a specific position, to allow for color queries\n * at arbitrary positions. The gradient provides {@link Color} instances to facilitate the use of various color spaces.\n * ```\n * const gradient = new ColorGradient();\n * gradient.add(new gloperate.Color([0.09, 0.43, 0.58]), 0.2);\n * gradient.add(new gloperate.Color([0.97, 0.98, 0.98]), 0.8);\n * ...\n * gradient.color(0.66).rgb; // [0.7646666765213013, 0.8516666889190674, 0.8866666555404663]\n * gradient.lerpSpace = ColorGradient.LerpSpace.LAB;\n * gradient.color(0.66).rgb; // [0.8264121413230896, 0.8263672590255737, 0.8262822031974792]\n * ```\n */\nexport class ColorGradient {\n\n    // /** @see{@link colors} and @see{@link positions} */\n    // protected _stops = new Array<ColorGradientStop>();\n\n    /** @see{@link type} */\n    protected _type: ColorGradient.Type;\n    /** @see{@link lerpSpace} */\n    protected _lerpSpace: ColorGradient.LerpSpace = ColorGradient.LerpSpace.RGB;\n\n\n    // /**\n    //  * Performs a linear interpolation between x and y using a to weight between them within the gradient's\n    //  * color space.\n    //  * @param x - First color stop for mix/linear interpolation.\n    //  * @param y - Second color stop for mix/linear interpolation.\n    //  * @param a - Specify the value to use to interpolate between x and y.\n    //  */\n    // protected lerp(x: ColorGradientStop, y: ColorGradientStop, a: number): Color {\n    //     const position = (a - x.position) / (y.position - x.position);\n\n    //     const result = vec4.create();\n    //     switch (this._lerpSpace) {\n    //         case ColorGradient.LerpSpace.CMYK:\n    //             vec4.lerp(result, x.color.cmyk, y.color.cmyka, position);\n    //             const alpha = mix(x.color.a, y.color.a, position);\n    //             return new Color().fromCMYK(result[0], result[1], result[2], result[3], alpha);\n\n    //         case ColorGradient.LerpSpace.LAB:\n    //             vec4.lerp(result, x.color.laba, y.color.laba, position);\n    //             return new Color().fromLAB(result[0], result[1], result[2], result[3]);\n\n    //         case ColorGradient.LerpSpace.HSL:\n    //             vec4.lerp(result, x.color.hsla, y.color.hsla, position);\n    //             return new Color().fromHSL(result[0], result[1], result[2], result[3]);\n\n    //         case ColorGradient.LerpSpace.RGB:\n    //         default:\n    //             vec4.lerp(result, x.color.rgba, y.color.rgba, position);\n    //             return new Color(tuple4<GLfloat>(result));\n    //     }\n    // }\n\n    // /**\n    //  * Queries the color at a given position by identifying the adjacent stops (lower and upper bound) and either\n    //  * interpolating between these or picking the nearest of both. In case no stop exists, a default color will be\n    //  * returned. If only one color exists, this color is always returned no matter the position. If the position is\n    //  * out of bounds, either the first or last stop's color is returned.\n    //  * @param position - Position to query the color at.\n    //  * @returns - Color, depending on the gradient type either linearly or nearest filtered color.\n    //  */\n    // color(position: number): Color | undefined {\n    //     if (this._stops.length === 0) {\n    //         return undefined;\n    //     }\n    //     if (this._stops.length === 1) {\n    //         return this._stops[0].color;\n    //     }\n\n    //     let lowerBound: ColorGradientStop = this._stops[0];\n    //     let upperBound: ColorGradientStop = this._stops[this._stops.length - 1];\n\n    //     /* If position is before first or after last stop, return that stop respectively. */\n    //     if (position <= lowerBound.position) {\n    //         return lowerBound.color;\n    //     } else if (upperBound.position <= position) {\n    //         return upperBound.color;\n    //     }\n\n    //     /* There are at least two stops and the position is within these stops ... */\n\n    //     /* tslint:disable-next-line:prefer-for-of */\n    //     for (let i = 1; i < this._stops.length; ++i) {\n    //         if (this._stops[i].position < position) {\n    //             continue;\n    //         }\n    //         upperBound = this._stops[i];\n    //         lowerBound = this._stops[i - 1];\n    //         break;\n    //     }\n\n    //     if (this._type === ColorGradient.Type.Nearest) {\n    //         const midpoint = (upperBound.position - lowerBound.position) * 0.5;\n    //         return midpoint > position ? lowerBound.color : upperBound.color;\n    //     }\n    //     return this.lerp(lowerBound, upperBound, position);\n    // }\n\n    // /**\n    //  * Computes a given number (length) of equally distributed colors (positions in [0.0, 1.0]) of the gradient.\n    //  * @param length - Number of equally distributed colors (positions 0.0 to 1.0) that should be computed.\n    //  * @returns - An array of interleaved rgba unsigned int values representing the colors of the gradient.\n    //  */\n    // bitsRgbaUI8(length?: number): Uint8Array {\n    //     const size = length === undefined ? this._stops.length : length;\n    //     const bits = new Uint8Array(size * 4);\n\n    //     for (let i = 0; i < size; ++i) {\n    //         const color = (this.color(i / size) as Color).rgbaUI8;\n    //         bits[i * 4 + 0] = color[0];\n    //         bits[i * 4 + 1] = color[1];\n    //         bits[i * 4 + 2] = color[2];\n    //         bits[i * 4 + 3] = color[3];\n    //     }\n    //     return bits;\n    // }\n\n    // /**\n    //  * Computes a given number (length) of equally distributed colors (positions in [0.0, 1.0]) of the gradient.\n    //  * @param length - Number of colors that should be computed.\n    //  * @returns - An array of interleaved rgba float32 values representing the colors of the gradient.\n    //  */\n    // bitsRgbaF32(length?: number): Float32Array {\n    //     const size = length === undefined ? this._stops.length : length;\n    //     const bits = new Float32Array(size * 4);\n\n    //     for (let i = 0; i < size; ++i) {\n    //         const color = (this.color(i / size) as Color).rgbaF32;\n    //         bits[i * 4 + 0] = color[0];\n    //         bits[i * 4 + 1] = color[1];\n    //         bits[i * 4 + 2] = color[2];\n    //         bits[i * 4 + 3] = color[3];\n    //     }\n    //     return bits;\n    // }\n\n    // /**\n    //  * Inserts a color at a specific position within the gradient.\n    //  * @param color - Color to insert.\n    //  * @param position - Location in [0.0, 1.0] at which the color should be inserted/added.\n    //  */\n    // add(color: Color, position: number): void {\n    //     let index = 0;\n    //     while (index < this._stops.length && this._stops[index].position < position) {\n    //         index++;\n    //     }\n\n    //     const stop = new ColorGradientStop();\n    //     stop.color = color;\n    //     stop.position = position;\n\n    //     this._stops.splice(index, 0, stop);\n    // }\n\n    // /**\n    //  * Creates a new array containing the colors of the gradient's color stops.\n    //  */\n    // get colors(): Array<Color> {\n    //     const colors = new Array<Color>(this._stops.length);\n    //     for (const index in this._stops) {\n    //         colors[index] = this._stops[index].color;\n    //     }\n    //     return colors;\n    // }\n\n    // /**\n    //  * Creates a new array containing the positions of the gradient's color stops.\n    //  */\n    // get positions(): Array<number> {\n    //     const positions = new Array<number>(this._stops.length);\n    //     for (const index in this._stops) {\n    //         positions[index] = this._stops[index].position;\n    //     }\n    //     return positions;\n    // }\n\n    /**\n     * Specifies the interpolation approach that is to be used when gathering a color at a specific position.\n     * The type is either linear or nearest (similar to WebGL texture filtering).\n     */\n    set type(type: ColorGradient.Type) {\n        this._type = type;\n    }\n    get type(): ColorGradient.Type {\n        return this._type;\n    }\n\n    /**\n     * Specifies the color space that is to be used for linear interpolation of two colors. By default RGB is used.\n     */\n    set lerpSpace(space: ColorGradient.LerpSpace) {\n        this._lerpSpace = space;\n    }\n    get lerpSpace(): ColorGradient.LerpSpace {\n        return this._lerpSpace;\n    }\n\n}\n\nexport namespace ColorGradient {\n\n    /**\n     * Color interpolation type for a color gradient.\n     */\n    export enum Type {\n        Linear = 'linear',\n        Nearest = 'nearest',\n    }\n\n    /**\n     * Color space in which linear color interpolation can be applied.\n     */\n    export enum LerpSpace {\n        RGB,\n        HSL,\n        LAB,\n        CMYK,\n    }\n\n}\n\n/** @todo: allow custom color schemes from colorbrewer, viridis, custom json (all async fetches) or manually.\n * Then convert into fixed color scale with const access time on interpolation and fixed resolution/always discrete\n */\n","\nimport { assert, logIf, LogLevel } from './auxiliaries';\nimport { GLsizei2 } from './tuples';\n\n\n/**\n * Mixin that incorporates resize event handling. The mixin depends on the global window resize event and forwards any\n * resize event to every existing instance of this class (global tracking).\n */\nexport abstract class Resizable {\n\n    /**\n     * Event identifier for resize event (single point of definition).\n     */\n    private static readonly EVENT_IDENTIFIER = 'resize';\n\n    /**\n     * Array for referencing all instances of resizable.\n     */\n    private static instances: Array<Resizable> = [];\n\n    /**\n     * Resize event availability (cached value).\n     */\n    private static eventSupported = false;\n\n\n    /**\n     * This function is called when the window is resized (and the event listener was successfully registered). The\n     * event is forwarded to each registered resizable object.\n     */\n    protected static resize(): void {\n        assert(Resizable.instances.length > 0, `resize event received without a single resizable registered`);\n        Resizable.instances.forEach((item) => item.onResize());\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Retrieves the native width and height of a given element in device pixel (size on screen in physical pixels). If\n     * the element is not found, or either window or its device pixel ratio are not defined, a default vec2 is returned.\n     * @param element - DOM element to get the width and height in (native) pixel from.\n     * @returns - Size of the element in native screen pixels.\n     */\n    static elementSize(element: HTMLElement): GLsizei2 {\n        if (element === undefined || window === undefined || typeof window.devicePixelRatio !== 'number') {\n            return [0, 0];\n        }\n\n        const scale = window.devicePixelRatio;\n        const style = getComputedStyle(element);\n        const size: GLsizei2 = [parseInt(style.width as string, 10), parseInt(style.height as string, 10)];\n\n        size[0] = Math.round(size[0] * scale);\n        size[1] = Math.round(size[1] * scale);\n\n        return size;\n    }\n\n\n    /**\n     * Every instance of resizable is registered in the global list of resizable instances. The first instance, however,\n     * triggers the registration of the global window resize event listener.\n     */\n    constructor() {\n        if (Resizable.instances.length === 0) { // initialize once\n            const event = `on${Resizable.EVENT_IDENTIFIER}`;\n            /* istanbul ignore next */\n            Resizable.eventSupported = document && (event in document.documentElement || event in document.body);\n\n            logIf(!Resizable.eventSupported, LogLevel.Dev, `resize event not supported`);\n        }\n        /* istanbul ignore next */\n        if (Resizable.instances.length === 0 && Resizable.eventSupported) {\n            window.addEventListener(Resizable.EVENT_IDENTIFIER, this._resizeEventListener);\n        }\n        Resizable.instances.push(this);\n    }\n\n    /* istanbul ignore next */\n    protected _resizeEventListener = () => Resizable.resize();\n\n    /**\n     * Unregister this instance from the global list of resizable instances. On destruction of the last instance, the\n     * resize event handle is removed. Please note that destruction needs to be invoked explicitly.\n     */\n    protected dispose(): void {\n        const i = Resizable.instances.indexOf(this);\n        assert(i !== -1, `invalid reference counting of resizable instances`);\n\n        Resizable.instances.splice(i, 1);\n\n        /* istanbul ignore next */\n        if (Resizable.instances.length === 0 && Resizable.eventSupported) {\n            window.removeEventListener(Resizable.EVENT_IDENTIFIER, this._resizeEventListener);\n        }\n    }\n\n\n    /**\n     * This function is invoked when a resize event happened.\n     */\n    protected abstract onResize(): void;\n\n}\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nvec2.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nvec2.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nvec2.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0], \n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec2.str = function (a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1];\n    var b0 = b[0], b1 = b[1];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n};\n\nmodule.exports = vec2;\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\nvar mat3 = require(\"./mat3.js\");\nvar vec3 = require(\"./vec3.js\");\nvar vec4 = require(\"./vec4.js\");\n\n/**\n * @class Quaternion\n * @name quat\n */\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nquat.getAxisAngle = function(out_axis, q) {\n    var rad = Math.acos(q[3]) * 2.0;\n    var s = Math.sin(rad / 2.0);\n    if (s != 0.0) {\n        out_axis[0] = q[0] / s;\n        out_axis[1] = q[1] / s;\n        out_axis[2] = q[2] / s;\n    } else {\n        // If s is zero, return any axis (no rotation - axis does not matter)\n        out_axis[0] = 1;\n        out_axis[1] = 0;\n        out_axis[2] = 0;\n    }\n    return rad;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {        \n        // \"from\" and \"to\" quaternions are very close \n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    \n    return out;\n};\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nquat.sqlerp = (function () {\n  var temp1 = quat.create();\n  var temp2 = quat.create();\n  \n  return function (out, a, b, c, d, t) {\n    quat.slerp(temp1, a, d, t);\n    quat.slerp(temp2, b, c, t);\n    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n    \n    return out;\n  };\n}());\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n    \n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n        \n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n    \n    return out;\n};\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nquat.str = function (a) {\n    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nquat.equals = vec4.equals;\n\nmodule.exports = quat;\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {\n  scalar: {},\n  SIMD: {},\n};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nmat4.fromValues = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n};\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nmat4.set = function(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n};\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n};\n\n/**\n * Transpose the values of a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.transpose = function(out, a) {\n    var a0, a1, a2, a3,\n        tmp01, tmp23,\n        out0, out1, out2, out3;\n\n    a0 = SIMD.Float32x4.load(a, 0);\n    a1 = SIMD.Float32x4.load(a, 4);\n    a2 = SIMD.Float32x4.load(a, 8);\n    a3 = SIMD.Float32x4.load(a, 12);\n\n    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n    out0  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);\n    out1  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);\n    SIMD.Float32x4.store(out, 0,  out0);\n    SIMD.Float32x4.store(out, 4,  out1);\n\n    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n    out2  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);\n    out3  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);\n    SIMD.Float32x4.store(out, 8,  out2);\n    SIMD.Float32x4.store(out, 12, out3);\n\n    return out;\n};\n\n/**\n * Transpse a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = glMatrix.USE_SIMD ? mat4.SIMD.transpose : mat4.scalar.transpose;\n\n/**\n * Inverts a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Inverts a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.invert = function(out, a) {\n  var row0, row1, row2, row3,\n      tmp1,\n      minor0, minor1, minor2, minor3,\n      det,\n      a0 = SIMD.Float32x4.load(a, 0),\n      a1 = SIMD.Float32x4.load(a, 4),\n      a2 = SIMD.Float32x4.load(a, 8),\n      a3 = SIMD.Float32x4.load(a, 12);\n\n  // Compute matrix adjugate\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);\n  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);\n  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);\n\n  tmp1   = SIMD.Float32x4.mul(row2, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.mul(row1, tmp1);\n  minor1 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);\n  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);\n  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row1, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);\n  minor3 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);\n  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);\n  minor2 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);\n  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row0, row1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);\n  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);\n\n  // Compute matrix determinant\n  det   = SIMD.Float32x4.mul(row0, minor0);\n  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 2, 3, 0, 1), det);\n  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 1, 0, 3, 2), det);\n  tmp1  = SIMD.Float32x4.reciprocalApproximation(det);\n  det   = SIMD.Float32x4.sub(\n               SIMD.Float32x4.add(tmp1, tmp1),\n               SIMD.Float32x4.mul(det, SIMD.Float32x4.mul(tmp1, tmp1)));\n  det   = SIMD.Float32x4.swizzle(det, 0, 0, 0, 0);\n  if (!det) {\n      return null;\n  }\n\n  // Compute matrix inverse\n  SIMD.Float32x4.store(out, 0,  SIMD.Float32x4.mul(det, minor0));\n  SIMD.Float32x4.store(out, 4,  SIMD.Float32x4.mul(det, minor1));\n  SIMD.Float32x4.store(out, 8,  SIMD.Float32x4.mul(det, minor2));\n  SIMD.Float32x4.store(out, 12, SIMD.Float32x4.mul(det, minor3));\n  return out;\n}\n\n/**\n * Inverts a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = glMatrix.USE_SIMD ? mat4.SIMD.invert : mat4.scalar.invert;\n\n/**\n * Calculates the adjugate of a mat4 not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.scalar.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4 using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.SIMD.adjoint = function(out, a) {\n  var a0, a1, a2, a3;\n  var row0, row1, row2, row3;\n  var tmp1;\n  var minor0, minor1, minor2, minor3;\n\n  var a0 = SIMD.Float32x4.load(a, 0);\n  var a1 = SIMD.Float32x4.load(a, 4);\n  var a2 = SIMD.Float32x4.load(a, 8);\n  var a3 = SIMD.Float32x4.load(a, 12);\n\n  // Transpose the source matrix.  Sort of.  Not a true transpose operation\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);\n  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);\n  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);\n  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);\n\n  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);\n  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);\n  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);\n  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);\n\n  tmp1   = SIMD.Float32x4.mul(row2, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.mul(row1, tmp1);\n  minor1 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);\n  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);\n  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row1, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);\n  minor3 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);\n  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);\n  minor2 = SIMD.Float32x4.mul(row0, tmp1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);\n  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);\n\n  tmp1   = SIMD.Float32x4.mul(row0, row1);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row3);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));\n  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);\n  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));\n\n  tmp1   = SIMD.Float32x4.mul(row0, row2);\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);\n  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);\n  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));\n  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);\n  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));\n  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);\n\n  SIMD.Float32x4.store(out, 0,  minor0);\n  SIMD.Float32x4.store(out, 4,  minor1);\n  SIMD.Float32x4.store(out, 8,  minor2);\n  SIMD.Float32x4.store(out, 12, minor3);\n  return out;\n};\n\n/**\n * Calculates the adjugate of a mat4 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\n mat4.adjoint = glMatrix.USE_SIMD ? mat4.SIMD.adjoint : mat4.scalar.adjoint;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's explicitly using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand, must be a Float32Array\n * @param {mat4} b the second operand, must be a Float32Array\n * @returns {mat4} out\n */\nmat4.SIMD.multiply = function (out, a, b) {\n    var a0 = SIMD.Float32x4.load(a, 0);\n    var a1 = SIMD.Float32x4.load(a, 4);\n    var a2 = SIMD.Float32x4.load(a, 8);\n    var a3 = SIMD.Float32x4.load(a, 12);\n\n    var b0 = SIMD.Float32x4.load(b, 0);\n    var out0 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 2, 2, 2, 2), a2),\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 0, out0);\n\n    var b1 = SIMD.Float32x4.load(b, 4);\n    var out1 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 2, 2, 2, 2), a2),\n                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 4, out1);\n\n    var b2 = SIMD.Float32x4.load(b, 8);\n    var out2 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 1, 1, 1, 1), a1),\n                       SIMD.Float32x4.add(\n                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 2, 2, 2, 2), a2),\n                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 8, out2);\n\n    var b3 = SIMD.Float32x4.load(b, 12);\n    var out3 = SIMD.Float32x4.add(\n                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 0, 0, 0, 0), a0),\n                   SIMD.Float32x4.add(\n                        SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 1, 1, 1, 1), a1),\n                        SIMD.Float32x4.add(\n                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 2, 2, 2, 2), a2),\n                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 3, 3, 3, 3), a3))));\n    SIMD.Float32x4.store(out, 12, out3);\n\n    return out;\n};\n\n/**\n * Multiplies two mat4's explicitly not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.scalar.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Multiplies two mat4's using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = glMatrix.USE_SIMD ? mat4.SIMD.multiply : mat4.scalar.multiply;\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.scalar.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Translates a mat4 by the given vector using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.SIMD.translate = function (out, a, v) {\n    var a0 = SIMD.Float32x4.load(a, 0),\n        a1 = SIMD.Float32x4.load(a, 4),\n        a2 = SIMD.Float32x4.load(a, 8),\n        a3 = SIMD.Float32x4.load(a, 12),\n        vec = SIMD.Float32x4(v[0], v[1], v[2] , 0);\n\n    if (a !== out) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        out[4] = a[4]; out[5] = a[5]; out[6] = a[6]; out[7] = a[7];\n        out[8] = a[8]; out[9] = a[9]; out[10] = a[10]; out[11] = a[11];\n    }\n\n    a0 = SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0));\n    a1 = SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1));\n    a2 = SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2));\n\n    var t0 = SIMD.Float32x4.add(a0, SIMD.Float32x4.add(a1, SIMD.Float32x4.add(a2, a3)));\n    SIMD.Float32x4.store(out, 12, t0);\n\n    return out;\n};\n\n/**\n * Translates a mat4 by the given vector using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = glMatrix.USE_SIMD ? mat4.SIMD.translate : mat4.scalar.translate;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scalar.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.SIMD.scale = function(out, a, v) {\n    var a0, a1, a2;\n    var vec = SIMD.Float32x4(v[0], v[1], v[2], 0);\n\n    a0 = SIMD.Float32x4.load(a, 0);\n    SIMD.Float32x4.store(\n        out, 0, SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0)));\n\n    a1 = SIMD.Float32x4.load(a, 4);\n    SIMD.Float32x4.store(\n        out, 4, SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1)));\n\n    a2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(\n        out, 8, SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2)));\n\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 using SIMD if available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n */\nmat4.scale = glMatrix.USE_SIMD ? mat4.SIMD.scale : mat4.scalar.scale;\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateX = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n      out[0]  = a[0];\n      out[1]  = a[1];\n      out[2]  = a[2];\n      out[3]  = a[3];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_1 = SIMD.Float32x4.load(a, 4);\n    var a_2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(out, 4,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_2, s)));\n    SIMD.Float32x4.store(out, 8,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_2, c), SIMD.Float32x4.mul(a_1, s)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis using SIMD if availabe and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = glMatrix.USE_SIMD ? mat4.SIMD.rotateX : mat4.scalar.rotateX;\n\n/**\n * Rotates a matrix by the given angle around the Y axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateY = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_0 = SIMD.Float32x4.load(a, 0);\n    var a_2 = SIMD.Float32x4.load(a, 8);\n    SIMD.Float32x4.store(out, 0,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_2, s)));\n    SIMD.Float32x4.store(out, 8,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, s), SIMD.Float32x4.mul(a_2, c)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis if SIMD available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n mat4.rotateY = glMatrix.USE_SIMD ? mat4.SIMD.rotateY : mat4.scalar.rotateY;\n\n/**\n * Rotates a matrix by the given angle around the Z axis not using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.scalar.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis using SIMD\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.SIMD.rotateZ = function (out, a, rad) {\n    var s = SIMD.Float32x4.splat(Math.sin(rad)),\n        c = SIMD.Float32x4.splat(Math.cos(rad));\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    var a_0 = SIMD.Float32x4.load(a, 0);\n    var a_1 = SIMD.Float32x4.load(a, 4);\n    SIMD.Float32x4.store(out, 0,\n                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_1, s)));\n    SIMD.Float32x4.store(out, 4,\n                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_0, s)));\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis if SIMD available and enabled\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n mat4.rotateZ = glMatrix.USE_SIMD ? mat4.SIMD.rotateZ : mat4.scalar.rotateZ;\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nmat4.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.fromRotation = function(out, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromXRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = 1;\n    out[1]  = 0;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromYRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = 0;\n    out[2]  = -s;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromZRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = s;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nmat4.getTranslation = function (out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n};\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nmat4.getRotation = function (out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) { \n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S; \n    out[2] = (mat[1] - mat[4]) / S; \n  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) { \n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S; \n    out[2] = (mat[8] + mat[2]) / S; \n  } else if (mat[5] > mat[10]) { \n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S; \n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S; \n  } else { \n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScale = function (out, q, v, s) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0], y = q[1], z = q[2], w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n\n      sx = s[0],\n      sy = s[1],\n      sz = s[2],\n\n      ox = o[0],\n      oy = o[1],\n      oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n};\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n};\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nmat4.sub = mat4.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nmat4.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n};\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nmat4.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    out[6] = a[6] + (b[6] * scale);\n    out[7] = a[7] + (b[7] * scale);\n    out[8] = a[8] + (b[8] * scale);\n    out[9] = a[9] + (b[9] * scale);\n    out[10] = a[10] + (b[10] * scale);\n    out[11] = a[11] + (b[11] * scale);\n    out[12] = a[12] + (b[12] * scale);\n    out[13] = a[13] + (b[13] * scale);\n    out[14] = a[14] + (b[14] * scale);\n    out[15] = a[15] + (b[15] * scale);\n    return out;\n};\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat4.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && \n           a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && \n           a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n           a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat4.equals = function (a, b) {\n    var a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3],\n        a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7], \n        a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11], \n        a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n    var b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3],\n        b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7], \n        b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11], \n        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n            Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n            Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n            Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n            Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n            Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n            Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n            Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n};\n\n\n\nmodule.exports = mat4;\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n * \n * @description \n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nmat2d.fromValues = function(a, b, c, d, tx, ty) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n};\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nmat2d.set = function(out, a, b, c, d, tx, ty) {\n    out[0] = a;\n    out[1] = b;\n    out[2] = c;\n    out[3] = d;\n    out[4] = tx;\n    out[5] = ty;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nmat2d.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nmat2d.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2d.str = function (a) {\n    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) { \n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}; \n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nmat2d.sub = mat2d.subtract;\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nmat2d.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    return out;\n};\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nmat2d.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    out[4] = a[4] + (b[4] * scale);\n    out[5] = a[5] + (b[5] * scale);\n    return out;\n};\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2d.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2d.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n};\n\nmodule.exports = mat2d;\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nmat2.fromValues = function(m00, m01, m10, m11) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n};\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nmat2.set = function(out, m00, m01, m10, m11) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m10;\n    out[3] = m11;\n    return out;\n};\n\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n    \n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.fromRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nmat2.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2.str = function (a) {\n    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix \n * @param {mat2} D the diagonal matrix \n * @param {mat2} U the upper triangular matrix \n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) { \n    L[2] = a[2]/a[0]; \n    U[0] = a[0]; \n    U[1] = a[1]; \n    U[3] = a[3] - L[2] * U[1]; \n    return [L, D, U];       \n}; \n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nmat2.sub = mat2.subtract;\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nmat2.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n};\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nmat2.multiplyScalar = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nmat2.multiplyScalarAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\nmodule.exports = mat2;\n","\n\nimport { assert } from './auxiliaries';\n\nimport { Context } from './context';\n\n\nexport type TexImage2DData = GLintptr | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement |\n    ImageBitmap | ImageData | ArrayBufferView | undefined;\n\n\n/**\n * A WebGL 2 facade, simplifying the access to gl functions that are either not available, exposed via extension or\n * supported directly, e.g., in webgl2. All gl features/interfaces handled by this facade are mandatory.\n */\nexport class GL2Facade {\n\n    /* tslint:disable:member-ordering variable-name */\n\n    /**\n     * @param context - Wrapped gl context for function resolution.\n     * @param extensions - Identifiers of mandatory extensions for which the support is asserted.\n     */\n    constructor(context: Context) {\n        assert(context !== undefined, `gl2 facade expects a valid WebGL context`);\n\n        this.queryHalfFloatSupport(context);\n        this.queryColorAttachments(context);\n        this.queryInstancedArraySupport(context);\n        this.queryDrawBuffersSupport(context);\n        this.queryVertexArrayObjectSupport(context);\n        this.queryMaxUniformVec3Components(context);\n        this.queryTexImageInterface(context);\n    }\n\n\n    // HALF FLOAT\n\n    /**\n     * Stores the HALF_FLOAT enum if supported. @see {@link HALF_FLOAT}\n     */\n    protected _halfFloat: GLenum;\n\n    /**\n     * The HALF_FLOAT format enum. Is `undefined` if not supported.\n     */\n    get HALF_FLOAT(): GLenum {\n        return this._halfFloat;\n    }\n\n    /**\n     *  For WebGL1 the HALF_FLOAT enum needs to be saved via the extension object.\n     */\n    protected queryHalfFloatSupport(context: Context): void {\n        switch (context.backend) {\n            case Context.BackendType.WebGL1:\n                this._halfFloat = context.supportsTextureHalfFloat && context.textureHalfFloat ?\n                    context.textureHalfFloat.HALF_FLOAT_OES : undefined;\n                break;\n\n            case Context.BackendType.WebGL2:\n            /* falls through */\n            default:\n                this._halfFloat = context.gl.HALF_FLOAT;\n                break;\n        }\n    }\n\n\n    // COLOR ATTACHMENTS\n\n    /**\n     * Stores the lowest color attachment identifier.\n     */\n    protected _colorAttachmentMin: GLenum;\n    /**\n     * The lowest color attachment identifier format enum.\n     */\n    get COLOR_ATTACHMENT_MIN(): GLenum {\n        return this._colorAttachmentMin;\n    }\n\n    /**\n     * Stores the highest supported color attachment identifier.\n     */\n    protected _colorAttachmentMax: GLenum;\n\n    /**\n     * Stores all context/backend sepcific color attachment identifier for COLOR_ATTACHMENT# getter.\n     */\n    protected _colorAttachments: Array<GLenum>;\n\n    /**\n     * The lowest color attachment identifier format enum.\n     * Is at least `COLOR_ATTACHMENT_MIN`.\n     */\n    get COLOR_ATTACHMENT_MAX(): GLenum {\n        return this._colorAttachmentMax;\n    }\n\n    get COLOR_ATTACHMENT0(): GLenum {\n        return this._colorAttachments[0];\n    }\n    get COLOR_ATTACHMENT1(): GLenum {\n        return this._colorAttachments[1];\n    }\n    get COLOR_ATTACHMENT2(): GLenum {\n        return this._colorAttachments[2];\n    }\n    get COLOR_ATTACHMENT3(): GLenum {\n        return this._colorAttachments[3];\n    }\n    get COLOR_ATTACHMENT4(): GLenum {\n        return this._colorAttachments[4];\n    }\n    get COLOR_ATTACHMENT5(): GLenum {\n        return this._colorAttachments[5];\n    }\n    get COLOR_ATTACHMENT6(): GLenum {\n        return this._colorAttachments[6];\n    }\n    get COLOR_ATTACHMENT7(): GLenum {\n        return this._colorAttachments[7];\n    }\n    get COLOR_ATTACHMENT8(): GLenum {\n        return this._colorAttachments[8];\n    }\n    get COLOR_ATTACHMENT9(): GLenum {\n        return this._colorAttachments[9];\n    }\n    get COLOR_ATTACHMENT10(): GLenum {\n        return this._colorAttachments[10];\n    }\n    get COLOR_ATTACHMENT11(): GLenum {\n        return this._colorAttachments[11];\n    }\n    get COLOR_ATTACHMENT12(): GLenum {\n        return this._colorAttachments[12];\n    }\n    get COLOR_ATTACHMENT13(): GLenum {\n        return this._colorAttachments[13];\n    }\n    get COLOR_ATTACHMENT14(): GLenum {\n        return this._colorAttachments[14];\n    }\n    get COLOR_ATTACHMENT15(): GLenum {\n        return this._colorAttachments[15];\n    }\n\n    /**\n     * Queries the valid range of color attachments and provides an interface for convenience.\n     */\n    protected queryColorAttachments(context: Context): void {\n        const gl = context.gl;\n\n        this._colorAttachments = new Array<GLenum>(16);\n        this._colorAttachments[0] = gl.COLOR_ATTACHMENT0;\n\n        /**\n         * In WebGL, draw buffers is supported by extension, in WebGL2 by default.\n         * This maps the various default color attachment identifier to a unified interface.\n         */\n        switch (context.backend) {\n            case Context.BackendType.WebGL1:\n                const drawBuffers = context.supportsDrawBuffers ? context.drawBuffers : undefined;\n\n                this._colorAttachmentMin = this._colorAttachments[0];\n                this._colorAttachmentMax = this._colorAttachmentMin + (drawBuffers ?\n                    gl.getParameter(drawBuffers.MAX_COLOR_ATTACHMENTS_WEBGL) : 0) as GLenum;\n\n                this._colorAttachments[0] = drawBuffers ? drawBuffers.COLOR_ATTACHMENT0_WEBGL : gl.COLOR_ATTACHMENT0;\n                if (!drawBuffers) {\n                    break;\n                }\n                for (let i = 1; i < 16; ++i) {\n                    // Enums are assumed to be incremental in their definition ...\n                    this._colorAttachments[i] = drawBuffers.COLOR_ATTACHMENT0_WEBGL + i;\n                }\n                break;\n\n            case Context.BackendType.WebGL2:\n            /* falls through */\n            default:\n                this._colorAttachmentMin = context.gl.COLOR_ATTACHMENT0;\n                this._colorAttachmentMax = context.gl.COLOR_ATTACHMENT0\n                    + gl.getParameter(gl.MAX_COLOR_ATTACHMENTS) as GLenum;\n\n                for (let i = 0; i < 16; ++i) {\n                    // Enums are assumed to be incremental in their definition ...\n                    this._colorAttachments[i] = gl.COLOR_ATTACHMENT0 + i;\n                }\n                break;\n        }\n    }\n\n\n    // INSTANCED ARRAYS\n\n    /**\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays/drawArraysInstancedANGLE\n     */\n    drawArraysInstanced: (mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei) => void;\n    /**\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays/drawElementsInstancedANGLE\n     */\n    drawElementsInstanced: (mode: GLenum, count: GLint, type: GLsizei, offset: GLintptr, primcount: GLsizei) => void;\n    /**\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays/vertexAttribDivisorANGLE\n     */\n    vertexAttribDivisor: (index: GLuint, divisor: GLuint) => void;\n\n    /**\n     * Evaluate wether or not ANGLE_instanced_arrays is supported (either by extension or in WebGL2 by default) and, if\n     * supported, binds the associated functions.\n     * @param context - WebGL context to query extension support in\n     */\n    protected queryInstancedArraySupport(context: Context): void {\n        if (!context.isWebGL2 && !context.supportsInstancedArrays) {\n            return;\n        }\n\n        this.drawArraysInstanced = context.isWebGL2 ?\n            (mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei) =>\n                context.gl.drawArraysInstanced(mode, first, count, instanceCount) :\n            (mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei) =>\n                context.instancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\n\n        this.drawElementsInstanced = context.isWebGL2 ?\n            (mode: GLenum, count: GLint, type: GLsizei, offset: GLintptr, primcount: GLsizei) =>\n                context.gl.drawElementsInstanced(mode, count, type, offset, primcount) :\n            (mode: GLenum, count: GLint, type: GLsizei, offset: GLintptr, primcount: GLsizei) =>\n                context.instancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, primcount);\n\n        this.vertexAttribDivisor = context.isWebGL2 ?\n            (index: GLuint, divisor: GLuint) => context.gl.vertexAttribDivisor(index, divisor) :\n            (index: GLuint, divisor: GLuint) => context.instancedArrays.vertexAttribDivisorANGLE(index, divisor);\n    }\n\n\n    // DRAW BUFFERS\n\n    /**\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL\n     */\n    drawBuffers: ((buffers: Array<GLenum>) => void) | undefined = undefined;\n\n    /**\n     * Evaluate wether or not WEBGL_draw_buffers is supported (either by extension or in WebGL2 by default) and, if\n     * supported, binds the associated functions.\n     * @param context - WebGL context to query extension support in.\n     * @returns - True if WEBGL_draw_buffers is supported and associated functions are bound.\n     */\n    protected queryDrawBuffersSupport(context: Context): void {\n        if (!context.isWebGL2 && !context.supportsDrawBuffers) {\n            return;\n        }\n\n        this.drawBuffers = context.isWebGL2 ?\n            (buffers: Array<GLenum>) => context.gl.drawBuffers(buffers) :\n            (buffers: Array<GLenum>) => context.drawBuffers.drawBuffersWEBGL(buffers);\n    }\n\n\n    // VERTEX ARRAY\n\n    /**\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/createVertexArray\n     */\n    createVertexArray: () => any /* WebGLVertexArrayObject */;\n\n    /**\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/createVertexArray\n     */\n    deleteVertexArray: (arrayObject: any /* WebGLVertexArrayObject */) => void;\n\n    /**\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/isVertexArray\n     */\n    isVertexArray: (arrayObject: any /* WebGLVertexArrayObject */) => GLboolean;\n\n    /**\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/bindVertexArray\n     */\n    bindVertexArray: (arrayObject: any /* WebGLVertexArrayObject */) => void;\n\n    protected queryVertexArrayObjectSupport(context: Context): void {\n        if (!context.isWebGL2 && !context.supportsVertexArrayObject) {\n            return;\n        }\n\n        this.createVertexArray = context.isWebGL2 ?\n            () => context.gl.createVertexArray() :\n            () => context.vertexArrayObject.createVertexArrayOES();\n\n        this.deleteVertexArray = context.isWebGL2 ?\n            (arrayObject: any) => context.gl.deleteVertexArray(arrayObject) :\n            (arrayObject: any) => context.vertexArrayObject.deleteVertexArrayOES(arrayObject);\n\n        this.isVertexArray = context.isWebGL2 ?\n            (arrayObject: any) => context.gl.isVertexArray(arrayObject) :\n            (arrayObject: any) => context.vertexArrayObject.isVertexArrayOES(arrayObject);\n\n        this.bindVertexArray = context.isWebGL2 ?\n            (arrayObject: any) => context.gl.bindVertexArray(arrayObject) :\n            (arrayObject: any) => context.vertexArrayObject.bindVertexArrayOES(arrayObject);\n    }\n\n\n    // MAX UNIFORM COMPONENTS\n\n    /** @see {@link maxUniformVec3Components} */\n    protected _maxUniformVec3Components: GLint | undefined;\n    /**\n     * The maximum number of floats, integers, or booleans that can be in storage for a vertex shader.\n     */\n    get maxUniformVec3Components(): GLint | undefined {\n        return this._maxUniformVec3Components;\n    }\n\n    /**\n     * Query and store the maximum number of floats, integers, or booleans that can be in storage for a vertex shader.\n     * @param context - WebGL context to query the value in.\n     */\n    protected queryMaxUniformVec3Components(context: Context): void {\n        const gl = context.gl;\n\n        this._maxUniformVec3Components = context.isWebGL2\n            ? gl.getParameter(gl.MAX_VERTEX_UNIFORM_COMPONENTS)\n            : gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS) * 3;\n    }\n\n\n    // TEX IMAGE INTERFACE\n\n\n    /**\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n     */\n    texImage2D: (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei,\n        border: GLint, format: GLenum, type: GLenum, source?: TexImage2DData, offset?: GLintptr) => void;\n\n    protected queryTexImageInterface(context: Context): void {\n        const gl = context.gl;\n\n        if (context.isWebGL2) {\n            this.texImage2D = (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei,\n                border: GLint, format: GLenum, type: GLenum, source?: TexImage2DData, offset?: GLintptr) => {\n                /* Please note that source must be 'null', not '0' nor 'undefined' for ie and edge to work. */\n                if (source instanceof ArrayBuffer) {\n                    return gl.texImage2D(target, level, internalformat, width, height, border\n                        /* tslint:disable-next-line:no-null-keyword */\n                        , format, type, source === undefined ? null : source, offset);\n                }\n                assert(offset === undefined, `offset expected to be undefined for non ArrayBuffer source`);\n                return gl.texImage2D(target, level, internalformat, width, height, border\n                    /* tslint:disable-next-line:no-null-keyword */\n                    , format, type, source === undefined ? null : source);\n            };\n\n        } else {\n            this.texImage2D = (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei,\n                border: GLint, format: GLenum, type: GLenum, source?: TexImage2DData, offset?: GLintptr) => {\n\n                if (source === undefined) {\n                    /* tslint:disable-next-line:no-null-keyword */\n                    return gl.texImage2D(target, level, internalformat, width, height, border, format, type, null);\n                }\n                if (source instanceof Int8Array\n                    || source instanceof Uint8Array\n                    || source instanceof Uint8ClampedArray\n                    || source instanceof Int16Array\n                    || source instanceof Uint16Array\n                    || source instanceof Int32Array\n                    || source instanceof Uint32Array\n                    || source instanceof Float32Array\n                    || source instanceof Float64Array\n                    || source instanceof DataView) {\n                    return gl.texImage2D(target, level, internalformat, width, height, border, format, type, source);\n                }\n                return gl.texImage2D(target, level, internalformat, format, type, source);\n            };\n        }\n    }\n\n}\n","\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { assert, prettyPrintBytes } from './auxiliaries';\n\n\n/**\n * This register enables monitoring of memory (de)allocations and is intended for use in WebGL context for internal GPU\n * memory allocation tracking. For it, a unique identifier for registration has to be created:\n * ```\n * let gpuAllocReg = this.context.gpuAllocationRegister;\n * const identifier = gpuAllocReg.createUniqueIdentifier('gpu-object');\n * ```\n *\n * Then allocations, deallocations, and reallocations can be registered:\n * ```\n * gpuAllocReg.allocate(identifier, this.sizeofRGBAColorAttachment());\n * gpuAllocReg.allocate(identifier, this.sizeofDepthStencilAttachment());\n * // ... reallocation\n * gpuAllocReg.reallocate(identifier,\n *     this.sizeofRGBAColorAttachment() + this.sizeofDepthStencilAttachment());\n * // ... uninitialize\n * gpuAllocReg.reallocate(identifier, 0);\n * ```\n *\n * Requesting the allocated memory can be done as follows:\n * ```\n * // memory allocated by identifier:\n * console.log(mfCanvas.context.gpuAllocationRegister.toString());\n * //> IntermediateFBO: 10.582MiB, AccumulationPingFBO: 21.163MiB, AccumulationPongFBO: 21.163MiB\n *\n * // memory allocated over all identifiers:\n * console.log(mfCanvas.context.gpuAllocationRegister.bytesToString());\n * //> 52.908MiB\n * ```\n */\nexport class AllocationRegister {\n\n    /**\n     * Map that provides access to the accumulated memory allocations for all registered identifiers.\n     */\n    protected _bytesByIdentifier = new Map<string, GLsizei>();\n\n    /** @see {@link bytes} */\n    protected _bytes: GLsizei = 0;\n    protected _bytesSubject = new ReplaySubject<[GLsizei, string]>(1);\n\n    /**\n     * Utility for communicating this._bytes changes to its associated subject.\n     */\n    protected bytesNext(): void {\n        this._bytesSubject.next([this._bytes, this.bytesToString()]);\n    }\n\n\n    /**\n     * Asserts existence of an identifier.\n     * @param identifier - Identifier to assert the existence of.\n     */\n    protected assertIdentifier(identifier: string): void {\n        assert(this._bytesByIdentifier.has(identifier), `allocation identifier unknown`);\n    }\n\n\n    /**\n     * Creates a unique identifier based on a given identifier: if the identifier is already unique it is returned as\n     * is. If not, an enumerated identifier is returned, e.g., 'TempFBO-2' when 'TempFBO' already exists. This also\n     * enables tracking for the identifier, thus, it should always be called before tracking/monitoring.\n     * @param identifier - Requested identifier for allocation registration.\n     * @returns - Unique identifier (might differ from given identifier) for which allocation registration is enabled.\n     */\n    createUniqueIdentifier(identifier: string): string {\n        let uniqueIdentifier: string = identifier;\n        let unificationSuffix = 2;\n\n        while (this._bytesByIdentifier.has(uniqueIdentifier)) {\n            uniqueIdentifier = `${identifier}-${unificationSuffix}`;\n            ++unificationSuffix;\n        }\n\n        this._bytesByIdentifier.set(uniqueIdentifier, 0);\n        return uniqueIdentifier;\n    }\n\n    /**\n     * Removes a previously created unique identifier from the allocation registry.\n     * @param identifier - Identifier that is to be deleted from allocation registration.\n     */\n    deleteUniqueIdentifier(identifier: string): void {\n        assert(this._bytesByIdentifier.has(identifier), `identifier expected to be known for allocation registration`);\n        this._bytesByIdentifier.delete(identifier);\n    }\n\n    /**\n     * Registers allocated bytes for a given identifier.\n     * @param identifier - Identifier to register the allocated bytes for.\n     * @param allocate - Allocated bytes to register for identifier.\n     */\n    allocate(identifier: string, allocate: number): void {\n        this.assertIdentifier(identifier);\n\n        assert(allocate >= 0, `positive number of bytes expected for allocation, given ${allocate}`);\n\n        /* Nothing to do if no bytes are allocated */\n        if (allocate === 0) {\n            return;\n        }\n\n        const bytes = (this._bytesByIdentifier.get(identifier)!) + allocate;\n        this._bytesByIdentifier.set(identifier, bytes);\n\n        this._bytes = this._bytes + allocate; // allocate total\n        this.bytesNext();\n    }\n\n    /**\n     * Registers deallocated bytes for a given identifier.\n     * @param identifier - Identifier to register the deallocated bytes for.\n     * @param allocate - Number of deallocated bytes to register for identifier.\n     */\n    deallocate(identifier: string, deallocate: number): void {\n        this.assertIdentifier(identifier);\n\n        const bytes = this._bytesByIdentifier.get(identifier)!;\n        assert(deallocate >= 0, `positive number of bytes expected for deallocation, given ${deallocate}`);\n        assert(deallocate <= bytes, `deallocation cannot exceed previous allocations of ${bytes}, given ${deallocate}`);\n\n        /* Nothing to do if no bytes are deallocated */\n        if (deallocate === 0) {\n            return;\n        }\n\n        this._bytesByIdentifier.set(identifier, bytes - deallocate);\n\n        this._bytes = this._bytes - deallocate; // deallocate total\n        this.bytesNext();\n    }\n\n    /**\n     * Resets the previously allocated bytes for the given identifier and registers the given allocated bytes instead.\n     * @param identifier - Identifier to register the reallocated bytes for.\n     * @param allocate - Number of reallocated bytes to register for identifier.\n     */\n    reallocate(identifier: string, reallocate: number): void {\n        this.assertIdentifier(identifier);\n        assert(reallocate >= 0, `positive number of bytes expected for reallocation, given ${reallocate}`);\n\n        const previousBytes = this._bytesByIdentifier.get(identifier)!;\n\n        /* Nothing to do if same size should be reallocated */\n        if (previousBytes === reallocate) {\n            return;\n        }\n\n        this._bytes = this._bytes - previousBytes; // deallocate total\n        this._bytesByIdentifier.set(identifier, reallocate);\n\n        this._bytes = this._bytes + reallocate; // allocate total\n        this.bytesNext();\n    }\n\n    /**\n     * Provides access to the allocated bytes for an identifier as well as the overall allocated bytes (when identifier\n     * is undefined, default). If the identifier is undefined, the overall allocated number of bytes is returned.\n     * @param identifier - Identifier to return the allocated bytes for.\n     * @param allocate - Number of allocated bytes registered for identifier.\n     */\n    allocated(identifier?: string): number {\n        if (identifier === undefined) {\n            return this._bytes;\n        }\n        this.assertIdentifier(identifier);\n        return this._bytesByIdentifier.get(identifier)!;\n    }\n\n    /**\n     * Provides a pretty printed string of the allocated bytes of this register and their identifier. The output for a\n     * register of three objects could be as follows:\n     * ```\n     * IntermediateFBO: 10.582MiB, AccumulationPingFBO: 21.163MiB, AccumulationPongFBO: 21.163MiB\n     * ```\n     * @returns - Pretty printed string of all memory allocations.\n     */\n    toString(): string {\n        const output = new Array<string>();\n        this._bytesByIdentifier.forEach((bytes: number, identifier: string) => {\n            output.push(`${identifier}: ${prettyPrintBytes(bytes)}`);\n        });\n        return output.join(', ');\n    }\n\n    /**\n     * Provides a pretty printed string of the overall number of bytes or a specific identifier. If the identifier is\n     * undefined, the overall number of bytes is pretty printed.\n     * @param identifier - Identifier to pretty print the bytes for.\n     * @returns - Pretty printed string of the requested number of bytes.\n     */\n    bytesToString(identifier?: string): string {\n        return prettyPrintBytes(this.allocated(identifier));\n    }\n\n\n    /**\n     * Cache for the overall number of allocated bytes (over all identifiers). This should always be the sum of the\n     * bytes allocated over each identifier, which can be validated using validate().\n     *\n     * This property can be observed, e.g., `allocationRegister.bytesObservable.subscribe()`.\n     */\n    get bytes(): GLsizei {\n        return this._bytes;\n    }\n\n    /**\n     * Observable that can be used to subscribe to bytes value changes. Yields a 2-tuple of overall allocated bytes as\n     * number and pretty printed string.\n     */\n    get bytesObservable(): Observable<[GLsizei, string]> {\n        return this._bytesSubject.asObservable();\n    }\n}\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nfunction extract(str) {\n\tvar queryStart = str.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn str.slice(queryStart + 1);\n}\n\nfunction parse(str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^[?#&]/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeComponent(val);\n\n\t\tformatter(decodeComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tif (opts.sort === false) {\n\t\topts.sort = function () {};\n\t}\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort(opts.sort).map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\nexports.parseUrl = function (str, opts) {\n\treturn {\n\t\turl: str.split('?')[0] || '',\n\t\tquery: parse(extract(str), opts)\n\t};\n};\n","\nexport { Context } from './context';\nexport { Canvas } from './canvas';\nexport { Controller } from './controller';\n\nexport { ContextMasquerade } from './contextmasquerade';\nexport { ExtensionsHash } from './extensionshash';\nexport { ChangeLookup } from './changelookup';\nexport { MouseEventProvider } from './mouseeventprovider';\nexport { EventHandler } from './eventhandler';\n\nexport { Buffer } from './buffer';\nexport { Color } from './color';\nexport { ColorGradient } from './colorgradient';\nexport { DefaultFramebuffer } from './defaultframebuffer';\nexport { Framebuffer } from './framebuffer';\nexport { Geometry } from './geometry';\nexport { Program } from './program';\nexport { Renderbuffer } from './renderbuffer';\nexport { Renderer, Invalidate } from './renderer';\nexport { Shader } from './shader';\nexport { Texture2 } from './texture2';\nexport { TextureCube } from './texturecube';\nexport { VertexArray } from './vertexarray';\nexport { Wizard } from './wizard';\n\nexport { Camera } from './camera';\nexport { CameraModifier } from './cameramodifier';\nexport { Navigation } from './navigation';\nexport { FirstPersonModifier } from './firstpersonmodifier';\nexport { PanModifier } from './panmodifier';\nexport { PointerLock } from './pointerlock';\nexport { TrackballModifier } from './trackballmodifier';\nexport { TurntableModifier } from './turntablemodifier';\nexport { ZoomModifier } from './zoommodifier';\n\nexport { NdcFillingRectangle } from './ndcfillingrectangle';\nexport { NdcFillingTriangle } from './ndcfillingtriangle';\n\nexport { AntiAliasingKernel } from './antialiasingkernel';\nexport { RandomSquareKernel } from './randomsquarekernel';\nexport { KernelF32, KernelI32, KernelI8, KernelUI32, KernelUI8 } from './kernel';\n\nexport { AccumulatePass } from './accumulatepass';\nexport { BlitPass } from './blitpass';\nexport { ReadbackPass } from './readbackpass';\n\n\nimport * as root_auxiliaries from './auxiliaries';\nexport import auxiliaries = root_auxiliaries;\n\nexport { vec2, vec3, vec4 } from 'gl-matrix';\nexport { mat2, mat3, mat4 } from 'gl-matrix';\n\nimport * as root_gl_matrix_extensions from './gl-matrix-extensions';\nexport import gl_matrix_extensions = root_gl_matrix_extensions;\n\nimport * as root_raymath from './raymath';\nexport import ray_math = root_raymath;\n\nimport * as root_tuples from './tuples';\nexport import tuples = root_tuples;\n\nexport { supportsXR, RenderView, XRController } from './xrcontroller';\n","\n/**\n * IE11 polyfill for string.startsWith function, from https://stackoverflow.com/a/30867255.\n */\nif (String.prototype.startsWith === undefined) {\n    /* tslint:disable-next-line:space-before-function-paren */\n    String.prototype.startsWith = (searchString, position): boolean => {\n        position = position || 0;\n        return this.indexOf(searchString, position) === position;\n    };\n}\n\n/**\n * IE11 polyfill for Array.forEach function, from ...\n */\nif (Array.prototype.forEach === undefined) {\n    /* tslint:disable-next-line:space-before-function-paren */\n    Array.prototype.forEach = (action, that /*opt*/) => {\n        const n = this.length;\n        /* tslint:disable-prefer-for-of */\n        for (let i = 0; i < n; i++) {\n            if (i in this) {\n                action.call(that, this[i], i, this);\n            }\n        }\n    };\n}\n\n/**\n * IE11 polyfill for Math.log10 function\n */\nif (Math.log10 === undefined) {\n    /* tslint:disable-next-line:space-before-function-paren */\n    Math.log10 = (x) => Math.log(x) * Math.LOG10E;\n}\n\n/**\n * IE polyfill for Number.EPSILON.\n */\ninterface NumberPolyfill {\n    EPSILON: number;\n}\nif (Number.EPSILON === undefined) {\n    (Number as NumberPolyfill).EPSILON = Math.pow(2, -52);\n}\n","\nimport { EventHandler } from '../eventhandler';\nimport { MouseEventProvider } from '../mouseeventprovider';\nimport { Invalidate } from '../renderer';\n\n\nexport class TestNavigation {\n\n    protected _eventHandler: EventHandler;\n\n    protected _altered = false;\n\n\n    constructor(invalidate: Invalidate, mouseEventProvider: MouseEventProvider) {\n        this._eventHandler = new EventHandler(invalidate, mouseEventProvider);\n        this._eventHandler.pushMouseEnterHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\n            this.onMouseEnter(latests, previous));\n        this._eventHandler.pushMouseLeaveHandler((latests: Array<MouseEvent>, previous: Array<MouseEvent>) =>\n            this.onMouseLeave(latests, previous));\n    }\n\n    protected onMouseEnter(latests: Array<MouseEvent>, previous: Array<MouseEvent>) {\n        this._altered = false;\n    }\n\n    protected onMouseLeave(latests: Array<MouseEvent>, previous: Array<MouseEvent>) {\n        this._altered = true;\n    }\n\n    update() {\n        this._eventHandler.update();\n    }\n\n    reset() {\n        this._altered = false;\n    }\n\n    get altered(): boolean {\n        return this._altered;\n    }\n\n}\n","\nimport { assert } from '../auxiliaries';\n\n\nnamespace viewer {\n\n    /**\n     * Utility class providing simplified access to the clients fullscreen API. The toggle can be used to toggle\n     * fullscreen for a HTML element while managing the execution of custom toggle code.\n     *\n     * ```\n     * canvas.element.addEventListener('click', function() { gloperate.viewer.Fullscreen.toggle(canvas.element); });\n     * ```\n     *\n     * Use `:fullscreen` (or `:-moz-full-screen`, `:-webkit-full-screen`, and `:-ms-full-screen`) selectors in order to\n     * configure fullscreen specific style. Alternatively, an additional class, e.g., `fullscreen`, could be toggled\n     * via callaback.\n     */\n    export class Fullscreen {\n\n        /**\n         * Cached fullscreenchange event function of the clients specific fullscreen API.\n         */\n        protected static _event: string;\n\n        /**\n         * Callback that is to be triggered within the remove event listener.\n         */\n        protected static _callback: (() => void) | undefined;\n\n        /**\n         * Backup of the element's initial width and height.\n         */\n        protected static _size: [string, string] = ['0', '0'];\n\n        /**\n         * Cached exit call of the clients specific fullscreen API.\n         */\n        protected static _exit: () => void;\n\n        /**\n         * Cached request call of the clients specific fullscreen API.\n         */\n        protected static _request: (element: HTMLElement) => void;\n\n        /**\n         * Cached element call returning the fullscreen element specific to the clients fullscreen API.\n         */\n        protected static _element: () => HTMLElement;\n\n        /**\n         * Event listener used to add the remove event listener using on indirection, that is, the first fullscreen\n         * event triggered after a request is ignored. This is important for triggering the fullscreen callback before\n         * the request is completed. The listener adds the removeListener and removes itself as listener.\n         */\n        protected static addEventListener: EventListener = (): void => {\n            window.removeEventListener(Fullscreen._event, Fullscreen.addEventListener);\n            window.addEventListener(Fullscreen._event, Fullscreen.removeEventListener);\n        }\n\n        /**\n         * Event listener that is used to account for implicit fullscreen exit events, e.g., user explicitly uses a GUI\n         * element for entering fullscreen, but uses ESC to exit fullscreen. The listener triggers the callback provided\n         * on toggle and removes itself as listener.\n         */\n        protected static removeEventListener: EventListener = (): void => {\n            if (Fullscreen._callback) {\n                Fullscreen._callback();\n                Fullscreen._callback = undefined;\n            }\n            window.removeEventListener(Fullscreen._event, Fullscreen.removeEventListener);\n        }\n\n        /**\n         * Query and cache the client specific fullscreen API.\n         */\n        protected static queryAndCacheAPI(): void {\n            if (Fullscreen._exit !== undefined) {\n                return;\n            }\n\n            /**\n             * Shadow global document declaration with an untyped one. This is done in order to use vendor specific\n             * properties without a compile error.\n             */\n            const document = window.document as any;\n\n            // Query the API to use.\n            const exits = [\n                document.exitFullScreen,\n                document.msExitFullscreen,\n                document.mozCancelFullScreen, // notice the capital S for Screen\n                document.webkitExitFullscreen,\n                undefined];\n\n            let api = 0;\n            for (; api < exits.length; ++api) {\n                if (exits[api] === undefined) {\n                    continue;\n                }\n                break;\n            }\n\n            switch (api) {\n                case 0: // native\n                    Fullscreen._exit = () => document.exitFullScreen();\n                    Fullscreen._request = (element: HTMLElement) => element.requestFullscreen();\n                    Fullscreen._element = () => document.fullscreenElement;\n                    Fullscreen._event = 'fullscreenchange';\n                    break;\n\n                case 1: // microsoft\n                    Fullscreen._exit = () => document.msExitFullscreen();\n                    Fullscreen._request = (element: HTMLElement) => (element as any).msRequestFullscreen();\n                    Fullscreen._element = () => document.msFullscreenElement;\n                    Fullscreen._event = 'msfullscreenchange';\n                    break;\n\n                case 2: // mozilla\n                    Fullscreen._exit = () => document.mozCancelFullScreen();\n                    Fullscreen._request = (element: HTMLElement) => (element as any).mozRequestFullScreen();\n                    Fullscreen._element = () => document.mozFullScreenElement;\n                    Fullscreen._event = 'mozfullscreenchange';\n                    break;\n\n                case 3: // webkit\n                    Fullscreen._exit = () => document.webkitExitFullscreen();\n                    Fullscreen._request = (element: HTMLElement) => (element as any).webkitRequestFullscreen();\n                    Fullscreen._element = () => document.webkitFullscreenElement;\n                    Fullscreen._event = 'webkitfullscreenchange';\n                    break;\n\n                default:\n                    assert(false, `none of the following fullscreen apis was found: native, ms, moz, or webkit`);\n            }\n        }\n\n\n        /**\n         * Returns whether or not a fullscreen element exists, indicating if fullscreen is active or not.\n         */\n        static active(): boolean {\n            /* tslint:disable-next-line:no-null-keyword */\n            return Fullscreen._element() !== undefined && Fullscreen._element() !== null;\n        }\n\n        /**\n         * Requests or exits fullscreen mode for a given element. If the element is already in fullscreen, fullscreen\n         * mode is exited. Else, fullscreen mode is requested. The function considers various platform specific\n         * fullscreen interfaces, i.e., native, ms, moz, and webkit.\n         * @param element - Element to toggle fullscreen state of.\n         */\n        static toggle(element: HTMLElement, callback?: () => void): void {\n            if (element === undefined) {\n                return;\n            }\n            Fullscreen.queryAndCacheAPI();\n\n            const isFullscreen = Fullscreen.active();\n\n            if (!isFullscreen) {\n                /* Backup exact size of the element for restore when exiting fullscreen. */\n                const style = getComputedStyle(element);\n                Fullscreen._size[0] = style.width as string;\n                Fullscreen._size[1] = style.height as string;\n            }\n\n            /**\n             * The toggle callback is to be triggered first, always. Some browsers do not trigger a reflow when\n             * requesting or exiting fullscreen and simultaneously toggling some HTML element classes.\n             */\n            if (callback) {\n                callback();\n            }\n\n            if (!isFullscreen) {\n                /**\n                 * Requesting fullscreen and adding the addEL event listener to the fullscreenchange always triggers the\n                 * event listener on fullscreen request or exit. addEL then removes itself and adds the event listener,\n                 * which in turn triggers the given callback and also removes itself as listener. This is a solid way to\n                 * assure single callback execution per toggle.\n                 */\n                Fullscreen._callback = callback;\n                window.addEventListener(Fullscreen._event, Fullscreen.addEventListener);\n\n            } else {\n                /**\n                 * If the toggle for exiting fullscreen was made explicitly (not by the browser or indirectly) the\n                 * event listener is removed here since the callback was already called (above).\n                 */\n                Fullscreen._callback = undefined;\n                window.removeEventListener(Fullscreen._event, Fullscreen.removeEventListener);\n\n                element.style.width = Fullscreen._size[0];\n                element.style.height = Fullscreen._size[1];\n            }\n\n            isFullscreen ? Fullscreen._exit() : Fullscreen._request(element);\n        }\n\n    }\n\n}\n\nexport = viewer;\n","\n\nnamespace viewer {\n\n    interface HTMLEventListener { (event: Event): boolean; }\n\n    /**\n     * Auxiliary class for blocking and unblocking events on a HTML element. Example for blocking the contextmenu:\n     * ```\n     * blocker = new gloperate.EventBlocker(element);\n     * blocker.block('contextmenu');\n     * ```\n     */\n    export class EventBlocker {\n\n        /**\n         * Lookup table for blocked events and their listener.\n         */\n        private _blockListenerByEvent = new Map<string, HTMLEventListener>();\n\n        /**\n         * Element associated to this blocker.\n         */\n        protected _element: HTMLElement;\n\n        /**\n         * Creates an event blocker instance associated to a specific HTML element.\n         * @param element - Element that is to be associated with this blocker for block und unblock.\n         * @param events - Optional events that are blocked immediately.\n         */\n        constructor(element: HTMLElement, events?: Array<string>) {\n            this._element = element;\n            if (events === undefined) {\n                return;\n            }\n            for (const event of events) {\n                this.block(event);\n            }\n        }\n\n        /**\n         * Blocks a specific event by adding a listener the prevents the default and stops propagation.\n         * @param eventIdentifier - Event identifier that is to be blocked, e.g., 'contextmenu'.\n         */\n        block(eventIdentifier: string): void {\n            if (this._blockListenerByEvent.has(eventIdentifier)) {\n                return;\n            }\n            this._blockListenerByEvent.set(eventIdentifier,\n                (event): boolean => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    return false;\n                });\n            this._element.addEventListener(eventIdentifier,\n                this._blockListenerByEvent.get(eventIdentifier) as HTMLEventListener);\n        }\n\n        /**\n         * Unblocks a previously blocked event by removing the blocker/listener.\n         * @param eventIdentifier - Event identifier that is to be unblocked, e.g., 'contextmenu'.\n         */\n        unblock(eventIdentifier: string): void {\n            if (!this._blockListenerByEvent.has(eventIdentifier)) {\n                return;\n            }\n            this._element.removeEventListener(eventIdentifier,\n                this._blockListenerByEvent.get(eventIdentifier) as HTMLEventListener);\n            this._blockListenerByEvent.delete(eventIdentifier);\n        }\n\n    }\n\n}\n\nexport = viewer;\n","module.exports = \"\\nprecision lowp float;\\n\\n\\n#if __VERSION__ == 100\\n    #define texture(sampler, coord) texture2D(sampler, coord)\\n#else \\n    #define varying in\\n#endif\\n\\n\\n\\n#if __VERSION__ == 100\\n    #define fragColor gl_FragColor\\n    #extension GL_OES_standard_derivatives : enable\\n#else \\n    layout(location = 0) out vec4 fragColor;\\n#endif\\n\\nuniform int u_frameNumber;\\n\\nvarying vec2 v_uv;\\n\\n\\nvoid main(void)\\n{\\n    vec3 color = vec3(28.0 / 255.0, 117.0 / 255.0, 188.0 / 255.0);\\n    color += (vec3(0.0, v_uv) - 0.5) * 0.125;\\n\\n    vec2 awidth = fwidth(v_uv) * (sin(float(u_frameNumber) * 0.1) * 7.0 + 8.0);\\n    vec2 cstep = abs(step(awidth, v_uv) - step(awidth, 1.0 - v_uv));\\n    if(!any(bvec2(cstep))) {\\n        discard;\\n    }\\n    fragColor = vec4(color, 1.0); \\n}\\n\"","module.exports = \"\\nprecision lowp float;\\n\\n\\n#if __VERSION__ == 100\\n#else \\n    #define varying out\\n#endif\\n\\n\\nvoid ndcOffset(inout vec4 vertex, in vec2 offset) {\\n    vertex.xy = offset * vec2(vertex.w) + vertex.xy;\\n}\\n\\n\\n\\n#if __VERSION__ == 100\\n    attribute vec2 a_vertex;\\n#else \\n    layout(location = 0) in vec2 a_vertex;\\n#endif\\n\\nuniform vec2 u_ndcOffset;\\n\\nvarying vec2 v_uv;\\n\\n\\nvoid main(void)\\n{\\n    v_uv = a_vertex.xy * 0.5 + 0.5;\\n\\n    vec4 vertex = vec4(a_vertex, 0.0, 1.0);\\n    ndcOffset(vertex, u_ndcOffset);\\n\\n    gl_Position = vertex;\\n}\\n\"","\nimport { assert } from '../auxiliaries';\n\nimport { AccumulatePass } from '../accumulatepass';\nimport { AntiAliasingKernel } from '../antialiasingkernel';\nimport { BlitPass } from '../blitpass';\nimport { Context } from '../context';\nimport { DefaultFramebuffer } from '../defaultframebuffer';\nimport { Framebuffer } from '../framebuffer';\nimport { MouseEventProvider } from '../mouseeventprovider';\nimport { NdcFillingTriangle } from '../ndcfillingtriangle';\nimport { Program } from '../program';\nimport { Renderbuffer } from '../renderbuffer';\nimport { Invalidate, Renderer } from '../renderer';\nimport { Shader } from '../shader';\nimport { Texture2 } from '../texture2';\nimport { TestNavigation } from './testnavigation';\n\n\nnamespace debug {\n\n    export class TestRenderer extends Renderer {\n\n        protected _extensions = false;\n        protected _program: Program;\n\n        protected _ndcOffsetKernel: AntiAliasingKernel;\n        protected _uNdcOffset: WebGLUniformLocation;\n        protected _uFrameNumber: WebGLUniformLocation;\n        protected _ndcTriangle: NdcFillingTriangle;\n\n        protected _accumulate: AccumulatePass;\n        protected _blit: BlitPass;\n\n        protected _defaultFBO: DefaultFramebuffer;\n        protected _colorRenderTexture: Texture2;\n        protected _depthRenderbuffer: Renderbuffer;\n        protected _intermediateFBO: Framebuffer;\n\n        protected _testNavigation: TestNavigation;\n\n\n        protected onInitialize(context: Context, callback: Invalidate,\n            mouseEventProvider: MouseEventProvider,\n            /* keyEventProvider: KeyEventProvider, */\n            /* touchEventProvider: TouchEventProvider */): boolean {\n\n            const gl = this._context.gl;\n            const gl2facade = this._context.gl2facade;\n\n            /* Enable required extensions. */\n\n            if (this._extensions === false && this._context.isWebGL1) {\n                assert(this._context.supportsStandardDerivatives, `expected OES_standard_derivatives support`);\n                /* tslint:disable-next-line:no-unused-expression */\n                this._context.standardDerivatives;\n                this._extensions = true;\n            }\n\n            /* Create and configure program and geometry. */\n\n            const vert = new Shader(this._context, gl.VERTEX_SHADER, 'testrenderer.vert');\n            vert.initialize(require('./testrenderer.vert'));\n            const frag = new Shader(this._context, gl.FRAGMENT_SHADER, 'testrenderer.frag');\n            frag.initialize(require('./testrenderer.frag'));\n\n            this._program = new Program(this._context);\n            this._program.initialize([vert, frag]);\n\n            this._uNdcOffset = this._program.uniform('u_ndcOffset');\n            this._uFrameNumber = this._program.uniform('u_frameNumber');\n\n            this._ndcTriangle = new NdcFillingTriangle(this._context);\n            const aVertex = this._program.attribute('a_vertex', 0);\n            this._ndcTriangle.initialize(aVertex);\n\n            this._ndcOffsetKernel = new AntiAliasingKernel(this._multiFrameNumber);\n\n            /* Create framebuffers, textures, and render buffers. */\n\n            this._defaultFBO = new DefaultFramebuffer(this._context, 'DefaultFBO');\n            this._defaultFBO.initialize();\n\n            this._colorRenderTexture = new Texture2(this._context, 'ColorRenderTexture');\n            this._depthRenderbuffer = new Renderbuffer(this._context, 'DepthRenderbuffer');\n\n            this._intermediateFBO = new Framebuffer(this._context, 'IntermediateFBO');\n\n            /* Create and configure accumulation pass. */\n\n            this._accumulate = new AccumulatePass(this._context);\n            this._accumulate.initialize(this._ndcTriangle);\n            this._accumulate.precision = this._framePrecision;\n            this._accumulate.texture = this._colorRenderTexture;\n            // this._accumulate.depthStencilAttachment = this._depthRenderbuffer;\n\n            /* Create and configure blit pass. */\n\n            this._blit = new BlitPass(this._context);\n            this._blit.initialize(this._ndcTriangle);\n            this._blit.readBuffer = gl2facade.COLOR_ATTACHMENT0;\n            this._blit.drawBuffer = gl.BACK;\n            this._blit.target = this._defaultFBO;\n\n            /* Create and configure test navigation. */\n\n            this._testNavigation = new TestNavigation(() => this.invalidate(), mouseEventProvider);\n\n            return true;\n        }\n\n        protected onUninitialize(): void {\n            super.uninitialize();\n\n            this._uNdcOffset = -1;\n            this._uFrameNumber = -1;\n            this._program.uninitialize();\n\n            this._ndcTriangle.uninitialize();\n\n            this._intermediateFBO.uninitialize();\n            this._defaultFBO.uninitialize();\n            this._colorRenderTexture.uninitialize();\n            this._depthRenderbuffer.uninitialize();\n\n            this._blit.uninitialize();\n        }\n\n\n        protected onUpdate(): boolean {\n            this._testNavigation.update();\n\n            const redraw = this._testNavigation.altered;\n            this._testNavigation.reset();\n\n            if (!redraw && !this._altered.any) {\n                return false;\n            }\n\n            if (this._altered.multiFrameNumber) {\n                this._ndcOffsetKernel.width = this._multiFrameNumber;\n            }\n\n            return redraw;\n        }\n\n        protected onPrepare(): void {\n            const gl = this._context.gl;\n            const gl2facade = this._context.gl2facade;\n\n            if (!this._intermediateFBO.initialized) {\n                this._colorRenderTexture.initialize(this._frameSize[0], this._frameSize[1],\n                    this._context.isWebGL2 ? gl.RGBA8 : gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE);\n                this._depthRenderbuffer.initialize(this._frameSize[0], this._frameSize[1], gl.DEPTH_COMPONENT16);\n                this._intermediateFBO.initialize([[gl2facade.COLOR_ATTACHMENT0, this._colorRenderTexture]\n                    , [gl.DEPTH_ATTACHMENT, this._depthRenderbuffer]]);\n\n            } else if (this._altered.frameSize) {\n                this._intermediateFBO.resize(this._frameSize[0], this._frameSize[1]);\n            }\n\n            if (this._altered.clearColor) {\n                this._intermediateFBO.clearColor(this._clearColor);\n            }\n\n            this._accumulate.update();\n\n            this._altered.reset();\n        }\n\n        protected onFrame(frameNumber: number): void {\n            const gl = this._context.gl;\n\n            gl.viewport(0, 0, this._frameSize[0], this._frameSize[1]);\n\n            this._program.bind();\n\n            const ndcOffset = this._ndcOffsetKernel.get(frameNumber);\n            ndcOffset[0] = 2.0 * ndcOffset[0] / this._frameSize[0];\n            ndcOffset[1] = 2.0 * ndcOffset[1] / this._frameSize[1];\n            gl.uniform2fv(this._uNdcOffset, ndcOffset);\n            gl.uniform1i(this._uFrameNumber, frameNumber);\n\n            this._intermediateFBO.clear(gl.COLOR_BUFFER_BIT, true, false);\n            this._ndcTriangle.bind();\n            this._ndcTriangle.draw();\n            this._intermediateFBO.unbind();\n\n            this._accumulate.frame(frameNumber);\n        }\n\n        protected onSwap(): void {\n            this._blit.framebuffer = this._accumulate.framebuffer ?\n                this._accumulate.framebuffer : this._blit.framebuffer = this._intermediateFBO;\n            this._blit.frame();\n        }\n\n\n    }\n\n}\n\nexport = debug;\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'exclusiveMinimum': true,\n  'exclusiveMaximum': true,\n  'additionalItems': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      return v.id && ('<' + v.id + '>') || (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  options.throwError = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n\n  if (! res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n      ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var msg = (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n      ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    return (v.id && ('<' + v.id + '>')) || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, properties[property], options, ctx);\n    }\n\n    var prop = Object.hasOwnProperty.call(instance, property) ? instance[property] : undefined;\n    var res = this.validateSchema(prop, properties[property], options, ctx.makeChild(properties[property], property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existance tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"additionalProperty \" + JSON.stringify(property) + \" exists in instance when not allowed\",\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var expr = new RegExp(pattern);\n      if (!expr.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, patternProperties[pattern], options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], patternProperties[pattern], options, ctx.makeChild(patternProperties[pattern], property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    })\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (!schema.items) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    var items = Array.isArray(schema.items) ? (schema.items[i] || schema.additionalItems) : schema.items;\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = true;\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    valid = instance > schema.minimum;\n  } else {\n    valid = instance >= schema.minimum;\n  }\n  if (!valid) {\n    result.addError({\n      name: 'minimum',\n      argument: schema.minimum,\n      message: \"must have a minimum value of \" + schema.minimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid;\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    valid = instance < schema.maximum;\n  } else {\n    valid = instance <= schema.maximum;\n  }\n  if (!valid) {\n    result.addError({\n      name: 'maximum',\n      argument: schema.maximum,\n      message: \"must have a maximum value of \" + schema.maximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument)\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatability with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\"\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(instance[n]===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.match(schema.pattern)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates that every item in an instance array is unique, when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  function testArrays (v, i, a) {\n    for (var j = i + 1; j < a.length; j++) if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n    return true;\n  }\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var schemaId = type && type.id && ('<' + type.id + '>') || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    this.unresolvedRefs.push(uri);\n  }\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!(schemas instanceof Array)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if (!options) {\n    options = {};\n  }\n  var propertyName = options.propertyName || 'instance';\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var base = urilib.resolve(options.base||anonymousBase, schema.id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, propertyName, base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if (schema) {\n    var result = this.validateSchema(instance, schema, options, ctx);\n    if (!result) {\n      throw new Error('Result undefined');\n    }\n    return result;\n  }\n  throw new SchemaError('no schema specified', schema);\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n    // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (schema['extends'] instanceof Array) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema;\n  if (switchSchema = shouldResolve(schema)) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.propertyPath, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n}\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref;\n  if(ref = shouldResolve(schema)) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n}\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance) === 'object' && !(instance instanceof Array) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\nimport { Validator } from 'jsonschema';\n\nimport { assert, logIf, LogLevel } from './auxiliaries';\n\nimport { ChangeLookup } from './changelookup';\n\n\nnamespace properties {\n\n    /**\n     * Validates if an object (POJO/JSON) adheres to a specific structure using a JSON schema.\n     * @param instance - Object to validate.\n     * @param schema - JSON schema used for validation.\n     * @param references - Schema references for types etc.\n     * @returns - True iff the provided instance in valid according to the schema.\n     */\n    export function validate(instance: any, schema: object, references?: Array<[object, string]>): boolean {\n        const validator = new Validator();\n        if (references !== undefined) {\n            for (const reference of references) {\n                validator.addSchema(reference[0], reference[1]);\n            }\n        }\n        /* Validate of (sub) schema of given POJO/JSON. */\n        const result = validator.validate(instance, schema);\n\n        logIf(!result.valid, LogLevel.Dev, `schema conformance issue (setter ignored):\\n${result.toString()}`);\n        return result.valid;\n    }\n\n\n    /**\n     * Complements default values for all (nested) properties and array's of objects of a given object (POJO/JSON).\n     * ```\n     * const schema: any = { type: 'object', properties: {\n     *          foo: { type: 'object', properties: {\n     *              bar: { type: 'string', default: 'moep' },\n     *              baz: { type: 'string' } } } } };\n     *\n     * const object: any = { };\n     * JsonSchema.complement(object, schema);\n     * console.log(object.foo.bar); // should exist and output 'moep'\n     * ```\n     *\n     * @param instance - Object to complement default values for.\n     * @param schema - Schema used for validation.\n     */\n    export function complement(instance: any | undefined, schema: any): void {\n        if (instance === undefined) {\n            return;\n        }\n        assert((schema.hasOwnProperty('properties') && (schema as any)['type'] === 'object') ||\n            (schema.hasOwnProperty('items') && (schema as any)['type'] === 'array'),\n            `expected schema to have 'properties' or 'items', given ${schema}`);\n\n        /* tslint:disable-next-line:switch-default */\n        switch ((schema as any)['type']) {\n\n            case 'object':\n                const propertiesSchema = (schema as any)['properties'];\n                const properties = Object.getOwnPropertyNames(propertiesSchema);\n\n                for (const key of properties) {\n                    const propertySchema = propertiesSchema[key];\n                    const type: string | undefined = propertySchema['type'];\n\n                    const isObject = type === 'object';\n                    const isDefined = instance.hasOwnProperty(key);\n\n                    const hasProperties = propertySchema.hasOwnProperty('properties');\n                    const hasDefault = propertySchema.hasOwnProperty('default');\n\n                    assert((hasProperties && isObject) || (!hasProperties && !isObject),\n                        `expected property '${key}' to be of type 'object', given '${propertySchema['type']}'`);\n\n                    if (isDefined && hasProperties) {\n                        /* Invoke recursive defaulting for already defined object with properties. */\n                        complement(instance[key], propertySchema);\n\n                    } else if (hasProperties) {\n                        /* Invoke recursive defaulting for not yet defined object with properties. */\n                        Object.defineProperty(instance, key, { value: {} });\n                        complement(instance[key], propertySchema);\n\n                    } else if (!isDefined && hasDefault) {\n                        /* Default value for not yet defined property. */\n                        Object.defineProperty(instance, key, { value: propertySchema['default'] });\n                    }\n                }\n                break;\n\n            case 'array':\n                const itemsSchema = (schema as any)['items'];\n                if (itemsSchema['type'] !== 'object') {\n                    break;\n                }\n                /* Invoke recursive defaulting for array of objects. */\n                for (const name of Object.getOwnPropertyNames(instance)) {\n                    if (name === 'length') {\n                        continue;\n                    }\n                    complement(instance[name], itemsSchema);\n                }\n                break;\n        }\n    }\n\n    /**\n     * Deep comparison of two objects. It returns whether or not changes have been found (returns true) or objects\n     * seem to be equal w.r.t. to their property structure and respective values (returns false). All changes that\n     * are found will be passed to the alteration lookup.\n     * @param objectL - Left operand for deep comparison.\n     * @param objectR - Right operand for deep comparison.\n     * @param lookup - Actual alteration lookup used for top-down property traversal.\n     * @returns - False iff both objects are equal w.r.t. structure and values. True otherwise.\n     */\n    export function compare(objectL: any | undefined, objectR: any | undefined,\n        tracker?: ChangeLookup, path: string = ''): boolean {\n\n        const track = tracker !== undefined;\n        assert(!track || (tracker as object).hasOwnProperty('any'),\n            `expected allocation lookup object to have 'any' key`);\n\n        if ((objectL === undefined && objectR !== undefined) || (objectL !== undefined && objectR === undefined)) {\n            if (track) {\n                (tracker as ChangeLookup).alter(path);\n            }\n            return true;\n        }\n\n        let equals = true;\n\n        /* Primitive compare if at least one operand is neither object nor array. */\n        let types: [string, string] = [typeof objectL, typeof objectR];\n        const isArray: [boolean, boolean] = [objectL instanceof Array, objectR instanceof Array];\n\n        if ((!isArray[0] || !isArray[1]) && (types[0] !== 'object' || types[1] !== 'object')) {\n            equals = objectL === objectR;\n            if (!equals && track) {\n                (tracker as ChangeLookup).alter(`${path}`);\n            }\n            return !equals;\n        }\n\n        /* Get set of unique names of both objects. */\n        const names: Array<string> = Array.from(new Set<string>(\n            Array<string>().concat(Object.getOwnPropertyNames(objectL), Object.getOwnPropertyNames(objectR))).values());\n\n        /* Deep compare if both operands are either object or array. */\n        for (const name of names) {\n            if (name === 'length') {\n                continue;\n            }\n            const values = [(objectL as any)[name], (objectR as any)[name]];\n            types = [typeof values[0], typeof values[1]];\n\n            const propertyPath = `${path}${path.length > 0 && !isArray[0] ? '.' : ''}${!isArray[0] ? name : ''}`;\n\n            if ((values[0] instanceof Array && values[1] instanceof Array) ||\n                (types[0] === 'object' && types[1] === 'object')) {\n                equals = equals && !compare(values[0], values[1], tracker, propertyPath);\n            } else {\n                if (types[0] === types[1] && values[0] === values[1]) {\n                    continue;\n                }\n                equals = false;\n                if (track) {\n                    (tracker as ChangeLookup).alter(propertyPath);\n                }\n            }\n        }\n        return !equals;\n    }\n\n}\n\nexport = properties;\n","\nexport * from './webgl-operate.slim';\n\n\n// /* ADVANCED facilities */\n\nimport * as root_properties from './properties';\nexport import properties = root_properties;\n\n\n// /* DEBUG facilities */\n\nimport * as debug_TestNavigation from './debug/testnavigation';\nimport * as debug_TestRenderer from './debug/testrenderer';\n\nexport namespace debug {\n    export import TestRenderer = debug_TestRenderer.TestRenderer;\n    export import TestNavigation = debug_TestNavigation.TestNavigation;\n}\n\n\n/* VIEWER facilities */\n\nimport * as viewer_EventBlocker from './viewer/eventblocker';\nimport * as viewer_Fullscreen from './viewer/fullscreen';\n\nexport namespace viewer {\n    export import EventBlocker = viewer_EventBlocker.EventBlocker;\n    export import Fullscreen = viewer_Fullscreen.Fullscreen;\n}\n\n\n/* DEVELOPMENT facilities (should be none when publishing) */\n"],"sourceRoot":""}